{"version":3,"sources":["./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.component.ts","./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.html","./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.scss","./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/index.ts","./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.component.ts","./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.html","./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.scss","./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.component.ts","./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.html","./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.scss","./src/app/pages/main/ventas/emisionRemitos/index.ts","./src/app/pages/main/ventas/index.ts","./src/app/pages/main/ventas/ventas.component.ts","./src/app/pages/main/ventas/ventas.module.ts","./src/app/pages/main/ventas/ventas.routing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,sFAAiD;AACjD,+EAAyD;AACzD,8DAAmD;AACnD,qHAA6F;AAE7F,qFAA6E;AAS7E,IAAa,eAAe;IAgDxB,yBACW,YAA0B,EACzB,iBAAoC;QAFhD,iBAGK;QAFM,iBAAY,GAAZ,YAAY,CAAc;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAjDhD,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG,QAAQ,CAAC;QAClB,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,EAAE,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAClB,sBAAsB;QAEtB,qBAAqB;QACZ,kBAAa,GAAG,KAAK,CAAC;QAStB,sBAAiB,GAAG,KAAK,CAAC;QAcnC,sBAAiB,GAGb,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,sBAAe,CAAC,EAAE,CAAC,EAAE;QAErD,yBAAoB,GAAqB,IAAI,mCAAgB,EAAE,CAAC;QAChE,0CAA0C;QAC1C,0BAAqB,GAAW,CAAC,CAAC,CAAC;QAO1B,oBAAe,GAAG,KAAK,CAAC;QAwBjC,qBAAgB,GAAG,UAAC,CAAM;YACtB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;QACzB,CAAC;QAgDD;;WAEG;QACH,gBAAW,GAAG,UAAC,IAAuB,IAAK,iBAAC,GAAG;YAE3C,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,IAAI,KAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChD,IAAM,eAAe,GAAG,KAAI,CAAC,UAAU;qBAClC,IAAI,CACD,YAAE,IAAI,SAAE,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,EAAvC,CAAuC,CAChD,CAAC;gBAEN,EAAE,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC;oBACvB,YAAY;oBACZ,MAAM,CAAC,eAAe,IAAI,eAAe,CAAC,GAAG,CAAC;wBAC1C,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;gBACnE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CACjC,eAAe,IAAI,eAAe,CAAC,GAAG,CAAC;wBACnC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,CAC/B;gBACL,CAAC;YAEL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI;YACf,CAAC;QAEL,CAAC,EAvB0C,CAuB1C;QAGD;;WAEG;QACH,yBAAoB,GAAG,UAAC,YAAY;YAChC,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CACjC,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAC/B,kBAAQ,IAAI,eAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC9D,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,EAD5D,CAC4D,CAC3E,CACJ,CAAC;QACN,CAAC;QAED;;WAEG;QACH,uBAAkB,GAAG,UAAC,UAAe;YACjC,mCAAmC;YACnC,IAAM,QAAQ,GAAG,UAAU,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;YAEhG,mDAAmD;YACnD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,gCAAgC;gBAChC,IAAM,WAAW,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAChE,UAAC,CAAmB,IAAK,QAAC,CAAC,WAAW,KAAK,QAAQ,EAA1B,CAA0B,CACtD,CAAC;gBAEF,2CAA2C;gBAC3C,EAAE,EAAC,WAAW,CAAC,CAAC,CAAC;oBACb,KAAI,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;gBAChD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,sCAAsC,CAAC,EAAE,EAAE;gBACpF,CAAC;YACJ,CAAC;YAGF,UAAU,CAAC,cAAI,YAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAzC,CAAyC,EAAE,GAAG,CAAC,CAAC;YAE/D,wCAAwC;YACxC,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC;QAED,gBAAW,GAAG,UAAC,KAAK,IAAK,YAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,sCAAsC,CAAC,GAAG,IAAI,EAAxG,CAAwG;QAEjI,cAAS,GAAG,cAAM,YAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,sCAAsC,CAAC,EAA5E,CAA4E;QAC9F;;WAEG;QACH,wBAAmB,GAAG;YAClB,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5E,CAAC;QAED;;WAEG;QACH,qBAAgB,GAAG,UAAC,CAAC,IAAK,iBAAC,GAAG,IAAK,iBAAC,MAAM,IAAK,iBAAC,IAAI;YAChD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC;gBAAC,MAAM,CAAC;YAExE,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAEhF,8BAA8B;YAC9B,CAAC,MAAM,KAAK,WAAW,CAAC,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;YAEpF,4DAA4D;YAC5D,CAAC,MAAM,KAAK,UAAU,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAC5D,CAAC,EAV8C,CAU9C,EAVkC,CAUlC,EAVyB,CAUzB;QAED,yBAAoB,GAAG,UAAC,CAAC,IAAK,iBAAC,GAAG,IAAK,iBAAC,IAAI;YACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC;gBAAC,MAAM,CAAC;YAExD,IAAI,CAAC,GAAG,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACpE,CAAC,EAJsC,CAItC,EAJ6B,CAI7B;QAGD;;WAEG;QACH,uBAAkB,GAAG,UAAC,CAAM,IAAK,iBAAC,QAAQ;YACtC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,+EAA+E;YAC/E,KAAI,CAAC,qBAAqB;gBACtB,KAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,qBAAqB,CAAC;QAClI,CAAC,EALgC,CAKhC;QAED;;WAEG;QACH,yBAAoB,GAAG,UAAC,CAAM;YAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,oBAAU;gBACjD,oBAAoB;gBACpB,IAAM,UAAU,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,KAAI,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC;gBACnG,gBAAgB;gBAChB,UAAU,GAAG,KAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAC/D,qCAAqC;gBACrC,KAAI,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC;QACN,CAAC;QAED;;WAEG;QACH,8BAAyB,GAAG,UAAC,UAAU;YACnC,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;QACzC,CAAC;QAED,qBAAgB,GAAG,UAAC,GAAG,IAAK,iBAAC,IAAI;YAC7B,UAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa;QAArD,CAAqD,EAD7B,CAC6B;QAmBzD,8BAA8B;QAC9B,kBAAa,GAAG,UAAC,IAAI,IAAK,iBAAC,GAAG,IAAK,UAAG,CAAC,SAAS,IAAI,CAChD,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC;YACpE,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC;YAChD,CAAC,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,cAAc,CAAC;YAC9D,CAAC,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,cAAc,CAAC,CACjE,EALkC,CAKlC,EALyB,CAKzB;QAKD;;WAEG;QACH,0BAAqB,GAAG,UAAC,IAAI,IAAK,iBAAC,GAAG;YAClC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACP,uJAAuJ;gBACvJ,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;oBACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;wBACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc;4BACrC,IAAI,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAEpE,oEAAoE;gBACpE,MAAM,CAAC,6BAA0B,GAAG,CAAC,WAAW,GAAG,mBAAiB,MAAQ,GAAG,EAAE,CAAE;YACvF,CAAC;QACL,CAAC,EAXiC,CAWjC;QAED,uBAAkB,GAAG;YACjB,IAAM,cAAc,GAAG,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAElD,MAAM,CAAC;gBACH,GAAG,EAAE,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI;gBACpC,IAAI,EAAE,CAAC,cAAc,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,IAAI;aAC1C;QACL,CAAC;QAED;;;WAGG;QACH,kBAAa,GAAG;YACZ,EAAE,EAAC,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,WAAW,CAAC,IAAI,IAAI,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvH,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,gBAAgB;oBACxC,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;oBACtC,KAAI,CAAC,WAAW,CAAC,MAAM;oBACvB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ;oBAChC,KAAI,CAAC,iBAAiB;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,gBAAgB;oBACxC,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;oBACtC,KAAI,CAAC,WAAW,CAAC,MAAM;oBACvB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ;YACpC,CAAC;QACL,CAAC;QAGD,2BAAsB,GAAG,UAAC,GAAG;YACzB,IAAM,IAAI,GAAG,CACT,GAAG,CAAC,GAAG,KAAK,UAAU;gBACtB,CACI,GAAG,CAAC,GAAG,KAAK,cAAc;oBAC1B,GAAG,CAAC,MAAM,KAAK,SAAS,CAC3B;gBACD,GAAG,CAAC,GAAG,KAAK,aAAa,CAC5B;gBACG,KAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;gBACjC,CACI,CACI,CAAC,KAAI,CAAC,eAAe;oBACrB,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CACjD;oBACD,CACI,KAAI,CAAC,eAAe;wBACpB,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAChD,IAAI,CACD,GAAG,CAAC,GAAG,KAAK,aAAa;oBACzB,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAChD,CAEJ;YAEL,MAAM,CAAC,IAAI;QACf,CAAC;QAED;;WAEG;QACH,gBAAW,GAAG,UAAC,CAAC,EAAE,GAAG,IAAK,UAAG,CAAC,OAAO;YACjC,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,EADhB,CACgB;IAzTtC,CAAC;IAEL,kCAAQ,GAAR;QAAA,iBAUC;QATG,gDAAgD;QAChD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,2BAAiB;gBAChD,KAAI,CAAC,iBAAiB,CAAC,KAAK,GAAG,iBAAiB,CAAC;gBACjD,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACP,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAGD,+BAAK,GAAL,UAAM,GAAW;QACb,MAAM,CAAC,CAAC,GAAG,CAAC;IAChB,CAAC;IAMD;;;OAGG;IACH,yCAAe,GAAf,UAAgB,GAAG;QACf,IAAI,MAAM,GAAG;YACT,OAAO,EAAE,GAAG,CAAC,KAAK;YAClB,YAAY,EAAE,MAAM;SACvB,CAAC;QACF,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,kCAAQ,GAAR,UAAS,QAAQ,EAAE,GAAI;QACnB,IAAM,QAAQ,GAAQ,OAAO,QAAQ,CAAC;QAEtC,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;QAClC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/B,2CAA2C;YAC3C,EAAE,CAAC,CACC,QAAQ;gBACR,CACI,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,gBAAgB;oBAC9C,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,GAAG,CAEvD,CAAC,CAAC,CAAC;gBACC,MAAM,CAAC,MAAG,QAAQ,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAG,QAAQ,CAAC,GAAG,UAAI,QAAQ,CAAC,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAG,QAAQ,CAAC,KAAK,SAAI,QAAQ,CAAC,IAAM;YAC/H,CAAC;QACL,CAAC;QAAA,CAAC;QAEF,qCAAqC;QACrC,kBAAkB;QAClB,wCAAwC;QACxC,kDAAkD;QAClD,eAAe;QAGf,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC;YAC5D,QAAQ;YACR,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC;IAChD,CAAC;IA6ID,wDAAwD;IACxD,yCAAe,GAAf,UAAgB,IAAI;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAG;gBAExB,MAAM,CAAC,GAAG,CAAC,SAAS,IAAI,CACpB,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,aAAa,CAAC;oBACpE,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC;oBAChD,CAAC,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,cAAc,CAAC;oBAC9D,CAAC,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,SAAS,KAAK,IAAI,CAAC,cAAc,CAAC,CACjE;YAEL,CAAC,CAAC,CAAC;QACP,CAAC;QAAA,CAAC;IACN,CAAC;IA6FL;AAAA;AArWa;IAAR,YAAK,EAAE;;sDAAuB;AAGtB;IAAR,YAAK,EAAE;;gDAAS;AACR;IAAR,YAAK,EAAE;;6CAAM;AACL;IAAR,YAAK,EAAE;;6CAAM;AACL;IAAR,YAAK,EAAE;;+CAAQ;AACP;IAAR,YAAK,EAAE;;oDAAa;AACZ;IAAR,YAAK,EAAE;;oDAAa;AACZ;IAAR,YAAK,EAAE;;0DAA2B;AAC1B;IAAR,YAAK,EAAE;;mDAMJ;AAKK;IAAR,YAAK,EAAE;kDAAsB,sBAAe,oBAAf,sBAAe;4DAAqB;AAWzD;IAAR,YAAK,EAAE;;6DAAsB;AAGrB;IAAR,YAAK,EAAE;;oDAAa;AAEZ;IAAR,YAAK,EAAE;;wDAAyB;AA9CxB,eAAe;IAN3B,gBAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,2HAAqC;QACrC,2HAAqC;KACxC,CAAC;yDAmD2B,2BAAY,oBAAZ,2BAAY,sDACN,uCAAiB,oBAAjB,uCAAiB;GAlDvC,eAAe,CA8W5B;AA9Wa,0CAAe;;;;;;;;;ACf5B,oXAAoX,kBAAkB,2QAA2Q,2DAA2D,YAAY,izCAAizC,oOAAoO,qJAAqJ,gJAAgJ,4NAA4N,+YAA+Y,i8BAAi8B,yBAAyB,sOAAsO,4FAA4F,sQAAsQ,iBAAiB,gPAAgP,mDAAmD,2OAA2O,4CAA4C,8MAA8M,iKAAiK,yCAAyC,yHAAyH,qjBAAqjB,mRAAmR,gIAAgI,gFAAgF,0MAA0M,mRAAmR,8rBAA8rB,iBAAiB,q0CAAq0C,+GAA+G,cAAc,iBAAiB,0ZAA0Z,iBAAiB,ooDAAooD,kBAAkB,4zG;;;;;;;ACAn9W,uFAAuF,gBAAgB,EAAE,8DAA8D,uBAAuB,EAAE,UAAU,oBAAoB,EAAE,+BAA+B,iCAAiC,EAAE,uBAAuB,0BAA0B,mBAAmB,gCAAgC,EAAE,6BAA6B,2BAA2B,yBAAyB,EAAE,6BAA6B,yBAAyB,qBAAqB,EAAE,wDAAwD,6BAA6B,6BAA6B,sBAAsB,mBAAmB,wBAAwB,EAAE,yCAAyC,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,+BAA+B,gCAAgC,sCAAsC,EAAE,wDAAwD,6BAA6B,6BAA6B,sBAAsB,gCAAgC,iCAAiC,4CAA4C,yBAAyB,EAAE,oEAAoE,qBAAqB,4BAA4B,2BAA2B,0BAA0B,yBAAyB,yBAAyB,EAAE,sEAAsE,iCAAiC,EAAE,uCAAuC,qBAAqB,EAAE,uDAAuD,wBAAwB,EAAE,6CAA6C,qBAAqB,yBAAyB,aAAa,cAAc,EAAE,6CAA6C,iBAAiB,qBAAqB,EAAE,yCAAyC,sBAAsB,0BAA0B,wBAAwB,yBAAyB,0BAA0B,mBAAmB,kBAAkB,gBAAgB,sBAAsB,mCAAmC,2BAA2B,EAAE,gDAAgD,uBAAuB,EAAE,6CAA6C,+BAA+B,EAAE,gCAAgC,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,2CAA2C,EAAE,gDAAgD,wBAAwB,EAAE,0CAA0C,uBAAuB,EAAE,oBAAoB,eAAe,EAAE,2BAA2B,kBAAkB,EAAE,G;;;;;;;;;;;;;ACAh3F,kIAA2C;;;;;;;;;;;;;;;;;;;;ACA3C,sFAAuE;AAWvE,IAAa,cAAc;IAYvB;QAAA,iBAAiB;QATR,gBAAW,GAAG,KAAK,CAAC;QAE7B,gDAAgD;QACtC,wBAAmB,GAAG,IAAI,mBAAY,EAAa,CAAC;QACpD,2BAAsB,GAAG,IAAI,mBAAY,EAAa,CAAC;QAEjE,kBAAa,GAAgB,EAAE,CAAC;QAChC,iBAAY,GAAW,IAAI,CAAC;QAI5B;;WAEG;QACH,qBAAgB,GAAG,UAAC,CAAC,IAAK,iBAAC,EAAa;YACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,YAAY,GAAG,MAAM,GAAG,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;gBACnD,mEAAmE;gBACnE,MAAM;oBACF,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC;oBACjC,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAEzC,kIAAkI;gBAClI,MAAM;oBACF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC3B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,EAAtC,CAAsC,CAAC,CAAC;YAC1G,CAAC;QACL,CAAC,EAdyB,CAczB;QAED;;WAEG;QACH,mBAAc,GAAG,UAAC,MAAM;YACpB,aAAM,IAAI,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC;gBACzC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI;QADtD,CACsD;IA1B1C,CAAC;IA6BrB,qBAAC;AAAD,CAAC;AAvCY;IAAR,YAAK,EAAE;;iDAAW;AACV;IAAR,YAAK,EAAE;;mDAAqB;AAGnB;IAAT,aAAM,EAAE;;2DAAqD;AACpD;IAAT,aAAM,EAAE;;8DAAwD;AAPxD,cAAc;IAN1B,gBAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;QAC5B,yHAAoC;QACpC,yHAAoC;KACvC,CAAC;;GAEW,cAAc,CAyC1B;AAzCY,wCAAc;;;;;;;;ACX3B,2PAA2P,gBAAgB,ycAAyc,kBAAkB,kD;;;;;;;ACAtuB,6DAA6D,kBAAkB,mBAAmB,EAAE,yCAAyC,0BAA0B,EAAE,8CAA8C,0BAA0B,EAAE,8BAA8B,mBAAmB,EAAE,2CAA2C,uBAAuB,oBAAoB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9X,+DAA4B;AAC5B,oEAAiC;AACjC,sFAOuB;AAEvB,+EAAyD;AACzD,4EAA6C;AAC7C,iEAAmD;AACnD,mFAA6D;AAC7D,+EAAyD;AAKzD,uFAAiE;AACjE,8DAAgD;AAChD,yEAA2D;AAE3D,2EAAqD;AAErD,qEAA+C;AAC/C,qHAA6F;AAC7F,yHAAgE;AAEhE,mEAAqD;AAErD,iFAAmE;AACnE,qEAAuD;AACvD,iGAAmF;AAInF,sEAA+C;AAI/C,qFAA2D;AAI3D,4FAAwE;AACxE,qEAAuD;AACvD,yEAA+C;AAC/C,+FAAyE;AAEzE,2EAAqD;AACrD,qEAA+C;AAG/C,qEAA+C;AAE/C,+EAAyD;AACzD,uFAAiE;AAEjE,2FAAqE;AACrE,+EAAyD;AAQzD,IAAa,cAAc;IAsLvB;;OAEG;IACH,wBACY,cAA8B,EAC9B,qBAA4C,EAC7C,YAA0B,EACzB,iBAAoC,EACpC,kBAAsC,EACtC,MAAmB,EACnB,MAAc,EACd,gBAAkC;QAE1C,yCAAyC;QAV7C,iBA4EC;QA3EW,mBAAc,GAAd,cAAc,CAAgB;QAC9B,0BAAqB,GAArB,qBAAqB,CAAuB;QAC7C,iBAAY,GAAZ,YAAY,CAAc;QACzB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAa;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAhM9C,6CAA6C;QAC7C,6CAA6C;QAC7C,6CAA6C;QAC7C,YAAO,GAAW,IAAI,eAAM,EAAE,CAAC;QAC/B,gBAAW,GAAgB,IAAI,yBAAW,EAAE,CAAC;QAC7C,2BAAsB,GAClB,IAAI,+CAAsB,EAAE,CAAC;QACjC,0BAAqB,GAAG;YACpB,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,IAAI;SACf,CAAC;QACF,iCAA4B,GAAG,IAAI,CAAC;QAKpC,aAAQ,GAAa,IAAI,mBAAQ,EAAE,CAAC;QACpC,4BAAuB,GAAgB,EAAE,CAAC;QAC1C,mBAAc,GAAa,IAAI,mBAAQ,EAAE,CAAC;QAC1C,YAAO,GAAgB,IAAI,yBAAW,EAAE,CAAC;QAIzC,iBAAY,GAGR;YACA,QAAQ,EAAE,IAAI,mBAAQ,EAAE;YACxB,OAAO,EAAE,KAAK;SACjB,CAAC;QACF,sBAAiB,GAAgB,IAAI,yBAAW,EAAE,CAAC;QACnD,qBAAgB,GAAY,KAAK,CAAC;QAClC,aAAQ,GAAa,IAAI,mBAAQ,EAAE,CAAC;QACpC,kBAAa,GAAkB,IAAI,6BAAa,EAAE,CAAC;QAGnD,sBAAiB,GAAW,CAAC,CAAC;QAC9B,mBAAc,GAAW,CAAC,CAAC;QAQ3B,6CAA6C;QAC7C,YAAO,GAAa,EAAE,CAAC;QAEvB,cAAS,GAAwC,IAAI,sBAAe,CAAC,EAAE,CAAC,CAAC;QAEzE,aAAQ,GAA8D;YAClE,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,IAAI,sBAAe,CAAC,EAAE,CAAC;SACrC,CAAC;QACF,eAAU,GAAe,EAAE,CAAC;QAI5B,0BAAqB,GAAW,aAAa,CAAC;QAC9C,iCAA4B,GAAY,KAAK,CAAC;QAG9C,cAAS,GAAG;YACR;gBACI,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,SAAS;aACzB;YACD;gBACI,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,eAAe;aAC/B;YACD;gBACI,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,SAAS;aACzB;YACD;gBACI,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,eAAe;aAC/B;SACJ,CAAC;QACF,0BAAqB,GAAG,KAAK,CAAC;QAQ9B,gBAAW,GAAY,KAAK,CAAC;QAC7B,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAY,KAAK,CAAC;QAC9B,eAAU,GAAY,KAAK,CAAC;QAC5B,oBAAe,GAAG,KAAK,CAAC;QACxB,yBAAoB,GAAG,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAW,CAAC,CAAC;QACtB,mBAAc,GAAW,EAAE,CAAC;QAE5B,6CAA6C;QAC7C,6CAA6C;QAC7C,6CAA6C;QAC7C,0CAA0C;QAC1C,yBAAoB,GAAW,CAAC,CAAC,CAAC;QAClC,oBAAe,GAGX,EAAE,UAAU,EAAE,IAAI,uBAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAE/C,0BAAqB,GAAY,KAAK,CAAC;QACvC,+BAA+B;QAC/B,wBAAmB,GAAW,CAAC,CAAC;QAChC,iBAAY,GAAG,KAAK,CAAC;QACrB,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,EAAE,CAAC;QACjB,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG,IAAI,CAAC;QACd,2BAAsB,GAAG,KAAK,CAAC;QAO/B,WAAM,GAyBF;YACA,QAAQ,EAAE;gBACN,iBAAiB,EAAE,EAAE;gBACrB,oBAAoB,EAAE,EAAE;gBACxB,aAAa,EAAE,EAAE;gBACjB,kBAAkB,EAAE,EAAE;gBACtB,eAAe,EAAE,EAAE;gBACnB,eAAe,EAAE,EAAE;aACtB;YACD,KAAK,EAAE;gBACH,aAAa,EAAE,EAAE;gBACjB,mBAAmB,EAAE,EAAE;gBACvB,cAAc,EAAE,EAAE;gBAClB,UAAU,EAAE,EAAE;gBACd,iBAAiB,EAAE,EAAE;gBACrB,cAAc,EAAE,EAAE;gBAClB,aAAa,EAAE,EAAE;aACpB;SACJ,CAAC;QAEF,wBAAwB;QACxB,uBAAkB,GAAG,CAAC,CAAC;QACvB,8BAA8B;QAC9B,2BAAsB,GAAG,CAAC,CAAC;QA0F3B,mFAAmF;QACnF,iFAAiF;QACjF,mFAAmF;QAEnF,kBAAa,GAAG,UAAC,UAA6B;YAC1C,CAAC,CAAC,MAAM,CACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAC/B,UAAC,IAAuB;gBACpB,WAAI,CAAC,aAAa,KAAK,UAAU,CAAC,aAAa;YAA/C,CAA+C,CACtD,CAAC;YAEF,6CAA6C;YAC7C,KAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;YAEzC,2CAA2C;YAC3C,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAEhC,iCAAiC;YACjC,KAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC;QAEF,gBAAW,GAAG,UAAC,YAAY,IAAK,iBAAC,UAAe;YAC5C,KAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,SAAS,CAAC;YAC9C,KAAI,CAAC,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC;YACxC,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CACrD,YAAY,CACf,CAAC,GAAG,CAAC,UAAC,KAAK;gBACR,IAAI,QAAQ,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;oBACnC,YAAY,KAAK,mBAAmB;0BAC9B,CAAC,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,aAAa,CAAC;0BAC/C,YAAY,KAAK,sBAAsB;8BACvC,CAAC,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC;8BACzC,YAAY,KAAK,iBAAiB;kCAClC,CAAC,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,cAAc,CAAC;kCAChD,YAAY,KAAK,oBAAoB;sCACrC,CAAC,QAAQ,CAAC,SAAS,GAAG,UAAU,CAAC,cAAc,CAAC;sCAChD,IAAI,CAAC;gBACf,CAAC;gBACD,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,wCAAwC;YACxC,UAAU,CAAC;gBACP,IAAM,MAAM,GAAG,UAAU,CAAC,OAAO;sBAC3B,UAAU,CAAC,OAAO;sBAClB,UAAU,CAAC,cAAc;0BACzB,UAAU,CAAC,cAAc;0BACzB,UAAU,CAAC,QAAQ,IAAI,UAAU,CAAC,aAAa;8BAC/C,UAAU,CAAC,aAAa;8BACxB,KAAK,CAAC;gBAEZ,IAAM,eAAe,GAAG,eAAe,GAAG,MAAM,CAAC;gBACjD,IAAM,YAAY,GACd,QAAQ,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;gBACrD,YAAY,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;YACrE,CAAC,CAAC,CAAC;YAEH,sEAAsE;YACtE,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,KAAK,oBAAoB,CAAC,CAAC,CAAC;gBACxD,UAAU,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,kBAAkB,CACnD,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,KAAI,CAAC,mBAAmB,CACxD,CAAC;YACN,CAAC;QACL,CAAC,EA7C+B,CA6C/B,CAAC;QAEF,gBAAW,GAAG;YACV,OAAO,CAAC,GAAG,CACP,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAC5C,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,EAC5C,KAAI,CAAC,OAAO,CAAC,YAAY,CAC5B,CAAC;YACF,IAAM,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,cAAc,CAC1C,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAC5C,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,EAC5C,KAAI,CAAC,OAAO,CAAC,YAAY,CAC5B,CAAC;YACF,KAAI,CAAC,YAAY,GAAG,KAAK,IAAI,KAAI,CAAC,iBAAiB,CAAC;QACxD,CAAC,CAAC;QACF,OAAO;QACP,uBAAkB,GAAG,UAAC,YAAY,IAAK,iBAAC,UAAe;YAElD,yCAAyC;YACzC,IAAM,MAAM,GAAG,KAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAC9D,YAAY,CACf,CACG,UAAU,EACV,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAChC,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UAAU,EAC1C,KAAI,CAAC,YAAY,EACjB,KAAI,CAAC,OAAO,CACf,CAAC;YAEF,oDAAoD;YACpD,EAAE,CAAC,CAAC,YAAY,KAAK,iBAAiB,CAAC,CAAC,CAAC;gBACrC,+MAA+M;gBAC/M,KAAI,CAAC,wBAAwB,EAAE,CAAC;YACpC,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBAClB,6FAA6F;gBAC7F,EAAE,CAAC,CACC,YAAY,KAAK,iBAAiB;oBAClC,YAAY,KAAK,oBACrB,CAAC;oBACG,KAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;gBAE9C,iHAAiH;gBACjH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CACrD,YAAY,CACf,CAAC,GAAG,CAAC,UAAC,KAAK;oBACR,IAAI,QAAQ,GAAG,KAAK,CAAC;oBACrB,EAAE,CAAC,CACC,QAAQ,CAAC,SAAS,KAAK,SAAS;wBAChC,QAAQ,CAAC,SACb,CAAC,CAAC,CAAC;wBACC,qCAAqC;wBACrC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;oBAC/B,CAAC;oBACD,MAAM,CAAC,QAAQ,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,8CAA8C;gBAC9C,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YACrD,CAAC;YAGD,EAAE,CAAC,CAAC,YAAY,IAAI,mBAAmB,CAAC,CAAC,CAAC;gBAE1C,uBAAuB;gBACvB,IAAI,iBAAiB,SAAS,CAAC;gBAC/B,IAAI,qBAAqB,SAAS,CAAC;gBACnC,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;gBAChC,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;gBAC7B,YAAY;gBACZ,IAAI,qBAAqB,SAAS,CAAC;gBACnC,IAAI,yBAAyB,SAAS,CAAC;gBACvC,EAAE,CAAC,CACC,CAAC,UAAU,CAAC,YAAY,IAAI,CAAC,IAAI,UAAU,CAAC,YAAY,IAAI,CAAC,CAAC;oBAC9D,CAAC,UAAU,CAAC,YAAY,IAAI,SAAS;wBACjC,UAAU,CAAC,YAAY,IAAI,SAAS,CAC5C,CAAC,CAAC,CAAC;oBACC,4DAA4D;oBAC5D,qBAAqB,GAAG,KAAK,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,qBAAqB,GAAG,IAAI,CAAC;oBAC7B,kEAAkE;oBAClE,EAAE,CAAC,CACC,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,YAAY;wBAC5C,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,YACpC,CAAC,CAAC,CAAC;wBACC,iBAAiB,GAAG,IAAI,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,iBAAiB,GAAG,KAAK,CAAC;oBAC9B,CAAC;gBACL,CAAC;gBAED,qEAAqE;gBACrE,EAAE,CAAC,CAAC,iBAAiB,IAAI,IAAI,IAAI,qBAAqB,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACP,EAAE,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;4BACzB,EAAE,CAAC,CACC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;gCAC5B,MAAM,CAAC,UAAU,CAAC,WAAW,CACjC,CAAC,CAAC,CAAC;gCACC,KAAK,CACD,yHAAyH,CAC5H,CAAC;gCACF,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC;4BAClD,CAAC;wBACL,CAAC;oBACL,CAAC;gBAEL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAEA,EAAE,CAAC,CACC,CAAC,UAAU,CAAC,WAAW,IAAI,CAAC;wBACxB,UAAU,CAAC,WAAW,IAAI,CAAC,CAAC;wBAChC,CAAC,UAAU,CAAC,WAAW,IAAI,SAAS;4BAChC,UAAU,CAAC,WAAW,IAAI,SAAS,CAC3C,CAAC,CAAC,CAAC;wBACC,yBAAyB,GAAG,KAAK,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,yBAAyB,GAAG,IAAI,CAAC;wBACjC,EAAE,CAAC,CACC,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,WAAW;4BAC9C,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,WACvC,CAAC,CAAC,CAAC;4BACC,qBAAqB,GAAG,IAAI,CAAC;wBACjC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,qBAAqB,GAAG,KAAK,CAAC;wBAClC,CAAC;oBACL,CAAC;oBAED,EAAE,CAAC,CAAC,qBAAqB,IAAI,KAAK,CAAC,CAAC,CAAC;wBACjC,wHAAwH;wBACxH,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;4BAC3C,KAAI,CAAC,kBAAkB;gCACnB,2JAA2J,CAAC;4BAChK,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;wBAC5C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;wBACjC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,EAAE,CAAC,CAAC,iBAAiB,IAAI,KAAK,CAAC,CAAC,CAAC;4BAC7B,KAAI,CAAC,kBAAkB;gCACnB,+EAA+E;oCAC/E,UAAU,CAAC,YAAY;oCACvB,QAAQ;oCACR,UAAU,CAAC,YAAY;oCACvB,IAAI,CAAC;4BACT,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC;wBAC5C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;wBACjC,CAAC;oBACL,CAAC;oBAED,EAAE,CAAC,CAAC,yBAAyB,IAAI,KAAK,CAAC,CAAC,CAAC;wBACrC,yGAAyG;wBACzG,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;4BACjD,KAAI,CAAC,qBAAqB;gCACtB,2JAA2J,CAAC;4BAChK,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,iBAAiB,CAAC;wBAClD,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,EAAE,CAAC,CAAC,qBAAqB,IAAI,KAAK,CAAC,CAAC,CAAC;4BACjC,KAAI,CAAC,qBAAqB;gCACtB,iGAAiG;oCACjG,UAAU,CAAC,WAAW;oCACtB,QAAQ;oCACR,UAAU,CAAC,WAAW;oCACtB,IAAI,CAAC;4BACT,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,iBAAiB,CAAC;wBAClD,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;wBACpC,CAAC;oBACL,CAAC;gBAET,CAAC;YACD,CAAC;YACD,UAAU,GAAG,IAAI,CAAC;QACtB,CAAC,EAjKsC,CAiKtC,CAAC;QAEF,wBAAmB,GAAG;YAClB,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzD,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,qBAAgB,GAAG,UAAC,QAAQ;YACxB,KAAI,CAAC,qBAAqB;iBACrB,cAAc,CAAC,QAAQ,CAAC;iBACxB,SAAS,CAAC,UAAC,IAAI;gBACZ,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAM;oBAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;oBAC7B,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC,CAAC;QAEF;;WAEG;QACH,yBAAoB,GAAG,UAAC,SAA2B;YAC/C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACZ;mBACG,CAAC,yLAAyL;gBAC7L,KAAI,CAAC,qBAAqB;qBACrB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,CAClC,KAAI,CAAC,iBAAiB,CAAC,aAAa,CACvC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAC/B,KAAI,CAAC,aAAa,CAAC,kBAAkB,CACxC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAC9B,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CACjD,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC;qBAC9C,SAAS,CAAC,UAAC,OAAO;oBACf,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;oBACjD,sCAAsC;oBACtC,aAAa,CAAC,MAAM;wBAChB,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAC7B,CAAC;oBACN,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CACnD,UAAC,IAAI;wBACD,WAAI,CAAC,MAAM,KAAK,aAAa,CAAC,MAAM;4BACpC,IAAI,CAAC,WAAW,KAAK,aAAa,CAAC,WAAW;4BAC9C,IAAI,CAAC,QAAQ,CAAC,WAAW;gCACrB,aAAa,CAAC,QAAQ,CAAC,WAAW;oBAHtC,CAGsC,CAC7C,CAAC;oBACF,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACd,iDAAiD;wBACjD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBACpD,KAAI,CAAC,wBAAwB,EAAE,CAAC;oBACpC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,oEAAoE,CACvE,EAAE,EAAE,CAAC;oBACV,CAAC;oBAED,8DAA8D;oBAC9D,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;oBAErD,kCAAkC;oBAClC,KAAI,CAAC,uBAAuB,EAAE,CAAC;gBACnC,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CAAC;QAEF,sBAAiB,GAAG,UAAC,QAAS;YAC1B,sBAAsB;YACtB,IAAM,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;YACnD,KAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;YACrC,KAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAC7C,KAAI,CAAC,sBAAsB,GAAG,IAAI,+CAAsB,EAAE,CAAC;YAC3D,KAAI,CAAC,qBAAqB,GAAG;gBACzB,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;aACf,CAAC;YACF,KAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YACzC,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,EAAE,CAAC;YAC5B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;YACtC,qEAAqE;YACrE,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAChD,KAAI,CAAC,eAAe,GAAG,EAAE,UAAU,EAAE,IAAI,uBAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;YACtE,CAAC;YACD,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF,oBAAe,GAAG;YACd,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,8BAA8B,CAAC,CAChE;gBACI,KAAI,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YAC3C,CAAC,CACJ,CAAC;gBACE,SAAS,EAAE,cAAc;aAC5B,CAAC,CAAC;QACP,CAAC,CAAC;QAEF;;WAEG;QACH,qBAAgB,GAAG;YAEf,YAAI,CAAC,qBAAqB,CAAC,6BAA6B,CACpD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAClC;kBACK,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CACnC,iDAAiD,CACpD,EAAE,EAAE;kBACL,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,CACpC,oCAAoC,CACvC,CAAC;oBAEA,uCAAuC;oBACrC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,EAAC;wBAC3D,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,KAAK,EAAE,IAAI,KAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,EAAC;4BAClE,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,kDAAkD,CACrD,EAAE,EAAE,CAAC;wBACV,CAAC;oBACH,CAAC;oBAED,KAAK,CAAC,KAAI,CAAC,uBAAuB,GAAC,KAAK,GAAC,KAAI,CAAC,gCAAgC,CAAC;oBAC/E,KAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChC,2DAA2D;oBAC3D,EAAE,CAAC,CAAC,KAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,gBAAgB,CAAC,CACzC,wEAAiE,MAAM,CACnE,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAC3C,CACJ,CAAC,MAAM,CAAC,YAAY,CAAC,YAAO,MAAM,CAC/B,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CACzC,CACJ,CAAC,MAAM,CAAC,YAAY,CAAC,MAAG,CAC5B,EAAE,EAAE,CAAC;oBACV,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,sCAAsC;wBACtC,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;wBAE7B,KAAI,CAAC,qBAAqB;6BACrB,sBAAsB,CAAC,KAAI,CAAC,WAAW,CAAC,CACrC,KAAI,CAAC,sBAAsB,CAC9B,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAC5C,KAAI,CAAC,eAAe,CACvB,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,uBAAuB,CAAC,CAC1C,KAAI,CAAC,OAAO,CACf,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CACtC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAC1C,KAAI,CAAC,aAAa,CACrB,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAC9F,KAAI,CAAC,aAAa,CACrB,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,KAAI,CAAC,eAAe,CACrE,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC,KAAI,CAAC,4BAA4B,CAAC,CAC9D,KAAI,CAAC,iBAAiB,CAAC,CACvB,KAAI,CAAC,oBAAoB,CAAC;6BAC1B,KAAK,CAAC,UAAC,GAAG;4BACP,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;4BAC5B,KAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;4BAChC,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;4BACzC,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBAClC,CAAC,CAAC;6BACD,SAAS,CAAC,UAAC,SAAc;4BACxB,QAAQ;4BACN,KAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;4BAE7B,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gCAE7B;;;;kCAIE;gCACF,KAAI,CAAC,sBAAsB,GAAE,EAAE,CAAC;gCAChC,KAAI,CAAC,qBAAqB;qCACzB,aAAa,CACd,SAAS,CAAC,KAAK,CAAC,SAAS,EACzB,KAAI,CAAC,sBAAsB,CAC1B;qCACA,KAAK,CAAC,UAAC,GAAG;oCACP,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;oCAC5B,KAAI,CAAC,sBAAsB,GAAG,CAAC;oCAC/B,KAAI,CAAC,eAAe,EAAE,CAAC;oCAE3B,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAC/B,GAAG,EACH,IAAI,EACJ,cAAM,cAAO,CAAC,GAAG,CAAC,iHAAiH,CAAC,EAA9H,CAA8H,CACnI,CAAC;oCAEF,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gCAClC,CAAC,CAAC;qCACD,SAAS,CAAC,UAAC,QAAQ;oCAChB,KAAI,CAAC,sBAAsB,GAAE,CAAC,CAAC;oCAC/B,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;oCAC5B,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;wCACjC,IAAM,YAAU,GAAG,IAAI,6CAAqB,EAAE,CAAC;wCAC/C,YAAU,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;wCAEjD,KAAK,CAAC,cAAc,GAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAC,uCAAuC,GAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAG;wCAGzG,YAAU,CAAC,MAAM,GAAG,MAAM,CACtB,KACA,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,GACzC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ;6CAC9C,QAAQ,EAAE;6CACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAG,CACtB,CAAC;wCAEF,KAAI,CAAC,eAAe,EAAE,CAAC;wCAEvB;;;;;;;;;;;;;;;;6CAgBK;wCAEL,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;wCAErD,CAAC;oCACD,CAAC;gCACL,CAAC,CAAC,CAAC;gCAGH;;;;kCAIE;gCAIR,6FAA6F;gCAG7F,sBAAsB;gCACtB,IAAM,YAAU,GACZ,IAAI,6CAAqB,EAAE,CAAC;gCAChC,YAAU,CAAC,SAAS;oCAChB,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;gCAC9B,YAAU,CAAC,MAAM,GAAG,MAAM,CACtB,KACI,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ;qCAC9B,QAAQ,GACd,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ;qCAC1C,QAAQ,EAAE;qCACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAG,CAC1B,CAAC;gCAEF,KAAI,CAAC,YAAY,CAAC,wBAAwB,CACtC,SAAS,CAAC,OAAO,CAAC,MAAM,CAC3B,CAAC,KAAG,SAAS,CAAC,OAAO,CAAC,WAAa,CAAC,CAAC;oCAClC,KAAI,CAAC,cAAc,CAAC,YAAY,CAC5B,YAAU,EACV,IAAI,EACJ,KAAI,CAAC,SAAS,CACjB,CAAC;oCACF,KAAI,CAAC,eAAe,EAAE,CAAC;gCAC3B,CAAC,CAAC,CAAC,YAAU,CAAC,CAAC;oCACX,KAAI,CAAC,eAAe,EAAE,CAAC;gCAC3B,CAAC,CAAC,CAAC;gCAEH,EAAE,CAAC,CACC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;qCAC7B,WACT,CAAC,CAAC,CAAC;oCACC,yBAAyB;gCAC7B,CAAC;4BACL,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;gCAE5B,IAAM,YAAU,GACZ,IAAI,6CAAqB,EAAE,CAAC;gCAChC,YAAU,CAAC,SAAS;oCAChB,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC;gCAC9B,YAAU,CAAC,MAAM,GAAG,MAAM,CACtB,KACI,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ;qCAC9B,QAAQ,GACd,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ;qCAC1C,QAAQ,EAAE;qCACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAG,CAC1B,CAAC;gCAEF,KAAI,CAAC,YAAY,CAAC,wBAAwB,CACtC,SAAS,CAAC,OAAO,CAAC,MAAM,CAC3B,CAAC,KAAG,SAAS,CAAC,OAAO,CAAC,WAAa,CAAC,CAAC;oCAClC,KAAI,CAAC,cAAc,CAAC,YAAY,CAC5B,YAAU,EACV,IAAI,EACJ,KAAI,CAAC,SAAS,CACjB,CAAC;oCACF,KAAI,CAAC,eAAe,EAAE,CAAC;gCAC3B,CAAC,CAAC,CAAC,YAAU,CAAC,CAAC;oCACX,KAAI,CAAC,eAAe,EAAE,CAAC;gCAC3B,CAAC,CAAC,CAAC;gCAEH,EAAE,CAAC,CACC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;qCAC7B,WACT,CAAC,CAAC,CAAC;gCACH,CAAC;4BACL,CAAC;4BAED,2BAA2B;4BAC3B,EAAE,CAAC,CACC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,WACtC,CAAC,CAAC,CAAC;gCACC,KAAI,CAAC,eAAe,EAAE,CAAC;gCACvB;;;;;;;;;;;;;;qCAcK;4BACT,CAAC;wBACL,CAAC,CAAC,CAAC;oBACX,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;QA/OvC,CA+OuC,CAAC;QAE5C;;WAEG;QACH,oBAAe,GAAG;YAEd,+BAA+B;YAC/B,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAM,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;YACnD,KAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;YACrC,KAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YAC7C,KAAI,CAAC,sBAAsB,GAAG,IAAI,+CAAsB,EAAE,CAAC;YAC3D,KAAI,CAAC,qBAAqB,GAAG;gBACzB,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE,IAAI;aACf,CAAC;YACF,KAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YACzC,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,EAAE,CAAC;YAE5B,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;YACrC,UAAU,CAAC;gBACP,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;YACzC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,4BAA4B;YAEtC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;YACtC,KAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;YAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAClC,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACpC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,qBAAqB;YACrB,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAClC,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAClC,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;YACnC,KAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,KAAI,CAAC,gCAAgC,GAAG,IAAI,CAAC;YAC7C,mBAAmB;YACnB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,yBAAyB;YACzB,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAC,IAAI;gBACrC,WAAI,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,GAAG;oBACjB,IAAM,CAAC,GAAG,QAAQ,CAAC,cAAc,CAC7B,WAAW,GAAG,GAAG,CACA,CAAC;oBACtB,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;gBACtB,CAAC,CAAC;YALF,CAKE,CACL,CAAC;YAEF,kBAAkB;YAClB,KAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;YAC5C,KAAI,CAAC,YAAY,CAAC,OAAO,GAAG,KAAK,CAAC;YAElC,0BAA0B;YAC1B,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;YAC/B,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAE7B,oBAAoB;YACpB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAE3C,qBAAqB;YACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;YAE/B,+CAA+C;YAC/C,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;kBACxC,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAAE;kBACtD,IAAI,CAAC;QACf,CAAC,CAAC;QAEF;;WAEG;QACH,4BAAuB,GAAG;YACtB,YAAI,CAAC,qBAAqB;iBACrB,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,sBAAsB,CAAC,CACxD,KAAI,CAAC,WAAW,CACnB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CACzC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CACjD,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC;iBAC9C,SAAS,CAAC,UAAC,SAAS;gBACjB,uBAAuB;gBACvB,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GACxB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,QAC/B,SAAS,CACf,CAAC;oBACF,EAAE,CAAC,CACC,KAAI,CAAC,aAAa,CAAC,kBAAkB,IAAI,CAAC;wBAC1C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EACvC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAO,SAAS,QAAC,CAAC;oBACrD,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,SAAS,CAAC;oBAC5C,EAAE,CAAC,CACC,KAAI,CAAC,aAAa,CAAC,kBAAkB,IAAI,CAAC;wBAC1C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EACvC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAO,SAAS,QAAC,CAAC;oBACrD,CAAC;gBACL,CAAC;gBAED,uBAAuB;gBACvB,IAAM,kBAAkB,GAAG,SAAS,CAAC,GAAG,CAAC,UAAC,EAAE;oBACxC,YAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;gBAA3D,CAA2D,CAC9D,CAAC;gBAEF,4EAA4E;gBAC5E,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,EAAE;oBACpC,mCAAmC;oBACnC,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBACpC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;QAvCN,CAuCM,CAAC;QAEX;;WAEG;QACH,wBAAmB,GAAG,UAAC,KAAa;YAChC,+BAA+B;YAC/B,KAAI,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACvC,wCAAwC;YACxC,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,cAAM,KAAK,EAAG,CAAC;YACxC,YAAY;YACZ,wDAAwD;YACxD,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YAElC,2BAA2B;YAC3B,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;kBACxC,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAAE;kBACtD,IAAI,CAAC;YAEX,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAC/C,6BAAa,CAAC,SAAS,CAC1B,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,mFAAmF;QACnF,mFAAmF;QACnF,mFAAmF;QAEnF;;;;;WAKG;QAEH,uBAAkB,GAAG,UAAC,CAAC;YACnB,wFAAwF;YACxF,IAAM,gBAAgB,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CACvD,UAAC,GAAG,IAAK,UAAG,CAAC,YAAY,KAAK,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAtD,CAAsD,CAClE,CAAC;YAEF,kBAAkB;YAClB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAEjC,iCAAiC;YACjC,IAAI,CAAC;gBACD,EAAE,CAAC,CACC,gBAAgB;oBAChB,gBAAgB,CAAC,YAAY;oBAC7B,gBAAgB,CAAC,YACrB,CAAC,CAAC,CAAC;oBACC,8EAA8E;oBAC9E,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,IAAI,gBAAgB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;wBACvD,gCAAgC;wBAChC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,+CAA+C,CAClD,EAAE,EAAE,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,EAAE,CAAC;oBAChC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,2BAA2B;wBAC3B;;;0BAGE;wBACF,+BAA+B;wBAC/B,KAAI,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACvC,wCAAwC;wBACxC,KAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;wBAEhC,qCAAqC;wBACrC,KAAI,CAAC,qBAAqB;6BACrB,+BAA+B,CAAC,gBAAgB,CAAC;6BACjD,IAAI,CAAC,UAAC,gBAAgB;4BACnB,2FAA2F;4BAC3F,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gCACnB,uFAAuF;gCACvF,KAAI,CAAC,YAAY,GAAG;oCAChB,QAAQ,EAAE,gBAAgB;oCAC1B,OAAO,EAAE,IAAI;iCAChB,CAAC;4BACN,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,0CAA0C;gCAC1C;;;;;;;;;;;;;;gCAcA;gCACA,KAAI,CAAC,qBAAqB,CAAC,YAAY,CACnC,KAAI,CAAC,OAAO,CACf,CAAC;4BACN,CAAC;4BAED,0CAA0C;4BAC1C,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;4BAElC,6BAA6B;4BAC7B,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;kCACxC,QAAQ;qCACH,cAAc,CAAC,qBAAqB,CAAC;qCACrC,KAAK,EAAE;kCACZ,IAAI,CAAC;wBACf,CAAC,CAAC,CAAC;oBACX,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;gBACrC,CAAC;YACL,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,gBAAgB;gBAChB,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;oBACvC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC;gBACjE,CAAC;gBACD,6BAA6B;gBAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,EAAE,CAAC;YAChC,CAAC;QACL,CAAC,CAAC;QAiDF;;;WAGG;QACH,2BAAsB,GAAG,UAAC,CAAC;YACvB,sDAAsD;YACtD,KAAI,CAAC,WAAW,CAAC,gBAAgB;gBAC7B,KAAI,CAAC,YAAY,CAAC,sBAAsB,CACpC,KAAI,CAAC,WAAW,CAAC,gBAAgB,CACpC,CAAC;YACN,kCAAkC;YAClC,KAAI,CAAC,uBAAuB,EAAE,CAAC;YAE/B,4HAA4H;YAC5H,gIAAgI;YAChI,UAAU,CAAC;gBACP,0CAA0C;gBAC1C,IAAM,gBAAgB,GAAQ,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBACpE,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACnB,mCAAmC;oBACnC,gBAAgB,CAAC,KAAK,EAAE,CAAC;gBAC7B,CAAC;YACL,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC;QAEF,2BAAsB,GAAG,UAAC,CAAC;YACvB,sDAAsD;YACtD,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,sBAAsB,CAChE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAC5B,CAAC;YACF,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACjC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,qCAAqC,CACxC,EAAE,EAAE,CAAC;YACV,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CACN,CAAC,CACG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;gBAC1B,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;gBAC1C,CAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;oBAC3B,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;oBACtC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK;wBAC3B,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBAChD,CAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;oBAC3B,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;oBACtC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK;wBAC3B,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK;oBAC3C,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG;wBACzB,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAEtD,CAAC,CAAC,CAAC;gBACC,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACjC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,oEAAoE,CACvE,EAAE,EAAE,CAAC;YACV,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,kCAAkC;gBAClC,KAAI,CAAC,uBAAuB,EAAE,CAAC;gBAE/B,4HAA4H;gBAC5H,gIAAgI;gBAChI,UAAU,CAAC;oBACP,0CAA0C;oBAC1C,IAAM,gBAAgB,GAClB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;oBAC1C,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACnB,mCAAmC;wBACnC,gBAAgB,CAAC,KAAK,EAAE,CAAC;oBAC7B,CAAC;gBACL,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;QACL,CAAC,CAAC;QAEF;;;;WAIG;QACH,yBAAoB,GAAG,UAAC,CAAC,IAAK,iBAAC,IAAY,IAAK,iBAAC,OAAe;YAC5D,QAAC,KAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,KAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,CACnE,KAAI,CAAC,OAAO,CAAC,CAChB,CAAC;QAFF,CAEE,EAH0C,CAG1C,EAHwB,CAGxB,CAAC;QAEP,mFAAmF;QACnF,mFAAmF;QACnF,mFAAmF;QAEnF;;WAEG;QACH,qBAAgB,GAAG,UAAC,SAAmB;YACnC,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC;QAEF;;WAEG;QACH,uBAAkB,GAAG,UAAC,CAAM,IAAK,iBAAC,QAAQ;YACtC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,+EAA+E;YAC/E,KAAI,CAAC,oBAAoB;gBACrB,KAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAClD,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAChC,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC;QACrC,CAAC,EAPgC,CAOhC,CAAC;QAEF;;WAEG;QACH,qBAAgB,GAAG,UAAC,CAAM;YACtB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,UAAU;gBACzC,oBAAoB;gBACpB,IAAM,UAAU,GACZ,UAAU,IAAI,UAAU,CAAC,MAAM;sBACzB,UAAU,CAAC,KAAI,CAAC,oBAAoB,CAAC;sBACrC,IAAI,CAAC;gBACf,gBAAgB;gBAChB,UAAU,GAAG,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBACzD,mBAAmB;gBACnB,KAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF;;;WAGG;QACH,yBAAoB,GAAG,UAAC,QAAQ;YAC5B,sBAAsB;YACtB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACjC,KAAI,CAAC,OAAO,GAAG,IAAI,eAAM,EAAE,CAAC;YAE5B,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAChC,CAAC;YAED,oBAAoB;YACpB,KAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC;QAEF,oBAAe,GAAG,KAAK,CAAC;QAExB,iBAAY,GAAG,CAAC,CAAC,QAAQ,CAAC,UAAC,QAAQ;YAC/B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,KAAI,CAAC,cAAc;iBACd,cAAc,CAAC,6BAAa,CAAC,MAAM,CAAC,CAAC;gBAClC,KAAK,EAAE,0BAAgB,CAAC,OAAO;gBAC/B,SAAS,EAAE,QAAQ;aACtB,CAAC;iBACD,SAAS,CAAC,UAAC,QAAQ;gBAChB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvC,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;QACX,CAAC,EAAE,GAAG,CAAC,CAAC;QAER;;WAEG;QACH,yBAAoB,GAAG,UAAC,EAAa,IAAK,iBAAC,aAAqB;YAC5D,mBAAmB;YACnB,EAAE,CAAC,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CACC,EAAE,CAAC,WAAW,IAAI,OAAO;oBACzB,EAAE,CAAC,WAAW,IAAI,eACtB,CAAC,CAAC,CAAC;oBACC,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;oBAClC,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACtC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,EAAE,CAAC,CACC,KAAI,CAAC,WAAW;wBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;wBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EACvC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,CAAC;4BACvB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBAC3B,CAAC;oBACL,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,IAAI,YAAY,CAAC,CAAC,CAAC;oBACxC,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;oBAClC,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACtC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,EAAE,CAAC,CACC,KAAI,CAAC,WAAW;wBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;wBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS;wBAC/B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EACvC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBAC7B,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,4CAA4C;oBAC5C,KAAI,CAAC,uBAAuB;wBACxB,KAAI,CAAC,uBAAuB,CAAC,MAAM,CAC/B,UAAC,OAAO,IAAK,cAAO,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,EAAtC,CAAsC,CACtD,CAAC;oBACN,mBAAmB;oBACnB,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1C,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,uBAAuB,CAAC,MAAM,CAC9D,UAAC,OAAO,IAAK,cAAO,CAAC,WAAW,KAAK,EAAE,CAAC,WAAW,EAAtC,CAAsC,CACtD,CAAC;gBACF,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;YAED,yGAAyG;YACzG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAI,CAAC,uBAAuB;iBAC7D,GAAG,CAAC,UAAC,EAAE;gBACJ,aAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;oBACnC,IAAM,MAAM,GAAqB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;oBACxD,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC,WAAW,CAAC;oBACzC,kBAAkB;oBAClB,MAAM,CAAC,SAAS,GAAG,IAAI,+BAAc,CACjC,MAAM,CACF,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAC5B,CACJ;yBACI,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC;yBAC5B,MAAM,EAAE,CAChB,CAAC;oBACF,EAAE;oBACF,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC,CAAC;YAfF,CAeE,CACL;iBACA,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAI,CAAC,SAAE,MAAM,CAAK,CAAC,SAAE,EAArB,CAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,4DAA4D;QAClH,CAAC,EA7EyC,CA6EzC,CAAC;QAEF;;WAEG;QACH,yBAAoB,GAAG,UACnB,IAAuB,EACvB,OAAuC;YAEvC,wBAAwB;YACxB,iFAAiF;YAHjF,sCAAY,kBAAkB,EAAE,KAAK,EAAE;YAKvC,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;oBACvC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;oBACrC,QAAQ,EAAE,CAAC;oBACX,WAAW,EAAE,CAAC;oBACd,UAAU,EAAE,IAAI,CAAC,WAAW;oBAC5B,UAAU,EAAE,CAAC;oBACb,aAAa,EAAE,IAAI,CAAC,aAAa;iBACpC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,4BAA4B;gBAC5B,MAAM,CAAC,KAAI,CAAC,qBAAqB;qBAC5B,oBAAoB,CAAC,IAAI,CAAC;qBAC1B,SAAS,EAAE;qBACX,IAAI,CAAC,UAAC,aAAa;oBAChB,2BAA2B;oBAC3B,IAAM,aAAa,GACf,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CACtC,UAAC,CAAC,IAAK,WAAI,CAAC,aAAa,KAAK,CAAC,CAAC,aAAa,EAAtC,CAAsC,CAChD,CAAC;oBAEN,gFAAgF;oBAChF,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;wBAChB,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;wBAChD,aAAa,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;wBACtD,aAAa,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;oBACxD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CACtC,aAAa,CAChB,CAAC;oBACN,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC,CAAC;QAEF;;WAEG;QACH,6BAAwB,GAAG,UAAC,UAAW;YACnC,EAAE,CAAC,CAAC,KAAI,CAAC,4BAA4B,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC5C,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC7C,KAAK,CACD,yHAAyH,CAC5H,CAAC;wBACF,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC;oBAC/C,CAAC;gBACL,CAAC;YACL,CAAC;YACD,qDAAqD;YACrD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,0CAA0C;gBAE1C,KAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBAC5C,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC/B,CAAC;QACL,CAAC,CAAC;QAEF,wBAAmB,GAAG;YAClB,yEAAyE;YACzE,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;iBACzD,WAAW;kBACV,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,UAAC,IAAI;oBAC1C,oBAAoB;oBACpB,IAAM,eAAe,GACjB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CACtC,UAAC,EAAE,IAAK,SAAE,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,EAAvC,CAAuC,CAClD,CAAC;oBAEN,MAAM,CAAC,eAAe,IAAI,eAAe,CAAC,QAAQ;0BAC5C,eAAe,CAAC,QAAQ;0BACxB,CAAC,CAAC;gBACZ,CAAC,CAAC;kBACF,CAAC,CAAC;QACZ,CAAC,CAAC;QAEF,6BAAwB,GAAG;YACvB,KAAI,CAAC,mBAAmB;gBACpB,KAAI,CAAC,WAAW;oBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;oBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;oBACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU;sBACtC,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,UAAC,IAAI;wBAC3C,aAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;oBAAzD,CAAyD,CAC5D;sBACD,CAAC,CAAC;QAChB,CAAC,CAAC;QAEF;;WAEG;QACH,4BAAuB,GAAG,UAAC,YAAa;YACpC,gFAAgF;YAChF,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7C,KAAI,CAAC,qBAAqB;qBACrB,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC;qBAC7D,SAAS,CAAC,UAAC,KAAK;oBACb,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAC5B,UAAC,MAAM;wBACH,QAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAC9B,UAAC,MAAM,IAAK,aAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAA/B,CAA+B,CAC9C;oBAFD,CAEC,CACR,CAAC;oBAEF,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU;wBACxB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;oBAErD,+DAA+D;oBAC/D,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wBACf,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU;4BACxB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM;4BAC/B,6EAA6E;4BAC7E,UAAC,GAAG;gCACA,UAAG,CAAC,UAAU;oCACd,YAAY,CAAC,QAAQ,CAAC,UAAU;4BADhC,CACgC,CACvC,CAAC;oBACV,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YACtC,CAAC;QACL,CAAC,CAAC;QACF;;UAEE;QACF,mCAA8B,GAAG,UAAC,GAAY;YAC1C,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC,CAAC;QAEF,mBAAc,GAAG,UAAC,OAAe;YAC7B,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAC1D,6BAAa,CAAC,YAAY,CAC7B,CAAC;gBACE,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,YAAY;gBACpC,SAAS,EAAE,OAAO,CAAC,QAAQ;aAC9B,CAAC,CAAC;QACP,CAAC,CAAC;QAEF;;;WAGG;QACH,4BAAuB,GAAG,UAAC,aAA8B;YACrD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAC1D,6BAAa,CAAC,OAAO,CACxB,CAAC;gBACE,SAAS,EAAE,oBAAU,CAAC,KAAK;gBAC3B,SAAS,EAAE,aAAa,CAAC,SAAS;gBAClC,gBAAgB,EAAE,KAAI,CAAC,aAAa,CAAC,kBAAkB;aAC1D,CAAC,CAAC;YACH,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAC1D,6BAAa,CAAC,YAAY,CAC7B,CAAC;gBACE,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,YAAY;gBACpC,SAAS,EAAE,CAAC;aACf,CAAC,CAAC;YACH,gBAAgB;YAChB,KAAI,CAAC,qBAAqB;gBACtB,eAAe,GAAG,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC;YAE5D,+EAA+E;YAC/E,KAAI,CAAC,WAAW,CAAC,aAAa;gBAC1B,aAAa,CAAC,WAAW,IAAI,aAAa,CAAC,WAAW,CAAC,aAAa;sBAC9D,aAAa,CAAC,WAAW,CAAC,aAAa;sBACvC,IAAI,CAAC;YAEf,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC;YAC/B,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;YACpC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,EAAE,CAAC,CACC,aAAa,CAAC,WAAW,CAAC,sBAAsB,IAAI,SAAS;gBAC7D,aAAa,CAAC,WAAW,CAAC,sBAAsB,IAAI,KACxD,CAAC,CAAC,CAAC;gBACC,KAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;YAC9C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YAC7C,CAAC;YAED,gCAAgC;YAChC,KAAI,CAAC,sBAAsB,GAAG,IAAI,+CAAsB,EAAE,CAAC;YAC3D,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAElC,qBAAqB;YACrB,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAElC,mBAAmB;YACnB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAE9B,yBAAyB;YACzB,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAC,IAAI;gBACrC,WAAI,CAAC,OAAO,CAAC,UAAC,EAAE,EAAE,GAAG;oBACjB,IAAM,CAAC,GAAG,QAAQ,CAAC,cAAc,CAC7B,WAAW,GAAG,GAAG,CACA,CAAC;oBACtB,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC;gBACtB,CAAC,CAAC;YALF,CAKE,CACL,CAAC;YAEF,0BAA0B;YAC1B,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;YAC/B,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAE7B,oBAAoB;YACpB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAE3C,qBAAqB;YACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,EAAE,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YAEnB,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;gBACxC,KAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACrD,CAAC;YACD,oBAAoB;YACpB,KAAI,CAAC,OAAO,GAAG,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC;QACrD,CAAC,CAAC;QAEF;;WAEG;QACH,kBAAa,GAAG;YACZ,sCAAsC;YACtC,EAAE,CAAC,CACC,KAAI,CAAC,OAAO;gBACZ,KAAI,CAAC,aAAa;gBAClB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa;gBAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAC7C,CAAC,CAAC,CAAC;gBACC,KAAI,CAAC,qBAAqB;qBACrB,YAAY,CACT,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,EACrC,KAAI,CAAC,WAAW,CAAC,MAAM;sBACjB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ;sBAChC,IAAI,EACV,KAAI,CAAC,OAAO,CAAC,YAAY,EACzB,KAAI,CAAC,aAAa,CAAC,kBAAkB,EACrC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAC/B,KAAI,CAAC,UAAU,EACf,KAAI,CAAC,UAAU,CAClB;qBACA,SAAS,CAAC,UAAC,UAAU;oBAClB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,CAAC;oBAC9C,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBACpC,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;gBACtC,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YACjC,CAAC;QACL,CAAC,CAAC;QAEF;;WAEG;QACH,0BAAqB,GAAG,UAAC,YAA8B;YACnD,KAAI,CAAC,cAAc;iBACd,cAAc,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC;gBACnC,gBAAgB,EAAE,YAAY,CAAC,kBAAkB;gBACjD,SAAS,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS;aAC5C,CAAC;iBACD,SAAS,CAAC,UAAC,IAAI;gBACZ,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAClC,CAAC,CAAC,CAAC;YAEP,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAC/C,6BAAa,CAAC,SAAS,CAC1B,CAAC;gBACE,KAAK,EAAE,YAAY,CAAC,cAAc;aACrC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,YAAY,CAAC,kBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;gBACvC,KAAI,CAAC,qBAAqB;qBACrB,yBAAyB,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC;qBACpD,SAAS,CAAC,UAAC,WAAW;oBACnB,EAAE,CAAC,CACC,WAAW,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI;wBAClC,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CACpC,CAAC,CAAC,CAAC;wBACC,IAAI,aAAW,GAAG,EAAE,CAAC;wBACrB,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,UAAU;4BACtC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,OAAO;gCAC/B,aAAW;oCACP,OAAO,CAAC,QAAQ;wCAChB,KAAK;wCACL,OAAO,CAAC,SAAS;wCACjB,cAAc,CAAC;4BACvB,CAAC,CAAC,CAAC;wBACP,CAAC,CAAC,CAAC;wBACH,KAAI,CAAC,YAAY,CAAC,SAAS,CACvB,oDAAoD,CACvD,CAAC,aAAW,CAAC,EAAE,EAAE,CAAC;oBACvB,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC;YACD,mCAAmC;YACnC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,EAAE,CAAC;YACtC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAElC,KAAI,CAAC,WAAW,GAAG,IAAI,yBAAW,EAAE,CAAC;YACrC,KAAI,CAAC,sBAAsB,GAAG,IAAI,+CAAsB,EAAE,CAAC;YAE3D,0BAA0B;YAC1B,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,CAAC;YAC/B,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC;QAEF;;WAEG;QACH,sBAAiB,GAAG;YAChB;;eAEG;YACH,IAAM,iBAAiB,GACnB,KAAI,CAAC,WAAW;gBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;gBACjC,KAAI,CAAC,eAAe,CAAC,KAAK,GAAG,KAAI,CAAC,mBAAmB,KAAK,CAAC;gBAC3D,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YAEzD,MAAM,CAAC,iBAAiB,IAAI,KAAI,CAAC,cAAc,EAAE,KAAK,MAAM,CAAC;QACjE,CAAC,CAAC;QAEF;;WAEG;QACH,mBAAc,GAAG;YACb,IAAM,SAAS,GAAG,CAAC,CAAC,KAAK,CACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EACnC,UAAC,KAAK,IAAK,QAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAA/C,CAA+C,CAC7D,CAAC;YAEF,sFAAsF;YACtF,IAAM,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,cAAc,CAC/C,MAAM,CACF,KAAI,CAAC,eAAe,CAAC,KAAK;gBACtB,KAAI,CAAC,mBAAmB;gBACxB,SAAS,CAChB,CAAC,OAAO,CAAC,CAAC,CAAC,CACf,CAAC;YACF,6BAA6B;YAC7B,0EAA0E;YAC1E,gBAAgB;YAEhB,MAAM,CAAC,UAAU,KAAK,OAAO;gBACzB,UAAU,KAAK,OAAO;gBACtB,UAAU,KAAK,MAAM;kBACnB,MAAM;kBACN,UAAU,CAAC;QACrB,CAAC,CAAC;QAEF,qBAAgB,GAAG,UAAC,EAAE,EAAE,EAAE;YACtB,eAAe;YACf,gBAAgB;QACpB,CAAC,CAAC;QAEF,eAAU,GAAG,UAAC,EAAE;YACZ,0BAA0B;YAC1B,EAAE,CAAC,CACC,KAAI,CAAC,OAAO,CAAC,IAAI;gBACjB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAC5B,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAC/D,CAAC,CAAC,CAAC;gBACC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC;oBACnD,KAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;oBACzB,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC;0BAChC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE;0BAC9C,IAAI,CAAC;gBACf,CAAC,CAAC,EAAE,CAAC;YACT,CAAC;QACL,CAAC,CAAC;QAEF,sBAAiB,GAAG;YAEhB,IAAM,oBAAoB,GACtB,KAAI,CAAC,WAAW,CAAC,IAAI;YACrB;;;;EAIV;YACM,IAAM,cAAc,GAChB,CAAC,KAAI,CAAC,qBAAqB,CAAC,8BAA8B,CACtD,KAAI,CAAC,WAAW,CACnB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAC5C,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CACnC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAEnD,IAAM,iBAAiB,GACnB,KAAI,CAAC,WAAW;gBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB;gBACvC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB;oBACjC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC;oBAC/C,CAAC,KAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAEnC,IAAM,mBAAmB,GACrB,KAAI,CAAC,WAAW;gBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;gBACtB,wFAAwF;gBACvF,CAAC,CAAC,KAAI,CAAC,qBAAqB,IAAK,CAAC,KAAI,CAAC,sBAAsB,CAAG,CAAC;YAErE,MAAM,CAAC,CACH,cAAc;gBACd,iBAAiB;gBACjB,oBAAoB;gBACpB,mBAAmB,CAEtB,CAAC;QACN,CAAC,CAAC;QAEF,qBAAgB,GAAG,UAAC,EAAU,EAAE,EAAU;YACtC,SAAE,IAAI,EAAE,GAAG,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,QAAQ,GAAG,EAAE,KAAK,EAAE;QAAlD,CAAkD,CAAC;QAEvD;;WAEG;QACH,wBAAmB,GAAG,UAAC,EAAe;YAClC,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAE5B,gCAAgC;YAChC,KAAI,CAAC,mBAAmB,GAAG,EAAE,IAAI,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC;YAEtE,qDAAqD;YACrD,KAAI,CAAC,cAAc;iBACd,cAAc,CAAC,6BAAa,CAAC,kBAAkB,CAAC,CAAC;gBAC9C,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,EAAE,CAAC,aAAa;gBAC7B,SAAS,EAAE,KAAI,CAAC,aAAa,CAAC,KAAK;gBACnC,UAAU,EAAE,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI;aAC9D,CAAC;iBACD,SAAS,CAAC,UAAC,KAAK;gBACb,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEP,wDAAwD;YACxD,wCAAwC;YAExC,yDAAyD;YACzD,EAAE,CAAC,CACC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa;gBAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAC7C,CAAC,CAAC,CAAC;gBACC,KAAI,CAAC,uBAAuB,EAAE,CAAC;gBAE/B,oEAAoE;gBACpE,eAAe;gBACf,sDAAsD;gBACtD,QAAQ;YACZ,CAAC;QACL,CAAC,CAAC;QAEF,6BAAwB,GAAG;YACvB,YAAI,CAAC,WAAW,CAAC,SAAS;gBAC1B,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa;gBACxC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW;gBACtC,CAAC,MAAM,CACH,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,gBAAgB,CACpC,CACJ,CAAC,SAAS,CACP,MAAM,CACF,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAC3C,CACJ,EACD,MAAM,CACF,KAAI,CAAC,YAAY,CAAC,oBAAoB,CAClC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CACzC,CACJ,EACD,MAAM,EACN,IAAI,CACP;QApBD,CAoBC,CAAC;QAEN,yBAAoB,GAAG,UAAC,CAAC;YACrB,YAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,sBAAsB,CAAC,UAAU;kBAChC,CAAC,KAAI,CAAC,sBAAsB,CAAC,UAAU;oBACnC,KAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;kBAC5D,IAAI;QAJV,CAIU,CAAC;QAEf,0BAAqB,GAAG,UAAC,CAAC;YACtB,YAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,sBAAsB,CAAC,MAAM;kBAC5B,CAAC,KAAI,CAAC,sBAAsB,CAAC,MAAM;oBAC/B,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;kBACxD,IAAI;QAJV,CAIU,CAAC;QAEf,yBAAoB,GAAG,UAAC,CAAC;YACrB,YAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,qBAAqB;gBAC1B,KAAI,CAAC,qBAAqB,CAAC,UAAU;kBAC/B,CAAC,KAAI,CAAC,qBAAqB,CAAC,UAAU;oBAClC,KAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;kBAC3D,IAAI;QALV,CAKU,CAAC;QAEf,0BAAqB,GAAG,UAAC,CAAC;YACtB,YAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,qBAAqB;gBAC1B,KAAI,CAAC,qBAAqB,CAAC,MAAM;kBAC3B,CAAC,KAAI,CAAC,qBAAqB,CAAC,MAAM;oBAC9B,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;kBACvD,IAAI;QALV,CAKU,CAAC;QAEf,kBAAa,GAAG,UAAC,WAAwB;YACrC,QAAC,KAAI,CAAC,WAAW,CAAC,SAAS;gBACvB,WAAW;oBACX,WAAW,CAAC,WAAW;oBACvB,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC;sBAC5B,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;sBAC1B,IAAI,CAAC;QALf,CAKe,CAAC;QAEpB,qBAAgB,GAAG,UAAC,IAAc;YAC9B,KAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAE5C,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CACrD,6BAAa,CAAC,eAAe,CAChC,CAAC;gBACE,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,UAAU;aACvC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,0BAAqB,GAAG,UAAC,QAAkB;YACvC,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CACrD,6BAAa,CAAC,eAAe,CAChC,CAAC;gBACE,UAAU,EAAE,QAAQ,CAAC,UAAU;aAClC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,qBAAgB,GAAG,UAAC,CAAW,EAAE,CAAW;YACxC,QAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU;QAA7B,CAA6B,CAAC;QAClC,wBAAmB,GAAG,UAAC,CAAW,EAAE,CAAW;YAC3C,QAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW;QAA/B,CAA+B,CAAC;QAEpC,8BAAyB,GAAG;YACxB,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACvC,CAAC,CAAC;QAEF,+BAA0B,GAAG;YACzB,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC;QAEF,8BAAyB,GAAG;YACxB,EAAE,CAAC,CACC,KAAI,CAAC,gCAAgC;gBACrC,KAAI,CAAC,uBACT,CAAC,CAAC,CAAC;gBACC,IAAM,uBAAuB,GAAG,KAAI,CAAC,gCAAgC,CAAC,QAAQ,EAAE,CAAC;gBACjF,KAAI,CAAC,qBAAqB,GAAG,MAAM,CAC/B,KAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE;oBACnC,CAAC,CAAC,QAAQ,CAAC,uBAAuB,EAAE,CAAC,EAAE,GAAG,CAAC,CAClD,CAAC;gBACF,KAAI,CAAC,qBAAqB;qBACrB,kBAAkB,CACf,KAAI,CAAC,qBAAqB,EAC1B,KAAI,CAAC,qBAAqB,CAC7B;qBACA,SAAS,CAAC,UAAC,QAAQ;oBAChB,KAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC;oBAE9D,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAEhD,QAAQ,CAAC,OAAO,CAAC,WAAW,CAE/B,EAAE,EAAE,CAAC;oBACN,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;wBAClC,KAAI,CAAC,sBAAsB,GAAG,MAAM,CAChC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CACpC,CAAC;oBACN,CAAC;gBACL,CAAC,CAAC;YAEV,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,uDAAuD,CAC1D,CAAC;YACN,CAAC;QACL,CAAC,CAAC;QAEF,+BAA0B,GAAG;YACzB,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACvC,CAAC,CAAC;QAEF,4BAAuB,GAAG;YACtB,KAAI,CAAC,qBAAqB;iBACrB,8BAA8B,CAC3B,KAAI,CAAC,qBAAqB,CAAC,UAAU;gBACjC,KAAI,CAAC,qBAAqB,CAAC,MAAM,CACxC;iBACA,SAAS,CAAC,UAAC,QAAQ;gBAChB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAC7B,wBAAwB,CAC3B,EAAE,EAAE,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,cAAY,GAAG,CAAC,CAAC;oBACrB,IAAI,eAAa,GAAG,CAAC,CAAC;oBACtB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;oBACjC,KAAI,CAAC,4BAA4B,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACpD,EAAE,CAAC,CACC,QAAQ,CAAC,QAAQ;wBACjB,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UACpC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,WAAW,CAAC,IAAI;4BACjB,KAAI,CAAC,iBAAiB,CAClB,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAC5B,UAAC,KAAK,IAAK,YAAK,CAAC,SAAS,KAAK,EAAE,EAAtB,CAAsB,CACpC,CACJ,CAAC;wBACN,KAAI,CAAC,WAAW,CAAC,WAAW;4BACxB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBAC3C,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;wBACjD,sDAAsD;wBACtD,KAAI,CAAC,OAAO;4BACR,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;wBAC9C,KAAI,CAAC,WAAW,CAAC,MAAM;4BACnB,KAAI,CAAC,OAAO,CACR,KAAI,CAAC,OAAO,CAAC,SAAS,CAClB,UAAC,KAAK,IAAK,YAAK,CAAC,QAAQ,KAAK,CAAC,EAApB,CAAoB,CAClC,CACJ,CAAC;wBACN,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK;4BAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;gCACtB,cAAY;oCACR,cAAY;wCACZ,KAAK,CAAC,OAAO;4CACT,CAAC,KAAI,CAAC,eAAe,CAAC,UAAU;iDAC3B,UAAU;gDACX,QAAQ,CAAC,QAAQ,CAAC,CAAC;4BACnC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,eAAa;oCACT,eAAa;wCACb,KAAK,CAAC,OAAO;4CACT,CAAC,KAAI,CAAC,eAAe,CAAC,UAAU;iDAC3B,UAAU;gDACX,QAAQ,CAAC,QAAQ,CAAC,CAAC;4BACnC,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;4BACvB,cAAY,GAAG,cAAY,GAAG,cAAY,GAAG,IAAI,CAAC;4BAClD,eAAa;gCACT,eAAa,GAAG,eAAa,GAAG,KAAK,CAAC;wBAC9C,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAChC,IAAI,qCAAiB,CAAC;4BAClB,IAAI,EAAE,CAAC;4BACP,WAAW,EAAE,EAAE;4BACf,MAAM,EAAE,GAAG;4BACX,QAAQ,EAAE,CAAC;4BACX,SAAS,EAAE,CAAC;4BACZ,MAAM,EAAE,cAAY,GAAG,eAAa;4BACpC,KAAK,EAAE,CAAC;4BACR,MAAM,EAAE,GAAG;4BACX,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,CAAC;4BACV,QAAQ,EAAE,CAAC;4BACX,mBAAmB,EAAE,IAAI;4BACzB,iBAAiB,EAAE,IAAI;4BACvB,SAAS,EAAE,CAAC;4BACZ,aAAa,EAAE,GAAG;4BAClB,UAAU,EAAE,CAAC;4BACb,QAAQ,EAAE,EAAE;4BACZ,aAAa,EAAE,EAAE;4BACjB,YAAY,EAAE,CAAC;4BACf,QAAQ,EAAE;gCACN,WAAW,EAAE,IAAI;gCACjB,WAAW,EAAE,QAAQ;gCACrB,WAAW,EAAE,GAAG;gCAChB,gBAAgB,EACZ,mBAAmB;oCACnB,KAAI,CAAC,qBAAqB,CAAC,UAAU;oCACrC,KAAI,CAAC,qBAAqB,CAAC,MAAM;oCACjC,WAAW;oCACX,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;gCAChC,WAAW,EACP,mBAAmB;oCACnB,KAAI,CAAC,qBAAqB,CAAC,UAAU;oCACrC,KAAI,CAAC,qBAAqB,CAAC,MAAM;oCACjC,WAAW;oCACX,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;gCAChC,SAAS,EAAE,KAAK;gCAChB,KAAK,EAAE,KAAK;gCACZ,QAAQ,EAAE,KAAK;gCACf,SAAS,EAAE,KAAK;gCAChB,UAAU,EAAE,KAAK;gCACjB,IAAI,EAAE,GAAG;gCACT,WAAW,EAAE,MAAM;gCACnB,eAAe,EAAE,MAAM;gCACvB,eAAe,EAAE,MAAM;gCACvB,aAAa,EAAE,GAAG;gCAClB,GAAG,EAAE;oCACD,KAAK,EAAE,CAAC;oCACR,OAAO,EAAE,EAAE;iCACd;gCACD,QAAQ,EAAE,IAAI;gCACd,KAAK,EAAE,IAAI;gCACX,YAAY,EAAE,IAAI;gCAClB,WAAW,EAAE,IAAI;gCACjB,MAAM,EAAE,KAAK;gCACb,SAAS,EAAE,IAAI;gCACf,KAAK,EAAE,IAAI;gCACX,QAAQ,EAAE,EAAE;gCACZ,MAAM,EAAE,IAAI;6BACf;4BACD,iBAAiB,EAAE,IAAI;4BACvB,aAAa,EAAE,IAAI;4BACnB,OAAO,EAAE,cAAY,GAAG,eAAa;4BACrC,aAAa,EAAE,KAAK;4BACpB,SAAS,EAAE,IAAI;4BACf,gBAAgB,EAAE,CAAC;4BACnB,OAAO,EAAE,CAAC;4BACV,YAAY,EAAE,CAAC;4BACf,UAAU,EAAE,CAAC;4BACb,eAAe,EAAE,CAAC;4BAClB,YAAY,EAAE,CAAC;4BACf,YAAY,EAAE,CAAC;yBAClB,CAAC,CACL,CAAC;wBACF,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY;4BACtD,IAAI,6BAAa,CAAC;gCACd,eAAe,EAAE,GAAG;gCACpB,KAAK,EAAE,CAAC;gCACR,WAAW,EAAE,KAAK;gCAClB,EAAE,EAAE,GAAG;gCACP,WAAW,EAAE,KAAK;gCAClB,QAAQ,EAAE,GAAG;gCACb,KAAK,EAAE,EAAE;gCACT,WAAW,EAAE,QAAQ;gCACrB,UAAU,EAAE;oCACR,WAAW,EAAE,IAAI;oCACjB,eAAe,EAAE,IAAI;iCACxB;gCACD,SAAS,EAAE,CAAC;gCACZ,UAAU,EAAE,CAAC;gCACb,KAAK,EAAE;oCACH,OAAO,EAAE,EAAE;iCACd;6BACJ,CAAC,CAAC;wBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,eAAe,GAAG,CAAC,CAAC;wBAC/E,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;4BACvC,UAAU,EAAE,IAAI;4BAChB,QAAQ,EAAE,cAAY,GAAG,eAAa;4BACtC,WAAW,EACP,cAAY;gCACZ,eAAa;gCACb,cAAY,GAAG,IAAI;gCACnB,eAAa,GAAG,IAAI;4BACxB,UAAU,EAAE,cAAc;4BAC1B,UAAU,EAAE,CAAC;4BACb,aAAa,EAAE,KAAK;yBACvB,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;4BAClC,cAAc,EAAE,QAAQ;4BACxB,WAAW,EAAE,KAAK;4BAClB,YAAY,EAAE,cAAY,GAAG,IAAI;4BACjC,UAAU,EAAE,EAAE;4BACd,eAAe,EAAE,CAAC;4BAClB,aAAa,EAAE,cAAY;4BAC3B,QAAQ,EAAE,GAAG;4BACb,OAAO,EAAE,EAAE;yBACd,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;4BAClC,cAAc,EAAE,QAAQ;4BACxB,WAAW,EAAE,UAAU;4BACvB,YAAY,EAAE,eAAa,GAAG,KAAK;4BACnC,UAAU,EAAE,IAAI;4BAChB,eAAe,EAAE,CAAC;4BAClB,aAAa,EAAE,eAAa;4BAC5B,QAAQ,EAAE,GAAG;4BACb,OAAO,EAAE,EAAE;yBACd,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;wBAClC,KAAI,CAAC,wBAAwB,EAAE,CAAC;wBAChC,KAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,kCAAkC;oBACtC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CACN,QAAQ,CAAC,QAAQ;wBACjB,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,UACpC,CAAC,CAAC,CAAC;wBACC,KAAI,CAAC,WAAW,CAAC,IAAI;4BACjB,KAAI,CAAC,iBAAiB,CAClB,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAC5B,UAAC,KAAK,IAAK,YAAK,CAAC,SAAS,KAAK,EAAE,EAAtB,CAAsB,CACpC,CACJ,CAAC;wBACN,KAAI,CAAC,WAAW,CAAC,WAAW;4BACxB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBAC3C,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;wBACjD,sDAAsD;wBACtD,KAAI,CAAC,WAAW,CAAC,MAAM;4BACnB,KAAI,CAAC,OAAO,CACR,KAAI,CAAC,OAAO,CAAC,SAAS,CAClB,UAAC,KAAK,IAAK,YAAK,CAAC,QAAQ,KAAK,CAAC,EAApB,CAAoB,CAClC,CACJ,CAAC;wBACN,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,KAAK;4BAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;gCACtB,cAAY;oCACR,cAAY;wCACZ,KAAK,CAAC,OAAO;4CACT,CAAC,QAAQ,CAAC,QAAQ;gDACd,KAAI,CAAC,eAAe,CAAC,UAAU;qDAC1B,UAAU,CAAC,CAAC;4BACjC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,eAAa;oCACT,eAAa;wCACb,KAAK,CAAC,OAAO;4CACT,CAAC,QAAQ,CAAC,QAAQ;gDACd,KAAI,CAAC,eAAe,CAAC,UAAU;qDAC1B,UAAU,CAAC,CAAC;4BACjC,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;4BACvB,cAAY,GAAG,cAAY,GAAG,cAAY,GAAG,IAAI,CAAC;4BAClD,eAAa;gCACT,eAAa,GAAG,eAAa,GAAG,KAAK,CAAC;wBAC9C,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAChC,IAAI,qCAAiB,CAAC;4BAClB,IAAI,EAAE,CAAC;4BACP,WAAW,EAAE,EAAE;4BACf,MAAM,EAAE,GAAG;4BACX,QAAQ,EAAE,CAAC;4BACX,SAAS,EAAE,CAAC;4BACZ,MAAM,EAAE,cAAY,GAAG,eAAa;4BACpC,KAAK,EAAE,CAAC;4BACR,MAAM,EAAE,GAAG;4BACX,OAAO,EAAE,CAAC;4BACV,OAAO,EAAE,CAAC;4BACV,QAAQ,EAAE,CAAC;4BACX,mBAAmB,EAAE,IAAI;4BACzB,iBAAiB,EAAE,IAAI;4BACvB,SAAS,EAAE,CAAC;4BACZ,aAAa,EAAE,GAAG;4BAClB,UAAU,EAAE,CAAC;4BACb,QAAQ,EAAE,EAAE;4BACZ,aAAa,EAAE,EAAE;4BACjB,YAAY,EAAE,CAAC;4BACf,QAAQ,EAAE;gCACN,WAAW,EAAE,IAAI;gCACjB,WAAW,EAAE,QAAQ;gCACrB,WAAW,EAAE,GAAG;gCAChB,gBAAgB,EACZ,mBAAmB;oCACnB,KAAI,CAAC,qBAAqB,CAAC,UAAU;oCACrC,KAAI,CAAC,qBAAqB,CAAC,MAAM;oCACjC,WAAW;oCACX,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;gCAChC,WAAW,EACP,mBAAmB;oCACnB,KAAI,CAAC,qBAAqB,CAAC,UAAU;oCACrC,KAAI,CAAC,qBAAqB,CAAC,MAAM;oCACjC,WAAW;oCACX,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE;gCAChC,SAAS,EAAE,KAAK;gCAChB,KAAK,EAAE,KAAK;gCACZ,QAAQ,EAAE,KAAK;gCACf,SAAS,EAAE,KAAK;gCAChB,UAAU,EAAE,KAAK;gCACjB,IAAI,EAAE,GAAG;gCACT,WAAW,EAAE,MAAM;gCACnB,eAAe,EAAE,MAAM;gCACvB,eAAe,EAAE,MAAM;gCACvB,aAAa,EAAE,GAAG;gCAClB,GAAG,EAAE;oCACD,KAAK,EAAE,CAAC;oCACR,OAAO,EAAE,EAAE;iCACd;gCACD,QAAQ,EAAE,IAAI;gCACd,KAAK,EAAE,IAAI;gCACX,YAAY,EAAE,IAAI;gCAClB,WAAW,EAAE,IAAI;gCACjB,MAAM,EAAE,KAAK;gCACb,SAAS,EAAE,IAAI;gCACf,KAAK,EAAE,IAAI;gCACX,QAAQ,EAAE,EAAE;gCACZ,MAAM,EAAE,IAAI;6BACf;4BACD,iBAAiB,EAAE,IAAI;4BACvB,aAAa,EAAE,IAAI;4BACnB,OAAO,EAAE,cAAY,GAAG,eAAa;4BACrC,aAAa,EAAE,KAAK;4BACpB,SAAS,EAAE,IAAI;4BACf,gBAAgB,EAAE,CAAC;4BACnB,OAAO,EAAE,CAAC;4BACV,YAAY,EAAE,CAAC;4BACf,UAAU,EAAE,CAAC;4BACb,eAAe,EAAE,CAAC;4BAClB,YAAY,EAAE,CAAC;4BACf,YAAY,EAAE,CAAC;yBAClB,CAAC,CACL,CAAC;wBACF,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY;4BACtD,IAAI,6BAAa,CAAC;gCACd,eAAe,EAAE,GAAG;gCACpB,KAAK,EAAE,CAAC;gCACR,WAAW,EAAE,KAAK;gCAClB,EAAE,EAAE,GAAG;gCACP,WAAW,EAAE,KAAK;gCAClB,QAAQ,EAAE,GAAG;gCACb,KAAK,EAAE,EAAE;gCACT,WAAW,EAAE,QAAQ;gCACrB,UAAU,EAAE;oCACR,WAAW,EAAE,IAAI;oCACjB,eAAe,EAAE,IAAI;iCACxB;gCACD,SAAS,EAAE,CAAC;gCACZ,UAAU,EAAE,CAAC;gCACb,KAAK,EAAE;oCACH,OAAO,EAAE,EAAE;iCACd;6BACJ,CAAC,CAAC;wBACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,eAAe,GAAG,CAAC,CAAC;wBAC/E,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;4BACvC,UAAU,EAAE,IAAI;4BAChB,QAAQ,EAAE,cAAY,GAAG,eAAa;4BACtC,WAAW,EACP,cAAY;gCACZ,eAAa;gCACb,cAAY,GAAG,IAAI;gCACnB,eAAa,GAAG,IAAI;4BACxB,UAAU,EAAE,cAAc;4BAC1B,UAAU,EAAE,CAAC;4BACb,aAAa,EAAE,KAAK;yBACvB,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;4BAClC,cAAc,EAAE,QAAQ;4BACxB,WAAW,EAAE,KAAK;4BAClB,YAAY,EAAE,cAAY,GAAG,IAAI;4BACjC,UAAU,EAAE,EAAE;4BACd,eAAe,EAAE,CAAC;4BAClB,aAAa,EAAE,cAAY;4BAC3B,QAAQ,EAAE,GAAG;4BACb,OAAO,EAAE,EAAE;yBACd,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC;4BAClC,cAAc,EAAE,QAAQ;4BACxB,WAAW,EAAE,UAAU;4BACvB,YAAY,EAAE,eAAa,GAAG,KAAK;4BACnC,UAAU,EAAE,IAAI;4BAChB,eAAe,EAAE,CAAC;4BAClB,aAAa,EAAE,eAAa;4BAC5B,QAAQ,EAAE,GAAG;4BACb,OAAO,EAAE,EAAE;yBACd,CAAC,CAAC;wBACH,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;wBAClC,KAAI,CAAC,wBAAwB,EAAE,CAAC;wBAChC,KAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,8BAA8B,CACjC,EAAE,EAAE,CAAC;oBACV,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,+BAA+B,CAClC,EAAE,EAAE,CAAC;gBACV,CAAC;YACL,CAAC,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,+BAA0B,GAAG;YACzB,YAAI,CAAC,WAAW;gBAChB,KAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW;gBACjC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW;kBACvC,KAAI,CAAC,aAAa;oBAClB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa;oBAC/B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;sBACtC,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,UAAC,IAAI;wBAC1C,aAAM,CAAC,IAAI,CAAC,SAAS,CAAC;oBAAtB,CAAsB,CACzB,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM;sBAC7B,CAAC;kBACL,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAChC,MAAM,CACF,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAC7D,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,CAC3B;QAfP,CAeO,CAAC;QAnqER,IAAI,CAAC,cAAc,GAAG,8BAA8B,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,cAAc;aACd,cAAc,CAAC,6BAAa,CAAC,MAAM,CAAC,CAAC;YAClC,KAAK,EAAE,0BAAgB,CAAC,OAAO;SAClC,CAAC;aACD,SAAS,CAAC,UAAC,KAAU;YAClB,wCAAwC;YACxC,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YAChC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAClC,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAChD,6BAAa,CAAC,SAAS,CAC1B,EAAE,CAAC;QACJ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CACpD,6BAAa,CAAC,gBAAgB,CACjC,CAAC;YACE,SAAS,EAAE,oBAAU,CAAC,KAAK;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,OAAO;YAClD,cAAO,CAAC,MAAM,CACV,UAAC,MAAM;gBACH,aAAM,CAAC,kBAAkB,IAAI,CAAC;oBAC9B,MAAM,CAAC,kBAAkB,IAAI,EAAE;YAD/B,CAC+B,CACtC;QAJD,CAIC,CACJ,CAAC;QACF,iFAAiF;QACjF,aAAa;QACb,MAAM;QAEN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAC/C,6BAAa,CAAC,SAAS,CAC1B,EAAE,CAAC;QAEJ,gGAAgG;QAEhG,4BAA4B;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB;YAClC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,oBAAoB;YACrC,qBAAqB,CAAC,sBAAsB,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa;YAC9B,qBAAqB,CAAC,eAAe,EAAE,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB;YACnC,qBAAqB,CAAC,oBAAoB,EAAE,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe;YAChC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe;YAChC,qBAAqB,CAAC,iBAAiB,EAAE,CAAC;QAE9C,2BAA2B;QAC3B,IAAI,CAAC,qBAAqB;aACrB,kBAAkB,EAAE;aACpB,SAAS,CACN,UAAC,UAAU,IAAK,QAAC,KAAI,CAAC,eAAe,CAAC,UAAU,GAAG,UAAU,CAAC,EAA9C,CAA8C,CACjE,CAAC;QAEN,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAC9D,6BAAa,CAAC,OAAO,CACxB,CAAC;YACE,cAAc,EAAE,CAAC;SACpB,CAAC,CAAC;IACP,CAAC;IArFD,sCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CACnE,IAAI,CAAC,OAAO,CACf,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACjD,CAAC;IAu6BD;;OAEG;IACH,+CAAsB,GAAtB,UAAuB,CAAC,EAAE,CAAC;QACvB,sDAAsD;QACtD,IAAI,CAAC,WAAW,CAAC,gBAAgB;YAC7B,IAAI,CAAC,YAAY,CAAC,sBAAsB,CACpC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CACpC,CAAC;IACV,CAAC;IAED;;OAEG;IACH,8CAAqB,GAArB,UAAsB,CAAC,EAAE,CAAC;QACtB,sDAAsD;QACtD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAChE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAC5B,CAAC;QACF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,qCAAqC,CACxC,EAAE,EAAE,CAAC;QACV,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CACN,CAAC,CACG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;YAC1B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;YAC1C,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;gBAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;gBACtC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK;oBAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;YAChD,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;gBAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI;gBACtC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK;oBAC3B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK;gBAC3C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG;oBACzB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAEtD,CAAC,CAAC,CAAC;YACC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAChC,oEAAoE,CACvE,EAAE,EAAE,CAAC;QACV,CAAC;IACL,CAAC;IAiuCL,qBAAC;AAAD,CAAC;AAzrEG;IADC,mBAAY,CAAC,qBAAqB,CAAC;;;;mDAKnC;AApLQ,cAAc;IAL1B,gBAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,+FAAoC;QACpC,+FAAoC;KACvC,CAAC;yDA2L8B,+BAAc,oBAAd,+BAAc,sDACP,6CAAqB,oBAArB,6CAAqB,sDAC/B,2BAAY,oBAAZ,2BAAY,sDACN,uCAAiB,oBAAjB,uCAAiB,sDAChB,uCAAkB,oBAAlB,uCAAkB,sDAC9B,0BAAW,oBAAX,0BAAW,sDACX,eAAM,oBAAN,eAAM,sDACI,mCAAgB,oBAAhB,mCAAgB;GAjMrC,cAAc,CAy2E1B;AAz2EY,wCAAc;;;;;;;;;ACrE3B,+YAA+Y,gBAAgB,yJAAyJ,w/EAAw/E,kFAAkF,o5DAAo5D,2BAA2B,0KAA0K,oBAAoB,ymBAAymB,iBAAiB,i2BAAi2B,iBAAiB,4KAA4K,yBAAyB,2fAA2f,2BAA2B,4KAA4K,sBAAsB,GAAG,mCAAmC,6NAA6N,gtBAAgtB,kBAAkB,2mBAA2mB,2BAA2B,mpBAAmpB,2BAA2B,wSAAwS,qIAAqI,KAAK,6HAA6H,i5BAAi5B,2BAA2B,0JAA0J,iBAAiB,+5CAA+5C,+GAA+G,cAAc,iBAAiB,ogDAAogD,+GAA+G,cAAc,iBAAiB,k3FAAk3F,gBAAgB,2qBAA2qB,kBAAkB,mDAAmD,kBAAkB,oqDAAoqD,kBAAkB,KAAK,kBAAkB,g5BAAg5B,kCAAkC,KAAK,4BAA4B,47CAA47C,mBAAmB,ggDAAggD,qBAAqB,mlCAAmlC,kBAAkB,IAAI,aAAa,ucAAuc,gFAAgF,kQAAkQ,mVAAmV,iPAAiP,kBAAkB,o3BAAo3B,2BAA2B,kNAAkN,sBAAsB,wxEAAwxE,iBAAiB,49QAA49Q,oBAAoB,qlBAAqlB,wBAAwB,2EAA2E,0GAA0G,i7BAAi7B,2BAA2B,sPAAsP,oBAAoB,qsBAAqsB,mBAAmB,ikBAAikB,2BAA2B,kkBAAkkB,2BAA2B,0QAA0Q,qJAAqJ,KAAK,qJAAqJ,+3CAA+3C,uHAAuH,cAAc,iBAAiB,+2CAA+2C,uHAAuH,cAAc,iBAAiB,uqFAAuqF,kCAAkC,KAAK,4BAA4B,+tGAA+tG,iBAAiB,KAAK,kBAAkB,+6CAA+6C,kCAAkC,KAAK,4BAA4B,o6CAAo6C,8DAA8D,oBAAoB,8HAA8H,8DAA8D,uBAAuB,+8BAA+8B,uCAAuC,gWAAgW,gEAAgE,2YAA2Y,uBAAuB,oWAAoW,kDAAkD,8QAA8Q,wEAAwE,83C;;;;;;;ACA//yD,oCAAoC,oBAAoB,EAAE,gCAAgC,4BAA4B,wBAAwB,wBAAwB,qBAAqB,EAAE,8CAA8C,uBAAuB,EAAE,mCAAmC,iBAAiB,0BAA0B,EAAE,oCAAoC,oBAAoB,EAAE,0DAA0D,yBAAyB,EAAE,6EAA6E,0BAA0B,EAAE,8EAA8E,6BAA6B,8BAA8B,EAAE,iFAAiF,uCAAuC,EAAE,iDAAiD,6BAA6B,6BAA6B,sBAAsB,8BAA8B,+BAA+B,0CAA0C,EAAE,sEAAsE,+BAA+B,EAAE,kDAAkD,yBAAyB,uBAAuB,oBAAoB,mBAAmB,iBAAiB,EAAE,4CAA4C,oBAAoB,yBAAyB,EAAE,uFAAuF,0CAA0C,EAAE,uEAAuE,yBAAyB,EAAE,gFAAgF,kBAAkB,EAAE,6EAA6E,oBAAoB,EAAE,mEAAmE,2BAA2B,2BAA2B,oBAAoB,4BAA4B,6BAA6B,wCAAwC,EAAE,uEAAuE,2BAA2B,mBAAmB,EAAE,qCAAqC,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,EAAE,uDAAuD,oBAAoB,qBAAqB,EAAE,yCAAyC,sBAAsB,EAAE,yCAAyC,wBAAwB,EAAE,gDAAgD,2BAA2B,2BAA2B,oBAAoB,mCAAmC,qCAAqC,6CAA6C,6CAA6C,EAAE,wCAAwC,iBAAiB,wBAAwB,EAAE,sDAAsD,2BAA2B,2BAA2B,oBAAoB,gCAAgC,iCAAiC,6CAA6C,EAAE,mEAAmE,mBAAmB,EAAE,0EAA0E,mBAAmB,EAAE,gGAAgG,uBAAuB,sBAAsB,4BAA4B,EAAE,8EAA8E,mBAAmB,EAAE,4FAA4F,8BAA8B,EAAE,iGAAiG,8BAA8B,EAAE,iFAAiF,uBAAuB,EAAE,8FAA8F,2BAA2B,wBAAwB,EAAE,wDAAwD,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,sBAAsB,2BAA2B,EAAE,uEAAuE,6BAA6B,6BAA6B,sBAAsB,kCAAkC,mCAAmC,+CAA+C,EAAE,mFAAmF,+BAA+B,+BAA+B,wBAAwB,qBAAqB,EAAE,yFAAyF,gCAAgC,gCAAgC,6BAA6B,EAAE,+KAA+K,0BAA0B,6BAA6B,EAAE,yFAAyF,oBAAoB,2BAA2B,EAAE,qEAAqE,0BAA0B,EAAE,0DAA0D,wBAAwB,EAAE,kCAAkC,2BAA2B,2BAA2B,oBAAoB,4BAA4B,wBAAwB,EAAE,0CAA0C,2BAA2B,kBAAkB,iCAAiC,EAAE,qCAAqC,2BAA2B,EAAE,yCAAyC,yBAAyB,kBAAkB,yBAAyB,EAAE,8CAA8C,iBAAiB,uBAAuB,EAAE,6DAA6D,4BAA4B,0BAA0B,oBAAoB,EAAE,oDAAoD,qBAAqB,EAAE,gBAAgB,yBAAyB,EAAE,iBAAiB,uBAAuB,EAAE,kBAAkB,oBAAoB,2BAA2B,EAAE,gBAAgB,kBAAkB,mCAAmC,kCAAkC,gCAAgC,gCAAgC,4BAA4B,6BAA6B,mCAAmC,8BAA8B,+BAA+B,gCAAgC,EAAE,iBAAiB,gBAAgB,EAAE,oBAAoB,iBAAiB,EAAE,iBAAiB,0BAA0B,EAAE,eAAe,gCAAgC,EAAE,oBAAoB,2BAA2B,qBAAqB,EAAE,sBAAsB,gBAAgB,EAAE,YAAY,mBAAmB,uBAAuB,uBAAuB,EAAE,kBAAkB,gBAAgB,iBAAiB,eAAe,cAAc,2BAA2B,uBAAuB,cAAc,sBAAsB,EAAE,sBAAsB,eAAe,EAAE,kBAAkB,gCAAgC,gCAAgC,yBAAyB,EAAE,sBAAsB,yBAAyB,yBAAyB,kBAAkB,mCAAmC,kCAAkC,4BAA4B,wBAAwB,EAAE,gBAAgB,sBAAsB,EAAE,8DAA8D,gCAAgC,EAAE,0BAA0B,uBAAuB,aAAa,cAAc,mBAAmB,mBAAmB,kBAAkB,0BAA0B,gBAAgB,wBAAwB,EAAE,iCAAiC,yBAAyB,sBAAsB,0BAA0B,6HAA6H,EAAE,mBAAmB,8BAA8B,eAAe,oBAAoB,8BAA8B,EAAE,YAAY,kBAAkB,iBAAiB,wBAAwB,uBAAuB,EAAE,G;;;;;;;;;;;;;ACA5hR,wGAA2C;;;;;;;;;;;;;;ACA3C,iFAAmC;;;;;;;;;;;;;;;;;;;;ACAnC,sFAAwC;AAMxC,IAAa,MAAM;IAEjB;IACA,CAAC;IACH,aAAC;AAAD,CAAC;AAJY,MAAM;IAJlB,gBAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,iCAAiC;KAC5C,CAAC;;GACW,MAAM,CAIlB;AAJY,wBAAM;;;;;;;;;;;;;;;;;ACNnB,sFAAyC;AACzC,4FAA2C;AAC3C,qEAA2B;AAC3B,+FAAmF;AACnF,iFAA+C;AAC/C,mFAA6D;AAC7D,6EAA4D;AAC5D,+EAA8D;AAE9D,2FAAqE;AAErE,kGAAkD;AAClD,yHAA+E;AAC/E,4JAA4H;AAC5H,4HAAgG;AAChG,uFAAiE;AACjE,+EAAyD;AA6BzD,IAAa,YAAY;IAAzB;IACA,CAAC;IAAD,mBAAC;AAAD,CAAC;AADY,YAAY;IA3BxB,eAAQ,CAAC;QACN,OAAO,EAAE;YACL,wBAAO;YACP,8BAAe;YACf,2BAAY;YACZ,mCAAoB;SACvB;QACD,YAAY,EAAE;YACV,SAAM;YACN,2CAAe;YACf,+BAAc;YACd,+BAAc;SACjB;QACD,SAAS,EAAE;YACP,+BAAc;YACd,yBAAW;YACX,2BAAY;YACZ,6CAAqB;YACrB,mCAAgB;YAChB,yCAAmB;YACnB,2BAAY;SACf;QACD,OAAO,EAAE;YACL,2CAAe;YACf,+BAAc;SACjB;KACJ,CAAC;GACW,YAAY,CACxB;AADY,oCAAY;;;;;;;;;;;AC7CzB,4FAAuD;AACvD,qEAA2B;AAC3B,kGAAkD;AAClD,2FAAqE;AAGrE,uCAAuC;AACvC,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,SAAM;QACjB,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,+BAAc,EAAE,aAAa,EAAE,CAAC,yCAAmB,CAAC,EAAE;SAC9F;KACJ;CACJ,CAAC;AAEW,eAAO,GAAG,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC","file":"ventas.module.chunk.js","sourcesContent":["\r\nimport { Component, Input } from '@angular/core';\r\nimport { UtilsService } from 'app/services/utilsService';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { PopupListaService } from 'app/pages/reusable/otros/popup-lista/popup-lista-service';\r\nimport { ProductoPendiente } from '../../../../../../models/productoPendiente';\r\nimport { ProductoReducido } from '../../../../../../models/productoReducido';\r\nimport { TestBed } from '@angular/core/testing';\r\n\r\n@Component({\r\n    selector: 'tabla-emision-rem',\r\n    templateUrl: './tablaEmisionRem.html',\r\n    styleUrls: ['./tablaEmisionRem.scss']\r\n})\r\n\r\nexport class TablaEmisionRem {\r\n    showTooltip = false;\r\n    sortBy = 'nombre';\r\n    filterQuery = \"\";\r\n    rowsOnPage = 10;\r\n    sortOrder = \"asc\";\r\n    // Fin datos de mierda\r\n\r\n    // Reusabilidad tabla\r\n    @Input() enableAddItem = false;\r\n\r\n\r\n    @Input() columns;\r\n    @Input() data;\r\n    @Input() edit;\r\n    @Input() remove;\r\n    @Input() confirmEdit;\r\n    @Input() checkPrecio;\r\n    @Input() claveAutorizacion = false;\r\n    @Input() subtotales: {\r\n        idProducto: number,\r\n        subtotal: number,\r\n        subtotalIva: number,\r\n        numeroComp: string,\r\n        idFactDetalle: string\r\n    }[];\r\n\r\n    /////////// BUSQUEDA ///////////\r\n    textoBusqueda: string;\r\n    // @Input() productosObservable: Observable<ProductoPendiente[]>;\r\n    @Input() productosObservable: BehaviorSubject<ProductoReducido[]>;\r\n\r\n    productosBusqueda: {\r\n        todos: ProductoReducido[];\r\n        filtrados: BehaviorSubject<ProductoReducido[]>;\r\n    } = { todos: [], filtrados: new BehaviorSubject([]) }\r\n\r\n    productoSeleccionado: ProductoReducido = new ProductoReducido();\r\n    // Inhdice del producto enfocado del popup\r\n    productoEnfocadoIndex: number = -1;\r\n\r\n    @Input() onClickProductoLista;\r\n\r\n    // Lo uso para ver si la fecha fue seteada\r\n    @Input() comprobante;\r\n\r\n    @Input() tablaSubtotales = false;\r\n\r\n    constructor(\r\n        public utilsService: UtilsService,\r\n        private popupListaService: PopupListaService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        // Cargo todos los productos pendientes posibles\r\n        if (this.productosObservable) {\r\n            this.productosObservable.subscribe(prodsPendPosibles => {\r\n                this.productosBusqueda.todos = prodsPendPosibles;\r\n                this.productosBusqueda.filtrados.next(prodsPendPosibles);\r\n            });\r\n        }\r\n\r\n        console.log(this.remove);\r\n    }\r\n\r\n\r\n    toInt(num: string) {\r\n        return +num;\r\n    }\r\n\r\n    sortByWordLength = (a: any) => {\r\n        return a.city.length;\r\n    }\r\n\r\n    /**\r\n     * Obtiene el style a partir de una columna\r\n     * @param col\r\n     */\r\n    getStyleFromCol(col) {\r\n        let styles = {\r\n            'width': col.ancho,\r\n            'border-top': 'none'\r\n        };\r\n        return styles;\r\n    }\r\n\r\n    /**\r\n     * Este método checkea el tipo de dato de la key y la parsea de acuerdo a el. Por ejemplo, si es boolean retorna 'si' en 'true' y 'no' en 'false'\r\n     * @param valueKey\r\n     */\r\n    parseKey(valueKey, key?) {\r\n        const tipoDato: any = typeof valueKey;\r\n\r\n        if (tipoDato === 'boolean') {\r\n            return valueKey ? 'Si' : 'No';\r\n        } else if (tipoDato === 'object') {\r\n            // Me fijo el nombre de la clase del objeto\r\n            if (\r\n                valueKey &&\r\n                (\r\n                    valueKey.constructor.name === 'DateLikePicker' ||\r\n                    valueKey.year && valueKey.month && valueKey.day\r\n                )\r\n            ) {\r\n                return `${valueKey.day < 10 ? '0' : ''}${valueKey.day}/${valueKey.month < 10 ? '0' : ''}${valueKey.month}/${valueKey.year}`\r\n            }\r\n        };\r\n\r\n        // Si es numero, retorna la key nomas\r\n        // return valueKey\r\n        // return typeof valueKey === 'number' ?\r\n        //     this.utilsService.parseDecimal(valueKey) : \r\n        //     valueKey\r\n\r\n\r\n        return (key && key === 'precio' || typeof valueKey !== 'number') ?\r\n            valueKey :\r\n            this.utilsService.parseDecimal(valueKey)\r\n    }\r\n\r\n    /**\r\n     * Retorna el subtotal requerido\r\n     */\r\n    getSubtotal = (item: ProductoPendiente) => (key) => {\r\n\r\n        if (this.subtotales && this.subtotales.length > 0) {\r\n            const subtotalBuscado = this.subtotales\r\n                .find(\r\n                    st => st.idFactDetalle === item.idFactDetalle\r\n                );\r\n\r\n            if (key === 'precioDesc') {\r\n                // debugger;\r\n                return subtotalBuscado && subtotalBuscado[key] ?\r\n                    this.utilsService.toThreeDecimals(subtotalBuscado[key]) : 0\r\n            } else {\r\n                return this.utilsService.parseDecimal(\r\n                    subtotalBuscado && subtotalBuscado[key] ?\r\n                        subtotalBuscado[key] : 0\r\n                )\r\n            }\r\n\r\n        } else {\r\n            return null\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Evento change del input de codProducto\r\n     */\r\n    onChangeInputItemAdd = (textoBuscado) => {\r\n        this.productosBusqueda.filtrados.next(\r\n            this.productosBusqueda.todos.filter(\r\n                prodPend => prodPend.codProducto.toString().includes(textoBuscado) ||\r\n                    prodPend.descripcion.toString().toLowerCase().includes(textoBuscado)\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Busca el producto y limpia la lista\r\n     */\r\n    onBlurInputItemAdd = (eventInput: any) => {\r\n        // Busco si ingresó un cód producto\r\n        const codIngre = eventInput && eventInput.currentTarget ? eventInput.currentTarget.value : null;\r\n        \r\n        // Si lo ingresó, lo busco en la lista de filtrados\r\n        if (codIngre) {\r\n            // Busco el producto en la lista\r\n            const prodBuscado = this.productosBusqueda.filtrados.getValue().find(\r\n                (p: ProductoReducido) => p.codProducto === codIngre\r\n            );\r\n\r\n            // Si lo encontré, lo selecciono. Sinó, no.\r\n            if(prodBuscado) {\r\n                this.onClickProductoListaLocal(prodBuscado);\r\n            } else {\r\n                this.utilsService.showModal('Error')('No existe un artículo con ese código')()()\r\n            } \r\n         }\r\n\r\n\r\n        setTimeout(()=>this.productosBusqueda.filtrados.next([]), 100);\r\n\r\n        // También reseteo el indice de busqueda\r\n        this.productoEnfocadoIndex = -1;\r\n    }\r\n\r\n    leftProduct = (event) => event.target.value ? this.utilsService.showModal(\"Error\")(\"No existe un producto con ese codigo\") : null\r\n\r\n    tiraError = () => this.utilsService.showModal(\"Error\")(\"No existe un producto con ese codigo\")\r\n    /**\r\n     * Retorna el offset del input add\r\n     */\r\n    getOffsetOfAddInput = () => {\r\n        return this.utilsService.getOffset(document.getElementById('addInput'));\r\n    }\r\n\r\n    /**\r\n     * Setea la fecha de compra calculandola dado un string en formato 'ddmm', parseando a 'dd/mm/aaaa'\r\n     */\r\n    onCalculateFecha = (e) => (key) => (subkey) => (item) => {\r\n        if (!item[key][subkey] || typeof item[key][subkey] !== 'string') return;\r\n\r\n        item[key][subkey] = this.utilsService.stringToDateLikePicker(item[key][subkey]);\r\n\r\n        // Hago focus en el prox input\r\n        (subkey === 'fechaElab') ? document.getElementById(\"fecha-fechaVto\").focus() : null;\r\n\r\n        // Confirmo edicion despues de hacer blur en el último campo\r\n        (subkey === 'fechaVto') ? this.confirmEdit(item) : null;\r\n    }\r\n\r\n    onCalculateFechaPago = (e) => (key) => (item) => {\r\n        if (!item[key] || typeof item[key] !== 'string') return;\r\n\r\n        item[key] = this.utilsService.stringToDateLikePicker(item[key]);\r\n    }\r\n\r\n\r\n    /**\r\n     * Evento de cuando se apreta felcha arriba o feclah abajo en input de busca producto\r\n     */\r\n    keyPressInputTexto = (e: any) => (upOrDown) => {\r\n        e.preventDefault();\r\n        // Hace todo el laburo de la lista popup y retorna el nuevo indice seleccionado\r\n        this.productoEnfocadoIndex =\r\n            this.popupListaService.keyPressInputForPopup(upOrDown)(this.productosBusqueda.filtrados.value)(this.productoEnfocadoIndex)\r\n    }\r\n\r\n    /**\r\n     * Evento on enter en el input de buscar productos\r\n     */\r\n    onEnterInputBuscProd = (e: any) => {\r\n        e.preventDefault();\r\n        this.productosBusqueda.filtrados.subscribe(prodsLista => {\r\n            // Busco el producto\r\n            const prodSelect = prodsLista && prodsLista.length ? prodsLista[this.productoEnfocadoIndex] : null;\r\n            // Lo selecciono\r\n            prodSelect ? this.onClickProductoListaLocal(prodSelect) : null;\r\n            // Reseteo el indice del prod buscado\r\n            this.productoEnfocadoIndex = -1;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Funcionalidad extra en onclickproductolsita\r\n     */\r\n    onClickProductoListaLocal = (prodSelect) => {\r\n        this.textoBusqueda = '';\r\n        this.onClickProductoLista(prodSelect)\r\n    }\r\n\r\n    checkIfEnEdicion = (col) => (item) =>\r\n        col.enEdicion && col.enEdicion === item.idFactDetalle\r\n\r\n\r\n    // Checkea si pongo el 'tick' para finalizar la edicion.\r\n    checkIfShowTick(item) {\r\n        if (this.columns) {\r\n            return this.columns.some(col => {\r\n\r\n                return col.enEdicion && (\r\n                    (item && item.idFactDetalle && col.enEdicion === item.idFactDetalle) ||\r\n                    (item.nroLote && col.enEdicion === item.nroLote) ||\r\n                    (item.idFormaPagoDet && col.enEdicion === item.idFormaPagoDet) ||\r\n                    (item.cuentaContable && col.enEdicion === item.cuentaContable)\r\n                )\r\n\r\n            });\r\n        };\r\n    }\r\n\r\n    // Cheackea si esta en edicion\r\n    checkIfEditOn = (item) => (col) => col.enEdicion && (\r\n        (item && item.idFactDetalle && col.enEdicion === item.idFactDetalle) ||\r\n        (item.nroLote && col.enEdicion === item.nroLote) ||\r\n        (item.idFormaPagoDet && col.enEdicion === item.idFormaPagoDet) ||\r\n        (item.cuentaContable && col.enEdicion === item.cuentaContable)\r\n    )\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Retorna la clase del input que se va a poner en edicio y enfocar primero, cuando se apreta en editar\r\n     */\r\n    getClassInputEditable = (item) => (col) => {\r\n        if (item) {\r\n            // Agarro el id dependiendo el tipo de archivo. Como lo uso en lotes trazables y en detalles formas pagos y productos pendientes, solo me fijo esos dos\r\n            const idItem = item.nroLote ? item.nroLote :\r\n                item.idFormaPagoDet ? item.idFormaPagoDet :\r\n                    item.cuentaContable ? item.cuentaContable :\r\n                        item && item.idFactDetalle ? item.idFactDetalle : '000';\r\n\r\n            // 'form-control edit-input input-edit-' + item.producto.idProductos\r\n            return `form-control edit-input${col.editarFocus ? ` editar-focus-${idItem}` : ''}`\r\n        }\r\n    }\r\n\r\n    getPositionTooltip = () => {\r\n        const fatherPosition = this.getOffsetOfAddInput();\r\n\r\n        return {\r\n            top: (fatherPosition.top - 3) + 'px',\r\n            left: (fatherPosition.left + 60) + 'px'\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retorna true si PUEDE agregar un producto. \r\n     * Retorna false si NO PUEDE agregar un producto.\r\n     */\r\n    canAddProduct = () => {\r\n        if(this.comprobante && this.comprobante.tipo && this.comprobante.tipo.idCteTipo && this.comprobante.tipo.idCteTipo == 77) {\r\n            return this.comprobante.fechaComprobante &&\r\n            this.comprobante.fechaComprobante.year && \r\n            this.comprobante.moneda && \r\n            this.comprobante.moneda.idMoneda &&\r\n            this.claveAutorizacion\r\n        } else {\r\n            return this.comprobante.fechaComprobante &&\r\n            this.comprobante.fechaComprobante.year && \r\n            this.comprobante.moneda && \r\n            this.comprobante.moneda.idMoneda\r\n        }\r\n    }\r\n        \r\n\r\n    checkIncluyeNetoAndIva = (col) => {\r\n        const fafa = (\r\n            col.key === 'subtotal' ||\r\n            (\r\n                col.key === 'importeTotal' &&\r\n                col.nombre === 'importe'\r\n            ) ||\r\n            col.key === 'subtotalIva'\r\n        ) &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            (\r\n                (\r\n                    !this.tablaSubtotales &&\r\n                    !this.comprobante.tipo.comprobante.incluyeNeto\r\n                ) ||\r\n                (\r\n                    this.tablaSubtotales &&\r\n                    !this.comprobante.tipo.comprobante.incluyeIva\r\n                ) || (\r\n                    col.key === 'subtotalIva' &&\r\n                    !this.comprobante.tipo.comprobante.incluyeIva\r\n                )\r\n\r\n            )\r\n\r\n        return fafa\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    onBlurInput = (e, col) => col.decimal &&\r\n        this.utilsService.onBlurInputNumber(e)\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.component.ts","module.exports = \"\\r\\n<div class=\\\"panel panel-default tabla-ingreso\\\">\\r\\n    <table class=\\\"table table-striped\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"rowsOnPage\\\" [(mfSortBy)]=\\\"sortBy\\\" [(mfSortOrder)]=\\\"sortOrder\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th *ngIf=\\\"edit || remove\\\" style=\\\"width: 10%; border-top: none;\\\"></th>\\r\\n                <!-- Recorro y muestro las columnas recibidas en el input -->\\r\\n                <th class=\\\"table-column\\\" *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"getStyleFromCol(col)\\\" [ngClass]=\\\"col.customClass ? col.customClass : 'text-align: left;'\\\">\\r\\n                    <mfDefaultSorter by=\\\"name\\\">{{col.nombre}}</mfDefaultSorter>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody #tbodyref>\\r\\n            <tr *ngFor=\\\"let item of mf.data\\\">\\r\\n                <!-- BOTONES EDITAR Y BORRAR -->\\r\\n                <td *ngIf=\\\"edit || remove\\\" class=\\\"btn-container-td\\\">\\r\\n                    <div class=\\\"btn-container\\\">\\r\\n                        <div *ngIf=\\\"edit\\\" (click)=\\\"edit(item)\\\" class=\\\"btn-accion btn-editar\\\">\\r\\n                            <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"remove\\\" (click)=\\\"remove(item)\\\" class=\\\"btn-accion btn-remover\\\">\\r\\n                            <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"checkIfShowTick(item)\\\" (click)=\\\"confirmEdit(item)\\\" class=\\\"btn-accion btn-remover\\\">\\r\\n                            <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <!-- FIN BOTONES EDITAR Y BORRAR -->\\r\\n\\r\\n                <!-- ACA MUESTRA LA DATA -->\\r\\n                <td *ngFor=\\\"let col of columns\\\" [ngClass]=\\\"col.customClass ? col.customClass : 'text-align: left;'\\\">\\r\\n                    <div *ngIf=\\\"col.subkey\\\">\\r\\n                        <div *ngIf=\\\"!checkIfEditOn(item)(col)\\\">\\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"col.decimal\\\">\\r\\n                                {{utilsService.parseDecimal(!utilsService.checkIfJson(item[col.key][col.subkey]) ? item[col.key][col.subkey] : item[col.key][col.subkey].descripcion)}}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"!col.decimal\\\">\\r\\n                                    {{parseKey(\\r\\n                                        !utilsService.checkIfJson(item[col.key][col.subkey]) ? item[col.key][col.subkey] : item[col.key][col.subkey].descripcion\\r\\n                                        )}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"checkIfEditOn(item)(col)\\\">\\r\\n                            <input *ngIf=\\\"(col.nombre !== 'trazable' && col.key !== 'trazabilidad')\\\"\\r\\n\\r\\n                                    [(ngModel)]=\\\"item[col.key][col.subkey]\\\"\\r\\n                                    style=\\\"margin: 4px 6px;\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n\\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\"\\r\\n                                    id=\\\"inputSubKey\\\"\\r\\n                                    placeholder=\\\"\\\">\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!col.subkey\\\">\\r\\n                        <div *ngIf=\\\"!checkIfEditOn(item)(col)\\\">\\r\\n                            <!-- Caso comun -->\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.nombre !== 'imputacion' &&\\r\\n                                col.key !== 'subtotal' &&\\r\\n                                col.key !== 'subtotalIva' &&\\r\\n                                col.key !== 'precioDesc' &&\\r\\n                                col.key !== 'importeTotal' &&\\r\\n                                !col.decimal\\\" >\\r\\n                                {{parseKey(item[col.key])}}\\r\\n                            </div>\\r\\n\\r\\n                            <!-- CASOS PARTICULARES -->\\r\\n                            <div *ngIf=\\\"col.nombre === 'imputacion' && !col.decimal\\\">\\r\\n                                {{ item[col.key] && item[col.key].seleccionada ? item[col.key].seleccionada.descripcion : ''}}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && (col.key == 'recargo' || col.key == 'recargoTotal')\\r\\n                            \\\">\\r\\n                                {{ item[col.key] }}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && col.key == 'diferenciaPrecio'\\r\\n                            \\\">\\r\\n                                {{ utilsService.parseDecimalToThree(item[col.key]) }}\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && col.key !== 'precio'\\r\\n                            \\\">\\r\\n                                {{ utilsService.parseDecimal(item[col.key]) }}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && col.key === 'precio'\\r\\n                            \\\" [ngStyle]=\\\"{'color': (checkPrecio && item.cotaInferior && item.cotaSuperior && (item.cotaInferior > item.precio || item.precio > item.cotaSuperior)) ? '#ff0000' : '#000000'}\\\">\\r\\n                                {{\\r\\n                                    utilsService.toThreeDecimals(item[col.key])\\r\\n                                }}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                    !col.decimal &&\\r\\n                                    col.key !== 'imputacion' &&\\r\\n                                    col.key !== 'tipoDescuento' &&\\r\\n                                    col.key !== 'numero' &&\\r\\n                                    col.key !== 'codigoListaPrecio' &&\\r\\n                                    !checkIncluyeNetoAndIva(col)\\r\\n\\r\\n                                \\\">\\r\\n                                {{\\r\\n                                    col.key == 'importeTotal'\\r\\n                                    ?\\r\\n                                    parseKey(item[col.key]) :\\r\\n                                    getSubtotal(item)(col.key)\\r\\n                                }}\\r\\n                            </div>\\r\\n\\r\\n                            <!-- <div    style=\\\"background: #ff000061 !important;\\\" -->\\r\\n                            <div    style=\\\"color: #c10000 !important;\\\"\\r\\n                                    *ngIf=\\\"\\r\\n                                        checkIncluyeNetoAndIva(col)\\r\\n                                    \\\">\\r\\n                                {{\\r\\n                                    col.key == 'importeTotal'\\r\\n                                    ?\\r\\n                                    parseKey(item[col.key]) :\\r\\n                                    getSubtotal(item)(col.key)\\r\\n                                }}\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"checkIfEditOn(item)(col)\\\">\\r\\n\\r\\n                            <input  *ngIf=\\\"(\\r\\n                                        col.nombre !== 'imputacion' &&\\r\\n                                        col.key !== 'trazabilidad' &&\\r\\n                                        !col.elementoFinalBlur &&\\r\\n                                        (col.key !== 'fechaPago')\\r\\n                                    )\\r\\n                                    \\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key]\\\"\\r\\n                                    style=\\\"margin: 4px 6px; text-align: end;\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\"\\r\\n                                    id=\\\"inputSubKey\\\"\\r\\n                                    placeholder=\\\"\\\"\\r\\n                                    (blur)=\\\"onBlurInput($event, col)\\\"\\r\\n                                    >\\r\\n\\r\\n                                <!-- Datepicker para fechaPago -->\\r\\n                            <div *ngIf=\\\"col.key === 'fechaPago'\\\" class=\\\"datepicker-datelikepicker\\\">\\r\\n                                <input  [attr.id]=\\\"'fecha-pago'\\\" (blur)=\\\"onCalculateFechaPago($event)(col.key)(item)\\\"\\r\\n                                        (keyup.enter)=\\\"onCalculateFechaPago($event)(col.key)(item)\\\"\\r\\n                                        class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"dd-mm-yyyy\\\"\\r\\n                                        name=\\\"dp\\\"\\r\\n                                        [(ngModel)]=\\\"item[col.key]\\\"\\r\\n                                        ngbDatepicker #dComp2=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp2.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <!-- ULTIMO INPUT EDITABLE. CAPTURO EL BLUR -->\\r\\n                            <input  *ngIf=\\\"col.elementoFinalBlur && col.key !== 'tipoDescuento'\\\"\\r\\n                                [(ngModel)]=\\\"item[col.key]\\\"  style=\\\"margin: 4px 6px; text-align: end;\\\" type=\\\"text\\\"\\r\\n                                class=\\\"form-control edit-input\\\" id=\\\"inputSubKey\\\" placeholder=\\\"\\\"\\r\\n                                (blur)=\\\"confirmEdit(item)\\\">\\r\\n\\r\\n                                <!-- CASO ESPECIAL EN ULTIMO IPUT EDITABLE -->\\r\\n                                <select *ngIf=\\\"col.elementoFinalBlur && col.key === 'tipoDescuento'\\\"\\r\\n                                        [(ngModel)]=\\\"item[col.key]\\\"\\r\\n                                        class=\\\"form-control edit-input\\\"\\r\\n                                        (blur)=\\\"confirmEdit(item)\\\"\\r\\n                                        >\\r\\n                                    <option>\\r\\n                                        %\\r\\n                                    </option>\\r\\n                                    <option>\\r\\n                                        $\\r\\n                                    </option>\\r\\n                                </select>\\r\\n\\r\\n                                <!-- FIN CASO ESPECIAL EN ULTIMO IPUT EDITABLE -->\\r\\n\\r\\n                            <!-- FIN ULTIMO INPUT EDITABLE -->\\r\\n\\r\\n\\r\\n                            <!-- CASOS PARTICULARES -->\\r\\n                            <select *ngIf=\\\"col.nombre === 'imputacion'\\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key].seleccionada\\\"\\r\\n                                    [ngClass]=\\\"'form-control without-padding editar-focus-' + item.idFactDetalle\\\"\\r\\n                                    >\\r\\n                                <option *ngFor=\\\"let impu of item[col.key].todas\\\" [ngValue]=\\\"impu\\\">\\r\\n                                    {{impu.descripcion}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                            <!-- FIN CASOS PARTICULARES -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <!-- FIN DE MUESTREO DE DATA -->\\r\\n            </tr>\\r\\n\\r\\n            <!-- <div *ngIf=\\\"showTooltip && (!comprobante || !comprobante.fechaComprobante || !comprobante.fechaComprobante.year)\\\" class=\\\"tooltip-add-prod\\\" [ngStyle]=\\\"getPositionTooltip()\\\"> -->\\r\\n            <div *ngIf=\\\"showTooltip && !canAddProduct()\\\" class=\\\"tooltip-add-prod\\\" [ngStyle]=\\\"getPositionTooltip()\\\">\\r\\n                <span *ngIf=\\\"productosObservable.value && productosObservable.value.length > 0\\\">\\r\\n                    Debe completar la fecha del comprobante antes de agregar productos\\r\\n                </span>\\r\\n                <!-- <span *ngIf=\\\"!(productosObservable.value && productosObservable.value.length > 0)\\\">\\r\\n                    Debe seleccionar una forma de pago para poder agregar productos\\r\\n                </span> -->\\r\\n            </div>\\r\\n\\r\\n            <!-- ROW PARA AGREGAR UN PRODUCTO -->\\r\\n            <tr class=\\\"row-agregar-producto\\\" *ngIf=\\\"enableAddItem\\\">\\r\\n                <td></td>\\r\\n                <td (mouseenter) = \\\"showTooltip = true\\\" (mouseleave) = \\\"showTooltip = false\\\">\\r\\n                    <input  [(ngModel)]=\\\"textoBusqueda\\\" type=\\\"text\\\" class=\\\"form-control input-new-prod\\\" id=\\\"addInput\\\" placeholder=\\\"\\\"\\r\\n                            (blur)=\\\"onBlurInputItemAdd($event)\\\"\\r\\n                            (ngModelChange)=\\\"onChangeInputItemAdd($event)\\\"\\r\\n                            (keydown.arrowdown)=\\\"keyPressInputTexto($event)('down')\\\"\\r\\n                            (keydown.arrowup)=\\\"keyPressInputTexto($event)('up')\\\"\\r\\n                            (keydown.enter)=\\\"onEnterInputBuscProd($event)\\\"\\r\\n                            [disabled]=\\\"!canAddProduct()\\\"\\r\\n                            (focusout)=\\\"leftProduct($event)\\\">\\r\\n\\r\\n                    <popup-lista *ngIf=\\\"textoBusqueda && textoBusqueda.length > 0\\\"\\r\\n                                    [items]=\\\"productosBusqueda.filtrados\\\"\\r\\n                                    [keysToShow]=\\\"['descripcion', 'codProducto']\\\"\\r\\n                                    [onClickItem]=\\\"onClickProductoListaLocal\\\"\\r\\n                                    [fatherPosition]=\\\"getOffsetOfAddInput()\\\">\\r\\n                    </popup-lista>\\r\\n                </td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n            </tr>\\r\\n            <!-- FIN ROW PARA AGREGAR UN PRODUCTO -->\\r\\n\\r\\n        </tbody>\\r\\n\\r\\n        <tfoot>\\r\\n\\r\\n            <tr>\\r\\n                <td colspan=\\\"12\\\" style=\\\"border-top: none\\\">\\r\\n                    <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n    </table>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.html\n// module id = ./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.html\n// module chunks = ventas.module","module.exports = \"/*Modificacion Dario*/\\n:host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n:host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n.panel {\\n  font-size: 11px; }\\n.panel .table .table-column {\\n    text-transform: capitalize; }\\n.panel .table thead {\\n    background: #c2c3d2;\\n    color: black;\\n    text-shadow: 0 0 3px #fff; }\\n.panel .table thead tr th {\\n      text-align: center;\\n      padding: 6px 4px; }\\n.panel .table tbody tr td {\\n    text-align: center;\\n    padding: 0 4px; }\\n.panel .table tbody tr td .datepicker-datelikepicker {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      width: 90%;\\n      margin-left: 9%; }\\n.panel .table tbody .btn-container-td {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; }\\n.panel .table tbody .btn-container-td .btn-container {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: start;\\n          -ms-flex-pack: start;\\n              justify-content: flex-start;\\n      padding-top: 7px; }\\n.panel .table tbody .btn-container-td .btn-container .btn-accion {\\n        margin: 2%;\\n        font-size: 0.9rem;\\n        padding: 5px 9px;\\n        cursor: pointer;\\n        padding-top: 0;\\n        display: block; }\\n.panel .table tbody .btn-container-td .btn-container .btn-editar i {\\n        vertical-align: middle; }\\n.panel .table tbody .add-tr .add-td {\\n    padding: 0 4px; }\\n.panel .table tbody .add-tr .add-td .checkbox-traza {\\n      margin-top: 6px; }\\n.panel .table tbody .lista-filtrada-items {\\n    display: block;\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n.panel .table tbody tr td .input-new-prod {\\n    width: 97%;\\n    margin: 0 auto; }\\n.panel .table tbody .tooltip-add-prod {\\n    position: fixed;\\n    background: #c3c5d4;\\n    padding: 5px 10px;\\n    text-align: center;\\n    border-radius: 24px;\\n    opacity: 0.8;\\n    left: 222px;\\n    top: 88px;\\n    font-size: 11px;\\n    -webkit-transition: width 2s;\\n    transition: width 2s; }\\n.panel .table tbody .row-agregar-producto td {\\n    padding: 3px 0px; }\\n.tabla-ingreso .form-control .sort-option {\\n  text-transform: capitalize; }\\n.tabla-ingreso .footer-table {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between; }\\n.tabla-ingreso .footer-table .add-item-label {\\n    font-size: 0.9rem; }\\n.tabla-ingreso .footer-table .deposito {\\n    margin-right: 2%; }\\n.without-padding {\\n  padding: 0; }\\ntd div div:nth-child(2) {\\n  display: none; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.scss\n// module id = ./src/app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.scss\n// module chunks = ventas.module","export * from './tablaFormaPago.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/index.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FormaPago } from 'app/models/formaPago';\r\nimport { ListaPrecio } from 'app/models/listaPrecio';\r\n\r\n@Component({\r\n    selector: 'tabla-forma-pago',\r\n    templateUrl: './tablaFormaPago.html',\r\n    styleUrls: ['./tablaFormaPago.scss']\r\n})\r\n    \r\nexport class TablaFormaPago {\r\n    // Datos de la tabla\r\n    @Input() dataTable;\r\n    @Input() disableRest = false;\r\n\r\n    // Eventos de cambio que atrapo en EmisionRemito\r\n    @Output() onAddSelecFormaPago = new EventEmitter<FormaPago>();\r\n    @Output() onRemoveSelecFormaPago = new EventEmitter<FormaPago>();\r\n\r\n    seleccionados: FormaPago[] = [];\r\n    seleccionado: string = null;\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * Evento change del checkbox\r\n     */\r\n    onChangeCheckbox = (e) => (fp: FormaPago) => {\r\n        if (e && e.target) {\r\n            const estado = e.target.checked;\r\n            this.seleccionado = estado ? fp.descripcion : null;\r\n            // Actualizo la lista de seleccioandos del componete emisionRemitos\r\n            estado ? \r\n                this.onAddSelecFormaPago.emit(fp) :\r\n                this.onRemoveSelecFormaPago.emit(fp);\r\n\r\n            // También actualizo la lista seleccionados de este componente (lo necesito para checkear si los checkbox son seleccionables o no)\r\n            estado ? \r\n                this.seleccionados.push(fp) :\r\n                this.seleccionados = this.seleccionados.filter(fpSelec => fpSelec.idFormaPago !== fp.idFormaPago);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focusea el input de buscar producto, si y solo si es el último checkbox el bluseado\r\n     */\r\n    onBlurCheckbox = (isLast) => \r\n        isLast && document.getElementById('addInput') ? \r\n            document.getElementById('addInput').focus() : null\r\n        \r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.component.ts","module.exports = \"<div class=\\\"tabla-forma-pago\\\">\\r\\n    <table style=\\\"width:100%\\\">\\r\\n        <tr class=\\\"table-header\\\">\\r\\n            <th></th>\\r\\n            <th>F.Pago</th>\\r\\n        </tr>\\r\\n    \\r\\n        <tr *ngFor=\\\"let fp of dataTable; index as indFp; last as isLast\\\">\\r\\n            <td>\\r\\n                <input \\r\\n                    (blur)=\\\"onBlurCheckbox(isLast)\\\" \\r\\n                    [attr.id]=\\\"'fp-check-' + indFp\\\" \\r\\n                    (change)=\\\"onChangeCheckbox($event)(fp)\\\" \\r\\n                    [disabled]=\\\"(seleccionado && fp.descripcion != seleccionado && disableRest)\\\"\\r\\n                    class=\\\"checkbox-td\\\" type=\\\"checkbox\\\"/>\\r\\n            </td>\\r\\n            <td>{{ fp.descripcion }}</td>\\r\\n        </tr>\\r\\n    </table> \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.html\n// module id = ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.html\n// module chunks = ventas.module","module.exports = \"/*Modificacion Dario*/\\n.tabla-forma-pago {\\n  height: 112px;\\n  overflow: auto; }\\n.tabla-forma-pago table .table-header {\\n    background: #b8b8bd; }\\n.tabla-forma-pago table tr:nth-child(even) {\\n    background: #cacad2; }\\n.tabla-forma-pago table td {\\n    padding: 2px; }\\n.tabla-forma-pago table td .checkbox-td {\\n      display: block;\\n      margin: 2px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.scss\n// module id = ./src/app/pages/main/ventas/emisionRemitos/components/tablaFormaPago/tablaFormaPago.scss\n// module chunks = ventas.module","import * as _ from \"lodash\";\r\nimport * as moment from \"moment\";\r\nimport {\r\n    Component,\r\n    ViewChild,\r\n    ElementRef,\r\n    NgZone,\r\n    ChangeDetectorRef,\r\n    HostListener,\r\n} from \"@angular/core\";\r\n\r\nimport { UtilsService } from \"app/services/utilsService\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Padron } from \"../../../../models/padron\";\r\nimport { RecursoService } from \"app/services/recursoService\";\r\nimport { resourcesREST } from \"constantes/resoursesREST\";\r\n\r\nimport { SisTipoOperacion } from \"app/models/sisTipoOperacion\";\r\nimport { TipoComprobante } from \"app/models/tipoComprobante\";\r\nimport { Moneda } from \"../../../../models/moneda\";\r\nimport { ProductoPendiente } from \"app/models/productoPendiente\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { Cotizacion } from \"../../../../models/cotizacion\";\r\n\r\nimport { Comprobante } from \"app/models/comprobante\";\r\n\r\nimport { Deposito } from \"app/models/deposito\";\r\nimport { PopupListaService } from \"app/pages/reusable/otros/popup-lista/popup-lista-service\";\r\nimport { EmisionRemitosService } from \"./emisionRemitosService\";\r\nimport { FormaPago } from \"../../../../models/formaPago\";\r\nimport { CondIva } from \"../../../../models/condIva\";\r\nimport { CteFechas } from \"../../../../models/cteFechas\";\r\nimport { DateLikePicker } from \"../../../../models/dateLikePicker\";\r\nimport { SisCanje } from \"../../../../models/sisCanje\";\r\nimport { ComprobanteRelacionado } from \"../../../../models/comprobanteRelacionado\";\r\nimport { Lote } from \"../../../../models/lote\";\r\n\r\nimport { DetalleFormaPago } from \"app/models/detalleFormaPago\";\r\nimport { GlobalState } from \"app/global.state\";\r\nimport { Numerador } from \"app/models/numerador\";\r\nimport { Factura } from \"../../../../models/factura\";\r\nimport { ModeloFactura } from \"app/models/modeloFactura\";\r\nimport gruposParametros from \"constantes/gruposParametros\";\r\nimport { ProductoReducido } from \"../../../../models/productoReducido\";\r\nimport { Cliente } from \"../../../../models/cliente\";\r\nimport { SisSitIVA } from \"../../../../models/sisSitIVA\";\r\nimport { Router } from \"../../../../../../node_modules/@angular/router\";\r\nimport { Vendedor } from \"../../../../models/vendedor\";\r\nimport sisModulos from \"constantes/sisModulos\";\r\nimport { ComprobanteEncabezado } from \"app/models/comprobanteEncabezado\";\r\nimport { TypeScriptEmitter } from \"@angular/compiler\";\r\nimport { ListaPrecio } from \"app/models/listaPrecio\";\r\nimport { PtoVenta } from \"app/models/ptoVenta\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { LetraCodigo } from \"app/models/letraCodigo\";\r\nimport { Contrato } from \"app/models/contrato\";\r\nimport { Contratos } from \"../../contratos\";\r\nimport { RelacionCanje } from \"app/models/relacionCanje\";\r\nimport { ContratosService } from \"app/services/contratosService\";\r\nimport { AuthService } from \"app/services/authService\";\r\nimport { ComprobanteService } from \"app/services/comprobanteService\";\r\nimport { ModeloDetalle } from \"app/models/modeloDetalle\";\r\nimport { ThrowStmt } from \"@angular/compiler/src/output/output_ast\";\r\n\r\n@Component({\r\n    selector: \"emision-remitos\",\r\n    templateUrl: \"./emisionRemitos.html\",\r\n    styleUrls: [\"./emisionRemitos.scss\"],\r\n})\r\nexport class EmisionRemitos {\r\n    /////////////////////////////////////////////\r\n    /////////// Objetos Seleccionados ///////////\r\n    /////////////////////////////////////////////\r\n    cliente: Padron = new Padron();\r\n    comprobante: Comprobante = new Comprobante();\r\n    comprobanteRelacionado: ComprobanteRelacionado =\r\n        new ComprobanteRelacionado();\r\n    comprobantePesificado = {\r\n        puntoVenta: null,\r\n        numero: null,\r\n    };\r\n    comprobantePesificadoInterno = null;\r\n    notaDeCredito;\r\n    notaDeDebito;\r\n    deposito: Deposito;\r\n    tipoOperacion: SisTipoOperacion;\r\n    sisCanje: SisCanje = new SisCanje();\r\n    formasPagoSeleccionadas: FormaPago[] = [];\r\n    numeroCteSelec: PtoVenta = new PtoVenta();\r\n    factura: Comprobante = new Comprobante();\r\n    statusPreciosCotas: String;\r\n    statusPorcentajeCotas: String;\r\n    mensajeAutorizaAfip :string;\r\n    dataVendedor: {\r\n        vendedor: Vendedor;\r\n        incluir: boolean;\r\n    } = {\r\n        vendedor: new Vendedor(),\r\n        incluir: false,\r\n    };\r\n    listaPrecioSelect: ListaPrecio = new ListaPrecio();\r\n    preservarPrevios: Boolean = false;\r\n    contrato: Contrato = new Contrato();\r\n    relacionCanje: RelacionCanje = new RelacionCanje();\r\n    claveAutorizacion;\r\n    idFactCabRelacionado;\r\n    descuentoOriginal: Number = 0;\r\n    precioOriginal: Number = 0;\r\n    /////////////////////////////////////////////\r\n    //////////// Listas desplegables ////////////\r\n    /////////////////////////////////////////////\r\n    sisSitIvas: Observable<CondIva[]>;\r\n    //tiposComprobantes: Observable<TipoComprobante[]>;\r\n    tiposComprobantes: TipoComprobante[];\r\n    tiposOperacion: Observable<SisTipoOperacion[]>;\r\n    //monedas: Subject<Moneda[]> = new Subject();\r\n    monedas: Moneda[] = [];\r\n    depositos: Observable<Deposito[]>;\r\n    productos: BehaviorSubject<ProductoReducido[]> = new BehaviorSubject([]);\r\n    sisCanjes: Observable<SisCanje[]>;\r\n    clientes: { todos: Padron[]; filtrados: BehaviorSubject<Padron[]> } = {\r\n        todos: [],\r\n        filtrados: new BehaviorSubject([]),\r\n    };\r\n    numerosCte: PtoVenta[] = [];\r\n    tiposComprobantesRel: Observable<TipoComprobante[]>;\r\n    tiposComprobantesFactura: Observable<TipoComprobante[]>;\r\n    listasPreciosUsuario: Observable<ListaPrecio[]>;\r\n    tituloCardComprobante: String = \"COMPROBANTE\";\r\n    estadoRelacionadoObligatorio: Boolean = false;\r\n    contratos: Observable<Contrato[]>;\r\n    relacionesCanje: Observable<RelacionCanje[]>;\r\n    cbtesAfip = [\r\n        {\r\n            codigoAfip: 1,\r\n            descripcion: \"Fact. A\",\r\n        },\r\n        {\r\n            codigoAfip: 2,\r\n            descripcion: \"Nota Débito A\",\r\n        },\r\n        {\r\n            codigoAfip: 6,\r\n            descripcion: \"Fact. B\",\r\n        },\r\n        {\r\n            codigoAfip: 7,\r\n            descripcion: \"Nota Débito B\",\r\n        },\r\n    ];\r\n    relacionadoConfirmado = false;\r\n    codigoAfipRelacionado: number;\r\n    ptoVentaAfipRelacionado: number;\r\n\r\n    numeroComprobanteAfipRelacionado: number;\r\n    numeroAfipRelacionado: number;\r\n    factCabAfipRelacionado: number;\r\n\r\n    disableRest: boolean = false;\r\n    esCanje: boolean = false;\r\n    esPesificado: boolean = false;\r\n    pesificado: boolean = false;\r\n    marcaPesificado = false;\r\n    pesificadoPersisteSn = false;\r\n    percep2459: boolean = false;\r\n    nroCopias: number = 3;\r\n    preCargaPadron: String = \"\";\r\n    statusCargaPadron: boolean;\r\n    /////////////////////////////////////////////\r\n    ////////////////// Otros ////////////////////\r\n    /////////////////////////////////////////////\r\n    // Inhdice del producto enfocado del popup\r\n    clienteEnfocadoIndex: number = -1;\r\n    cotizacionDatos: {\r\n        cotizacion: Cotizacion;\r\n        total: number;\r\n    } = { cotizacion: new Cotizacion(), total: 0 };\r\n\r\n    disabledClienteCustom: boolean = false;\r\n    // Suma de todos los subtotales\r\n    sumatoriaSubtotales: number = 0;\r\n    isAutorizada = false;\r\n    cereales = [];\r\n    estadosSisa = [];\r\n    estadoSisa = null;\r\n    diferidoVto = false;\r\n    cereal = null;\r\n    condicionesConfirmadas = false;\r\n\r\n    /////////////////////////////////////////////\r\n    ////////////////// Tablas ///////////////////\r\n    /////////////////////////////////////////////\r\n    dataTablaFormasPago: FormaPago[];\r\n\r\n    tablas: {\r\n        columnas: {\r\n            columnasProductos: any[];\r\n            columnasTrazabilidad: any[];\r\n            columnasCanje: any[];\r\n            columnasDetallesFp: any[];\r\n            columnasFactura: any[];\r\n            columnasRecargo: any[];\r\n        };\r\n        datos: {\r\n            productosPend: ProductoPendiente[];\r\n            subtotalesProductos: {\r\n                idProducto: number;\r\n                subtotal: number;\r\n                subtotalIva: number;\r\n                numeroComp: string;\r\n                precioDesc: any;\r\n                idFactDetalle: string;\r\n            }[];\r\n            productosCanje: ProductoPendiente[];\r\n            lotesTraza: Lote[];\r\n            detallesFormaPago: DetalleFormaPago[];\r\n            modelosFactura: ModeloFactura[];\r\n            recargoCanjes;\r\n        };\r\n    } = {\r\n        columnas: {\r\n            columnasProductos: [],\r\n            columnasTrazabilidad: [],\r\n            columnasCanje: [],\r\n            columnasDetallesFp: [],\r\n            columnasFactura: [],\r\n            columnasRecargo: [],\r\n        },\r\n        datos: {\r\n            productosPend: [],\r\n            subtotalesProductos: [],\r\n            productosCanje: [],\r\n            lotesTraza: [],\r\n            detallesFormaPago: [],\r\n            modelosFactura: [],\r\n            recargoCanjes: [],\r\n        },\r\n    };\r\n\r\n    // Porcentaje de grabado\r\n    grabandoPorcentaje = 0;\r\n    // Porcentaje de grabado afip;\r\n    grabandoPorcentajeAfip = 0;\r\n\r\n    @HostListener(\"window:beforeunload\")\r\n    canDeactivate() {\r\n        return this.emisionRemitosService.checkPendingChanges(this.comprobante)(\r\n            this.factura\r\n        )(this.cliente)(this.comprobanteRelacionado);\r\n    }\r\n\r\n    /**\r\n     * Toda la carga de data se hace en el mismo orden en el que está declarado arriba\r\n     */\r\n    constructor(\r\n        private recursoService: RecursoService,\r\n        private emisionRemitosService: EmisionRemitosService,\r\n        public utilsService: UtilsService,\r\n        private popupListaService: PopupListaService,\r\n        private comprobanteService: ComprobanteService,\r\n        private _state: GlobalState,\r\n        private router: Router,\r\n        private contratosService: ContratosService\r\n    ) {\r\n        ////////// Listas desplegables //////////\r\n\r\n        this.preCargaPadron = \"Cargando clientes, espere...\";\r\n        this.statusCargaPadron = false;\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.padron)({\r\n                grupo: gruposParametros.cliente,\r\n            })\r\n            .subscribe((todos: any) => {\r\n                // this.proveedores.todos = proveedores;\r\n                this.cliente = todos;\r\n                this.preCargaPadron = \"Cliente\";\r\n                this.statusCargaPadron = true;\r\n            });\r\n\r\n        this.sisSitIvas = this.recursoService.getRecursoList(\r\n            resourcesREST.sisSitIva\r\n        )();\r\n        this.tiposOperacion = this.recursoService.getRecursoList(\r\n            resourcesREST.sisTipoOperacion\r\n        )({\r\n            sisModulo: sisModulos.venta,\r\n        });\r\n        this.tiposOperacion = this.tiposOperacion.map((tiposOp) =>\r\n            tiposOp.filter(\r\n                (tipoOp) =>\r\n                    tipoOp.idSisTipoOperacion == 4 ||\r\n                    tipoOp.idSisTipoOperacion == 10\r\n            )\r\n        );\r\n        // this.depositos = this.recursoService.getRecursoList(resourcesREST.depositos)({\r\n        //     todos:\r\n        // });\r\n\r\n        this.sisCanjes = this.recursoService.getRecursoList(\r\n            resourcesREST.sisCanjes\r\n        )();\r\n\r\n        // this.listasPreciosUsuario = this.recursoService.getRecursoList(resourcesREST.listaPrecios)();\r\n\r\n        ////////// Tablas //////////\r\n        this.tablas.columnas.columnasProductos =\r\n            emisionRemitosService.getColumnsProductos();\r\n        this.tablas.columnas.columnasTrazabilidad =\r\n            emisionRemitosService.getColumnsTrazabilidad();\r\n        this.tablas.columnas.columnasCanje =\r\n            emisionRemitosService.getColumnsCanje();\r\n        this.tablas.columnas.columnasDetallesFp =\r\n            emisionRemitosService.getColumnsDetallesFp();\r\n        this.tablas.columnas.columnasFactura =\r\n            emisionRemitosService.getColumnsFactura();\r\n        this.tablas.columnas.columnasRecargo =\r\n            emisionRemitosService.getColumnsRecargo();\r\n\r\n        ////////// Otros //////////\r\n        this.emisionRemitosService\r\n            .getCotizacionDatos()\r\n            .subscribe(\r\n                (cotizDatos) => (this.cotizacionDatos.cotizacion = cotizDatos)\r\n            );\r\n\r\n        this.tiposComprobantesFactura = this.recursoService.getRecursoList(\r\n            resourcesREST.cteTipo\r\n        )({\r\n            sisComprobante: 3,\r\n        });\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////// Eventos Click /////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n    onClickRemove = (prodSelect: ProductoPendiente) => {\r\n        _.remove(\r\n            this.tablas.datos.productosPend,\r\n            (prod: ProductoPendiente) =>\r\n                prod.idFactDetalle === prodSelect.idFactDetalle\r\n        );\r\n\r\n        // Actualizo nuevamente la lista de trazables\r\n        this.actualizarTrazableLotes(prodSelect);\r\n\r\n        // Actualizo datos de producto (total neto)\r\n        this.actualizarDatosProductos();\r\n\r\n        // Actualizo la grilla de Factura\r\n        this.fetchFacturas();\r\n    };\r\n\r\n    onClickEdit = (tipoColumnas) => (itemSelect: any) => {\r\n        this.descuentoOriginal = itemSelect.descuento;\r\n        this.precioOriginal = itemSelect.precio;\r\n        this.statusPorcentajeCotas = \"\";\r\n        this.statusPreciosCotas = \"\";\r\n        this.tablas.columnas[tipoColumnas] = this.tablas.columnas[\r\n            tipoColumnas\r\n        ].map((tabla) => {\r\n            let newTabla = tabla;\r\n            if (newTabla.enEdicion !== undefined) {\r\n                tipoColumnas === \"columnasProductos\"\r\n                    ? (newTabla.enEdicion = itemSelect.idFactDetalle)\r\n                    : tipoColumnas === \"columnasTrazabilidad\"\r\n                    ? (newTabla.enEdicion = itemSelect.nroLote)\r\n                    : tipoColumnas === \"columnasFactura\"\r\n                    ? (newTabla.enEdicion = itemSelect.cuentaContable)\r\n                    : tipoColumnas === \"columnasDetallesFp\"\r\n                    ? (newTabla.enEdicion = itemSelect.idFormaPagoDet)\r\n                    : null;\r\n            }\r\n            return newTabla;\r\n        });\r\n\r\n        // Hago focus en el select de imputacion\r\n        setTimeout(() => {\r\n            const idItem = itemSelect.nroLote\r\n                ? itemSelect.nroLote\r\n                : itemSelect.idFormaPagoDet\r\n                ? itemSelect.idFormaPagoDet\r\n                : itemSelect.producto && itemSelect.idFactDetalle\r\n                ? itemSelect.idFactDetalle\r\n                : \"000\";\r\n\r\n            const inputFocusClass = \"editar-focus-\" + idItem;\r\n            const elementFocus: any =\r\n                document.getElementsByClassName(inputFocusClass);\r\n            elementFocus && elementFocus[0] ? elementFocus[0].focus() : null;\r\n        });\r\n\r\n        // Cuando edita alguna forma de pago, se sugiere el Total Cte en monto\r\n        if (tipoColumnas && tipoColumnas === \"columnasDetallesFp\") {\r\n            itemSelect.monto = this.utilsService.parseDecimalNumber(\r\n                this.cotizacionDatos.total + this.sumatoriaSubtotales\r\n            );\r\n        }\r\n    };\r\n\r\n    changeClave = () => {\r\n        console.log(\r\n            this.comprobante.numerador.ptoVenta.ptoVenta,\r\n            Number(this.comprobante.numerador.numerador),\r\n            this.cliente.padronCodigo\r\n        );\r\n        const clave = this.utilsService.generarClaveNC(\r\n            this.comprobante.numerador.ptoVenta.ptoVenta,\r\n            Number(this.comprobante.numerador.numerador),\r\n            this.cliente.padronCodigo\r\n        );\r\n        this.isAutorizada = clave == this.claveAutorizacion;\r\n    };\r\n    //dario\r\n    onClickConfirmEdit = (tipoColumnas) => (itemSelect: any) => {\r\n\r\n         // Me fijo si es valida la data ignresada\r\n         const estado = this.emisionRemitosService.validarAntesDeConfirmar(\r\n            tipoColumnas\r\n        )(\r\n            itemSelect,\r\n            this.comprobante.moneda.idMoneda,\r\n            this.cotizacionDatos.cotizacion.cotizacion,\r\n            this.esPesificado,\r\n            this.esCanje\r\n        );\r\n\r\n        // Hago la sumatoria de los subtotales de la factura\r\n        if (tipoColumnas === \"columnasFactura\") {\r\n            // Actualizo el Total Comprobante sumando todos los precios nuevamente (no le sumo directamente el precio editado porque no es un precio nuevo, sino que ya está y debería sumarle la diferencia editada nomás)\r\n            this.actualizarSumatoriaSubto();\r\n        }\r\n\r\n        if (estado === \"ok\") {\r\n            // Actualizo datos del producto (si NO son las facturas lo que se edita, o las forma de pago)\r\n            if (\r\n                tipoColumnas !== \"columnasFactura\" &&\r\n                tipoColumnas !== \"columnasDetallesFp\"\r\n            )\r\n                this.actualizarDatosProductos(itemSelect);\r\n\r\n            // Todos los atributos 'enEdicion' distintos de undefined y también distintos de null o false, los seteo en false\r\n            this.tablas.columnas[tipoColumnas] = this.tablas.columnas[\r\n                tipoColumnas\r\n            ].map((tabla) => {\r\n                let newTabla = tabla;\r\n                if (\r\n                    newTabla.enEdicion !== undefined &&\r\n                    newTabla.enEdicion\r\n                ) {\r\n                    // Seteo en false asi sale de edicion\r\n                    newTabla.enEdicion = false;\r\n                }\r\n                return newTabla;\r\n            });\r\n        } else {\r\n            // Si NO es valida, entonces muestro mensajito\r\n            this.utilsService.showModal(\"Error\")(estado)()();\r\n        }\r\n\r\n\r\n        if (tipoColumnas == \"columnasProductos\") {\r\n\r\n        // cotas de precios ///\r\n        let permisoCotaPrecio: boolean;\r\n        let permisoModificaPrecio: boolean;\r\n        this.statusPorcentajeCotas = \"\";\r\n        this.statusPreciosCotas = \"\";\r\n        // cota de %\r\n        let permisoCotaPorcentaje: boolean;\r\n        let permisoModificaPorcentaje: boolean;\r\n        if (\r\n            (itemSelect.cotaInferior == 0 && itemSelect.cotaSuperior == 0) ||\r\n            (itemSelect.cotaSuperior == undefined &&\r\n                itemSelect.cotaSuperior == undefined)\r\n        ) {\r\n            // no tiene cota debe trabajar con el precio que esta fijado\r\n            permisoModificaPrecio = false;\r\n        } else {\r\n            permisoModificaPrecio = true;\r\n            // si no es 0 tongo que validar que el precio este entre las cotas\r\n            if (\r\n                itemSelect.precio >= itemSelect.cotaInferior &&\r\n                itemSelect.precio <= itemSelect.cotaSuperior\r\n            ) {\r\n                permisoCotaPrecio = true;\r\n            } else {\r\n                permisoCotaPrecio = false;\r\n            }\r\n        }\r\n\r\n        // aca tengo dudas si son los dos true o puede ser un false y un true\r\n        if (permisoCotaPrecio == true && permisoCotaPorcentaje == true) {\r\n            if (true) {\r\n                if (itemSelect.pendienteOg) {\r\n                    if (\r\n                        Number(itemSelect.pendiente) >\r\n                        Number(itemSelect.pendienteOg)\r\n                    ) {\r\n                        alert(\r\n                            \"Atención !!! No se puede modificar la cantidad del comprobante: El valor ingresado no puede ser mayor al valor Original\"\r\n                        );\r\n                        itemSelect.pendiente = itemSelect.pendienteOg;\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n                if (\r\n                    (itemSelect.cotaInfPorc == 0 &&\r\n                        itemSelect.cotaSupPorc == 0) ||\r\n                    (itemSelect.cotaInfPorc == undefined &&\r\n                        itemSelect.cotaSupPorc == undefined)\r\n                ) {\r\n                    permisoModificaPorcentaje = false;\r\n                } else {\r\n                    permisoModificaPorcentaje = true;\r\n                    if (\r\n                        itemSelect.descuento >= itemSelect.cotaInfPorc &&\r\n                        itemSelect.descuento <= itemSelect.cotaSupPorc\r\n                    ) {\r\n                        permisoCotaPorcentaje = true;\r\n                    } else {\r\n                        permisoCotaPorcentaje = false;\r\n                    }\r\n                }\r\n\r\n                if (permisoModificaPrecio == false) {\r\n                    // alert(\"No se puede modficfar el precio, no hay cotas de precios establecidas, debes trabajar con el precio sugerido\")\r\n                    if (this.precioOriginal != itemSelect.precio) {\r\n                        this.statusPreciosCotas =\r\n                            \"ERROR: No se puede modificar el precio orginal, no hay cotas de precios establecidas para el artículo seleccionado, debe trabajar con el precio sugerido \";\r\n                        itemSelect.precio = this.precioOriginal;\r\n                    } else {\r\n                        this.statusPreciosCotas = \"\";\r\n                    }\r\n                } else {\r\n                    if (permisoCotaPrecio == false) {\r\n                        this.statusPreciosCotas =\r\n                            \"Error :: El Precio del articulo  no esta dentro de las cotas permitidas ( >= \" +\r\n                            itemSelect.cotaInferior +\r\n                            \" y <= \" +\r\n                            itemSelect.cotaSuperior +\r\n                            \").\";\r\n                        itemSelect.precio = this.precioOriginal;\r\n                    } else {\r\n                        this.statusPreciosCotas = \"\";\r\n                    }\r\n                }\r\n\r\n                if (permisoModificaPorcentaje == false) {\r\n                    //alert(\"No se puede modficfar el porcentaje, no hay cotas debes trabajar con el porcenjaje establecido\")\r\n                    if (this.descuentoOriginal != itemSelect.descuento) {\r\n                        this.statusPorcentajeCotas =\r\n                            \"ERROR: No se puede modificar el porcentaje orginal, no hay cotas de porcentajes establecidas para el artículo , debe trabajar con el porcentaje sugerido \";\r\n                        itemSelect.descuento = this.descuentoOriginal;\r\n                    }\r\n                } else {\r\n                    if (permisoCotaPorcentaje == false) {\r\n                        this.statusPorcentajeCotas =\r\n                            \"Error :: El Procentaje de descuento  del producto  no esta dentro de las cotas permitidas ( >= \" +\r\n                            itemSelect.cotaInfPorc +\r\n                            \" y <= \" +\r\n                            itemSelect.cotaSupPorc +\r\n                            \").\";\r\n                        itemSelect.descuento = this.descuentoOriginal;\r\n                    } else {\r\n                        this.statusPorcentajeCotas = \"\";\r\n                    }\r\n                }\r\n\r\n        }\r\n        }\r\n        itemSelect = null;\r\n    };\r\n\r\n    buscarCerealesCanje = () => {\r\n        this.emisionRemitosService.getCerealesCanje().subscribe((data) => {\r\n            this.cereales = data.cereales;\r\n        });\r\n    };\r\n\r\n    buscaEstadosSisa = (idPadron) => {\r\n        this.emisionRemitosService\r\n            .getEstadosSisa(idPadron)\r\n            .subscribe((data) => {\r\n                this.estadosSisa = data.estadosSisa;\r\n                this.estadosSisa.forEach((estado) => {\r\n                    if (estado.isCurrent) {\r\n                        this.estadoSisa = estado;\r\n                    }\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Agrega el producto seleccionado a la lista de productosPendientes\r\n     */\r\n    onClickProductoLista = (prodSelec: ProductoReducido) => {\r\n        if (prodSelec) {\r\n            /*const dia = 24 * 60 * 60 * 1000;\r\n             */ //const diferenciaFechas = Math.round((new Date(this.comprobante.fechaVto.year, this.comprobante.fechaVto.month, this.comprobante.fechaVto.day).getTime() - new Date().getTime()) / dia);\r\n            this.emisionRemitosService\r\n                .buscarProducto(prodSelec.idProductos)(\r\n                    this.listaPrecioSelect.idListaPrecio\r\n                )(this.comprobante.moneda.idMoneda)(\r\n                    this.tipoOperacion.idSisTipoOperacion\r\n                )(this.comprobante.tipo.idCteTipo)(\r\n                    this.comprobante.fechaVto.getFechaFormateada()\r\n                )(this.esCanje)(this.cereal)(this.esPesificado)\r\n                .subscribe((prodEnc) => {\r\n                    const auxProdSelect = Object.assign({}, prodEnc);\r\n                    // Seteo el nro del comprobante actual\r\n                    auxProdSelect.numero =\r\n                        this.utilsService.numeroObjectToString(\r\n                            this.comprobante.numerador\r\n                        );\r\n                    const existeProd = this.tablas.datos.productosPend.find(\r\n                        (prod) =>\r\n                            prod.numero === auxProdSelect.numero &&\r\n                            prod.comprobante === auxProdSelect.comprobante &&\r\n                            prod.producto.codProducto ==\r\n                                auxProdSelect.producto.codProducto\r\n                    );\r\n                    if (!existeProd) {\r\n                        // this.tablas.datos.productosPend.push(prodEnc);\r\n                        this.tablas.datos.productosPend.push(auxProdSelect);\r\n                        this.actualizarDatosProductos();\r\n                    } else {\r\n                        this.utilsService.showModal(\"Error\")(\r\n                            \"Ese producto ya fue ingresado de forma directa en este comprobante\"\r\n                        )()();\r\n                    }\r\n\r\n                    // Despues de agregar el producto prosedo a ponerlo en edición\r\n                    this.onClickEdit(\"columnasProductos\")(auxProdSelect);\r\n\r\n                    // Actualizo grilla trazable lotes\r\n                    this.actualizarTrazableLotes();\r\n                });\r\n        }\r\n    };\r\n\r\n    limpiarFormulario = (noBorrar?) => {\r\n        // Blanqueo los campos\r\n        const auxFecha = this.comprobante.fechaComprobante;\r\n        this.comprobante = new Comprobante();\r\n        this.comprobante.fechaComprobante = auxFecha;\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n        this.comprobantePesificado = {\r\n            puntoVenta: null,\r\n            numero: null,\r\n        };\r\n        this.comprobantePesificadoInterno = null;\r\n        this.cliente = new Padron();\r\n        this.tablas.datos.productosPend = [];\r\n        this.tablas.datos.modelosFactura = [];\r\n        // this.cotizacionDatos = { cotizacion: new Cotizacion(), total: 0 };\r\n        this.deposito = null;\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.tipoOperacion = null;\r\n        this.disableRest = false;\r\n        this.esCanje = false;\r\n        this.isAutorizada = false;\r\n        this.claveAutorizacion = null;\r\n        this.idFactCabRelacionado = null;\r\n        this.percep2459 = false;\r\n        this.esPesificado = false;\r\n        this.cliente.condIva = null;\r\n        this.marcaPesificado = false;\r\n        this.pesificadoPersisteSn = false;\r\n        if (!noBorrar || !noBorrar.includes(\"cotizacion\")) {\r\n            this.cotizacionDatos = { cotizacion: new Cotizacion(), total: 0 };\r\n        }\r\n        this.sumatoriaSubtotales = 0;\r\n    };\r\n\r\n    onClickCancelar = () => {\r\n        this.utilsService.showModal(\"Aviso\")(\"¿Cancelar emision de remito?\")(\r\n            () => {\r\n                this.limpiarFormulario([\"cotizacion\"]);\r\n            }\r\n        )({\r\n            tipoModal: \"confirmation\",\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Valida y graba el comprobante\r\n     */\r\n    onClickConfirmar = () =>\r\n\r\n        this.emisionRemitosService.existsProductsWithoutCantidad(\r\n            this.tablas.datos.productosPend\r\n        )\r\n            ? this.utilsService.showModal(\"Problema\")(\r\n                  \"Los productos deben tener una cantidad asignada\"\r\n              )()()\r\n            : this.utilsService.showModal(\"Confirmar\")(\r\n                  \"¿Confirmar emision de comprobante?\"\r\n              )(() => {\r\n\r\n                //this.comprobante.tipo.idCteTipo == 77\r\n                  if (this.comprobante.tipo.requiereClaveAutorizacion == true){\r\n                    if (this.claveAutorizacion === \"\" || this.claveAutorizacion === null){\r\n                        this.utilsService.showModal(\"Error\")(\r\n                            `Se requiere que ingrese su clave para continuar.`\r\n                        )()();\r\n                    }\r\n                  }\r\n\r\n                  alert(this.ptoVentaAfipRelacionado+\" - \"+this.numeroComprobanteAfipRelacionado)\r\n                  this.actualizarSumatoriaSubto();\r\n                  // Si SI hay intervalo y la fecha SE SALE de el, entonces..\r\n                  if (this.fechaComprobanteInvalida()) {\r\n                      this.utilsService.showModal(\"Error de fecha\")(\r\n                          `Fecha inválida para este punto de venta (Intervalo permitido: ${moment(\r\n                              this.utilsService.dateLikePickerToDate(\r\n                                  this.comprobante.numerador.fechaApertura\r\n                              )\r\n                          ).format(\"DD-MM-YYYY\")} al ${moment(\r\n                              this.utilsService.dateLikePickerToDate(\r\n                                  this.comprobante.numerador.fechaCierre\r\n                              )\r\n                          ).format(\"DD-MM-YYYY\")})`\r\n                      )()();\r\n                  } else {\r\n                      // Activo poircentaje grabado spinbner\r\n                      this.grabandoPorcentaje = 30;\r\n\r\n                      this.emisionRemitosService\r\n                          .confirmarYEmitirRemito(this.comprobante)(\r\n                              this.comprobanteRelacionado\r\n                          )(this.cliente)(this.tablas.datos.productosPend)(\r\n                              this.cotizacionDatos\r\n                          )(this.sisCanje)(this.formasPagoSeleccionadas)(\r\n                              this.factura\r\n                          )(this.tablas.datos.modelosFactura)(\r\n                              this.tablas.datos.detallesFormaPago\r\n                          )(this.deposito)(this.tablas.datos.lotesTraza)(\r\n                              this.tipoOperacion\r\n                          )(this.dataVendedor)(this.tablas.datos.subtotalesProductos)(this.listaPrecioSelect)(this.contrato)(\r\n                              this.relacionCanje\r\n                          )(this.cereal)(this.diferidoVto)(this.pesificado)(this.marcaPesificado\r\n                          )(this.pesificadoPersisteSn)(this.comprobantePesificadoInterno)\r\n                          (this.claveAutorizacion)\r\n                          (this.idFactCabRelacionado)\r\n                          .catch((err) => {\r\n                              this.grabandoPorcentaje = 0;\r\n                              this.grabandoPorcentajeAfip = 0;\r\n                              this.utilsService.showErrorWithBody(err);\r\n                              return Observable.throw(null);\r\n                          })\r\n                          .subscribe((respuesta: any) => {\r\n                            debugger\r\n                              this.grabandoPorcentaje = 60;\r\n\r\n                              if (this.comprobante.tipo.cursoLegal) {\r\n\r\n                                        /*\r\n\r\n                                        Autorizo en AFIP\r\n\r\n                                        */\r\n                                        this.grabandoPorcentajeAfip =35;\r\n                                        this.emisionRemitosService\r\n                                        .autorizarAfip(\r\n                                        respuesta.datos.idFactCab,\r\n                                        this.factCabAfipRelacionado\r\n                                        )\r\n                                        .catch((err) => {\r\n                                            this.grabandoPorcentaje = 0;\r\n                                            this.grabandoPorcentajeAfip = 0\r\n                                            this.blanquearCampos();\r\n\r\n                                        this.utilsService.showErrorWithBody(\r\n                                            err,\r\n                                            true,\r\n                                            () => console.log(\" Recargo pantalla (TODO: Podría limpiar campo por campo, pero es mas simple y menos costozo recargar la página)\")\r\n                                            );\r\n\r\n                                            return Observable.throw(null);\r\n                                        })\r\n                                        .subscribe((respAfip) => {\r\n                                            this.grabandoPorcentajeAfip =0;\r\n                                            this.grabandoPorcentaje = 0;\r\n                                            if (respAfip && respAfip.datos) {\r\n                                            const compCreado = new ComprobanteEncabezado();\r\n                                            compCreado.idFactCab = respuesta.datos.idFactCab;\r\n\r\n                                            alert(\"Comprobante \"+respAfip.datos.numero+\" autorizado con éxito, CAI otorgado: \"+respAfip.datos.cai)  ;\r\n\r\n\r\n                                            compCreado.numero = Number(\r\n                                                `${\r\n                                                this.comprobante.numerador.ptoVenta.ptoVenta\r\n                                                }${this.comprobante.numerador.ptoVenta.ptoVenta\r\n                                                .toString()\r\n                                                .padStart(8, \"0\")}`\r\n                                            );\r\n\r\n                                            this.blanquearCampos();\r\n\r\n                                            /*this.utilsService.showImprimirModalAceptar(\r\n                                                respuesta.control.codigo\r\n                                            )(\r\n                                                `${respuesta.control.descripcion}.\r\n                                                                        CAI: ${respAfip.datos.cai}`\r\n                                            )(() => {\r\n                                                this.recursoService.downloadComp(\r\n                                                compCreado,\r\n                                                null,\r\n                                                this.nroCopias,\r\n                                                this.esCanje\r\n                                                );\r\n                                                this.blanquearCampos();\r\n\r\n                                            })(compCreado)(() => {\r\n                                                this.blanquearCampos();\r\n                                            });*/\r\n\r\n                                            if (!this.comprobante.tipo.comprobante.usaContrato) {\r\n\r\n                                            }\r\n                                            }\r\n                                        });\r\n\r\n\r\n                                        /*\r\n\r\n                                        FIN AFIP\r\n\r\n                                        */\r\n\r\n\r\n\r\n                                  // no autoriza a afip, cambiar por el codigo de arriba cuando funcione el web service de afip\r\n\r\n\r\n                                  // Modal para imprimir\r\n                                  const compCreado =\r\n                                      new ComprobanteEncabezado();\r\n                                  compCreado.idFactCab =\r\n                                      respuesta.datos.idFactCab;\r\n                                  compCreado.numero = Number(\r\n                                      `${\r\n                                          this.comprobante.numerador.ptoVenta\r\n                                              .ptoVenta\r\n                                      }${this.comprobante.numerador.ptoVenta.ptoVenta\r\n                                          .toString()\r\n                                          .padStart(8, \"0\")}`\r\n                                  );\r\n\r\n                                  this.utilsService.showImprimirModalAceptar(\r\n                                      respuesta.control.codigo\r\n                                  )(`${respuesta.control.descripcion}`)(() => {\r\n                                      this.recursoService.downloadComp(\r\n                                          compCreado,\r\n                                          null,\r\n                                          this.nroCopias\r\n                                      );\r\n                                      this.blanquearCampos();\r\n                                  })(compCreado)(() => {\r\n                                      this.blanquearCampos();\r\n                                  });\r\n\r\n                                  if (\r\n                                      !this.comprobante.tipo.comprobante\r\n                                          .usaContrato\r\n                                  ) {\r\n                                      // // Blanqueo los campos\r\n                                  }\r\n                              } else {\r\n                                  this.grabandoPorcentaje = 0;\r\n\r\n                                  const compCreado =\r\n                                      new ComprobanteEncabezado();\r\n                                  compCreado.idFactCab =\r\n                                      respuesta.datos.idFactCab;\r\n                                  compCreado.numero = Number(\r\n                                      `${\r\n                                          this.comprobante.numerador.ptoVenta\r\n                                              .ptoVenta\r\n                                      }${this.comprobante.numerador.ptoVenta.ptoVenta\r\n                                          .toString()\r\n                                          .padStart(8, \"0\")}`\r\n                                  );\r\n\r\n                                  this.utilsService.showImprimirModalAceptar(\r\n                                      respuesta.control.codigo\r\n                                  )(`${respuesta.control.descripcion}`)(() => {\r\n                                      this.recursoService.downloadComp(\r\n                                          compCreado,\r\n                                          null,\r\n                                          this.nroCopias\r\n                                      );\r\n                                      this.blanquearCampos();\r\n                                  })(compCreado)(() => {\r\n                                      this.blanquearCampos();\r\n                                  });\r\n\r\n                                  if (\r\n                                      !this.comprobante.tipo.comprobante\r\n                                          .usaContrato\r\n                                  ) {\r\n                                  }\r\n                              }\r\n\r\n                              // Genero un contrato nuevo\r\n                              if (\r\n                                  this.comprobante.tipo.comprobante.usaContrato\r\n                              ) {\r\n                                  this.blanquearCampos();\r\n                                  /*this.contratosService.generarContratoByComprobante(this.cliente, this.getCantidadCanjeReferencia(), this.sisCanje)\r\n                                    .catch(err => {\r\n                                        // Si falla queda por generar el contrato Pendiente. Le aviso al usuario\r\n                                        this.utilsService.showErrorWithBody(err);\r\n\r\n                                        return Observable.of({\r\n                                            arraydatos: []\r\n                                        });\r\n                                    })\r\n                                    .subscribe(\r\n                                        resp => {\r\n                                            // Blanqueo los campos\r\n                                            this.blanquearCampos();\r\n                                        }\r\n                                    )*/\r\n                              }\r\n                          });\r\n                  }\r\n              })({ tipoModal: \"confirmation\" });\r\n\r\n    /**\r\n     * Blanquea todos los campos (cuando confirma se usa)\r\n     */\r\n    blanquearCampos = () => {\r\n\r\n        /*this.grabandoPorcentaje =0;*/\r\n        this.claveAutorizacion = \"\";\r\n        const auxFecha = this.comprobante.fechaComprobante;\r\n        this.comprobante = new Comprobante();\r\n        this.comprobante.fechaComprobante = auxFecha;\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n        this.comprobantePesificado = {\r\n            puntoVenta: null,\r\n            numero: null,\r\n        };\r\n        this.comprobantePesificadoInterno = null;\r\n        this.cliente = new Padron();\r\n\r\n        this.cliente.condIva = new CondIva();\r\n        setTimeout(() => {\r\n            this.cliente.condIva = new CondIva();\r\n        }, 1000); // TODO: Fix horrible, sacar\r\n\r\n        this.tablas.datos.productosPend = [];\r\n        this.tablas.datos.modelosFactura = [];\r\n        this.deposito = new Deposito();\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.tablas.datos.lotesTraza = [];\r\n        this.condicionesConfirmadas = false;\r\n        this.diferidoVto = false;\r\n        this.cereal = null;\r\n        this.esCanje = false;\r\n        this.isAutorizada = false;\r\n        this.claveAutorizacion = null;\r\n        this.esPesificado = false;\r\n        this.percep2459 = false;\r\n        this.nroCopias = 3;\r\n        this.disableRest = false;\r\n        // Limpio formas pago\r\n        this.dataTablaFormasPago = null;\r\n        this.formasPagoSeleccionadas = [];\r\n        this.codigoAfipRelacionado = null;\r\n        this.numeroAfipRelacionado = null;\r\n        this.factCabAfipRelacionado = null;\r\n        this.relacionadoConfirmado = false;\r\n        this.ptoVentaAfipRelacionado = null;\r\n        this.numeroComprobanteAfipRelacionado = null;\r\n        // Limpio lista pre\r\n        this.listaPrecioSelect = null;\r\n        this.marcaPesificado = false;\r\n        this.pesificadoPersisteSn = false;\r\n        // Reinicio radio buttons\r\n        this.listasPreciosUsuario.subscribe((resp) =>\r\n            resp.forEach((lp, ind) => {\r\n                const e = document.getElementById(\r\n                    \"lp-radio-\" + ind\r\n                ) as HTMLInputElement;\r\n                e.checked = false;\r\n            })\r\n        );\r\n\r\n        // Limpio vendedor\r\n        this.dataVendedor.vendedor = new Vendedor();\r\n        this.dataVendedor.incluir = false;\r\n\r\n        // Limpio cotizacion datos\r\n        this.cotizacionDatos.total = 0;\r\n        this.sumatoriaSubtotales = 0;\r\n\r\n        // Limpio subtotales\r\n        this.tablas.datos.subtotalesProductos = [];\r\n\r\n        // Limpio datos canje\r\n        this.sisCanje = new SisCanje();\r\n\r\n        // Focus en input proveedor (TODO SET TIME OUT)\r\n        document.getElementById(\"clienteSeleccionado\")\r\n            ? document.getElementById(\"clienteSeleccionado\").focus()\r\n            : null;\r\n    };\r\n\r\n    /**\r\n     * Busca los productos pendientes de acuerdo al comprobante relacionado\r\n     */\r\n    onClickBuscarPendientes = () =>\r\n        this.emisionRemitosService\r\n            .buscarPendientes(this.cliente)(this.comprobanteRelacionado)(\r\n                this.comprobante\r\n            )(this.tipoOperacion)(this.listaPrecioSelect)(\r\n                this.comprobante.fechaVto.getFechaFormateada()\r\n            )(this.cereal)(this.esCanje)(this.esPesificado)\r\n            .subscribe((prodsPend) => {\r\n                // Agrego los productos\r\n                if (this.preservarPrevios) {\r\n                    this.tablas.datos.productosPend = [\r\n                        ...this.tablas.datos.productosPend,\r\n                        ...prodsPend,\r\n                    ];\r\n                    if (\r\n                        this.tipoOperacion.idSisTipoOperacion == 5 &&\r\n                        this.comprobante.tipo.idCteTipo == 75\r\n                    ) {\r\n                        this.tablas.datos.recargoCanjes = [...prodsPend];\r\n                    }\r\n                } else {\r\n                    this.tablas.datos.productosPend = prodsPend;\r\n                    if (\r\n                        this.tipoOperacion.idSisTipoOperacion == 5 &&\r\n                        this.comprobante.tipo.idCteTipo == 75\r\n                    ) {\r\n                        this.tablas.datos.recargoCanjes = [...prodsPend];\r\n                    }\r\n                }\r\n\r\n                // Array de observables\r\n                const actualizacionObser = prodsPend.map((pp) =>\r\n                    this.actualizarSubtotales(pp, { fromBuscaPendiente: true })\r\n                );\r\n\r\n                // DESPUES de actualizar todos los subtotales, ahí actualizo datos productos\r\n                Promise.all(actualizacionObser).then((fa) => {\r\n                    // Actualizo datos de los productos\r\n                    this.actualizarDatosProductos();\r\n                });\r\n            });\r\n\r\n    /**\r\n     * Event on click en la lista del popup de cliente\r\n     */\r\n    onClickPopupCliente = (prove: Padron) => {\r\n        // Limpio primero el formulario\r\n        this.limpiarFormulario([\"cotizacion\"]);\r\n        // Despue sseteo el cliente seleccionado\r\n        this.cliente = new Padron({ ...prove });\r\n        // debugger;\r\n        // Deshabilito la posibilidad de hacer un cliente custom\r\n        this.disabledClienteCustom = true;\r\n\r\n        // Focus siguiente elemento\r\n        document.getElementById(\"tipoOperacionSelect\")\r\n            ? document.getElementById(\"tipoOperacionSelect\").focus()\r\n            : null;\r\n\r\n        this.contratos = this.recursoService.getRecursoList(\r\n            resourcesREST.contratos\r\n        )({ idPadron: prove.padronCodigo });\r\n    };\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////// Eventos Blur ////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * El blur es cuando se hace un leave del input (caundo se apreta click afuera por ejemplo).\r\n     * Acá lo que hago es poner un array vacio como próx valor de los filtrados, cosa que la lista desaparezca porque no hay nada\r\n     * También retorno el cliente seleccionado en el input\r\n     * También checkeo si ya seleccionó cte y pto venta y fecha, y si es así entonces hago la consulta de formas de pago\r\n     */\r\n\r\n    onBlurInputCliente = (e) => {\r\n        // Al hacer blur (apreta TAB) está intentando agarrar por padronCodigo, asi que lo busco\r\n        const clienteExistente = this.clientes.filtrados.value.find(\r\n            (cli) => cli.padronCodigo === Number(this.cliente.padronCodigo)\r\n        );\r\n\r\n        // Vacio filtrados\r\n        this.clientes.filtrados.next([]);\r\n\r\n        // Actualizo cliente seleccionado\r\n        try {\r\n            if (\r\n                clienteExistente &&\r\n                clienteExistente.padronCodigo &&\r\n                clienteExistente.padronApelli\r\n            ) {\r\n                // Antes de todo, checkeo que tenga cuit. Si NO tiene cuit, no puede continuar\r\n                if (!clienteExistente.cuit || clienteExistente.cuit <= 0) {\r\n                    // Muestra mensaje cuit no tiene\r\n                    this.utilsService.showModal(\"Aviso\")(\r\n                        \"Debe seleccionar un cliente que tenga un cuit\"\r\n                    )()();\r\n                    this.cliente = new Padron();\r\n                } else {\r\n                    // Actualizo listas precios\r\n                    /*  this.listasPreciosUsuario = this.recursoService.getRecursoList(resourcesREST.listaPrecios)({\r\n                        codPadron: clienteExistente.padronCodigo\r\n                    });\r\n                    */\r\n                    // Limpio primero el formulario\r\n                    this.limpiarFormulario([\"cotizacion\"]);\r\n                    // Despue sseteo el cliente seleccionado\r\n                    this.cliente = clienteExistente;\r\n\r\n                    // Lo busco en la base de facturacion\r\n                    this.emisionRemitosService\r\n                        .checkIfClientExistInFacturacion(clienteExistente)\r\n                        .then((vendedorAsociado) => {\r\n                            // Viene en un array pero siempre trae 1 (si lo encuetra, si no lo encuentra trae 0 o null)\r\n                            if (vendedorAsociado) {\r\n                                // Si lo encuentra todo ok, no le pido que lo cree. Solo me guardo el vendedor asociado\r\n                                this.dataVendedor = {\r\n                                    vendedor: vendedorAsociado,\r\n                                    incluir: true,\r\n                                };\r\n                            } else {\r\n                                // Si NO lo encuentra, le pido que lo cree\r\n                                /*this.utilsService.showModal('Aviso')('Cliente no existente. ¿Desea crearlo?')(()=>{\r\n                                this.router.navigate(\r\n                                    ['/pages/tablas/clientes/nuevo'],\r\n                                    {\r\n                                        queryParams: {\r\n                                            codPadronCliente: clienteExistente.padronCodigo\r\n                                        }\r\n                                    }\r\n                                );\r\n                            })({tipoModal:'confirmation'}, () => {\r\n                                this.dataVendedor = {\r\n                                    vendedor: new Vendedor(),\r\n                                    incluir: false\r\n                                };\r\n                            })*/\r\n                                this.emisionRemitosService.llenarPadron(\r\n                                    this.cliente\r\n                                );\r\n                            }\r\n\r\n                            // Deshabilito los input del customcliente\r\n                            this.disabledClienteCustom = true;\r\n\r\n                            // Hago foco en dropdown tipo\r\n                            document.getElementById(\"tipoOperacionSelect\")\r\n                                ? document\r\n                                      .getElementById(\"tipoOperacionSelect\")\r\n                                      .focus()\r\n                                : null;\r\n                        });\r\n                }\r\n            } else {\r\n                this.cliente.padronCodigo = null;\r\n            }\r\n        } catch (err) {\r\n            // Muestro error\r\n            if (err && err.nombre && err.descripcion) {\r\n                this.utilsService.showModal(err.nombre)(err.descripcion)()();\r\n            }\r\n            // Vacio cliente seleccionado\r\n            this.cliente = new Padron();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Evento que se dispara cuando se selecciona una fecha de emision\r\n     */\r\n    onModelChangeFechaComp(e, d) {\r\n        // Actualizo fecha (sobretodo si el formato es 'ddmm')\r\n        this.comprobante.fechaComprobante =\r\n            this.utilsService.stringToDateLikePicker(\r\n                this.comprobante.fechaComprobante\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Evento que se dispara cuando se selecciona una fecha de vencimiento\r\n     */\r\n    onModelChangeFechaVto(e, d) {\r\n        // Actualizo fecha (sobretodo si el formato es 'ddmm')\r\n        this.comprobante.fechaVto = this.utilsService.stringToDateLikePicker(\r\n            this.comprobante.fechaVto\r\n        );\r\n        if (!this.comprobante.fechaComprobante) {\r\n            this.comprobante.fechaVto = null;\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"Ingrese primero la fecha de emisión\"\r\n            )()();\r\n        } else if (\r\n            !(\r\n                this.comprobante.fechaVto.year >\r\n                    this.comprobante.fechaComprobante.year ||\r\n                (this.comprobante.fechaVto.year ==\r\n                    this.comprobante.fechaComprobante.year &&\r\n                    this.comprobante.fechaVto.month >\r\n                        this.comprobante.fechaComprobante.month) ||\r\n                (this.comprobante.fechaVto.year ==\r\n                    this.comprobante.fechaComprobante.year &&\r\n                    this.comprobante.fechaVto.month ==\r\n                        this.comprobante.fechaComprobante.month &&\r\n                    this.comprobante.fechaVto.day >=\r\n                        this.comprobante.fechaComprobante.day)\r\n            )\r\n        ) {\r\n            this.comprobante.fechaVto = null;\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"La fecha de vencimiento debe ser igual o posterior a la de emisión\"\r\n            )()();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setea la fecha de compra calculandola dado un string en formato 'ddmm', parseando a 'dd/mm/aaaa'\r\n     * También hago otras cosas\r\n     */\r\n    onBlurFechaComprobante = (e) => {\r\n        // Actualizo fecha (sobretodo si el formato es 'ddmm')\r\n        this.comprobante.fechaComprobante =\r\n            this.utilsService.stringToDateLikePicker(\r\n                this.comprobante.fechaComprobante\r\n            );\r\n        // Actualizo grilla trazable lotes\r\n        this.actualizarTrazableLotes();\r\n\r\n        // Hago foco en el primer checbkox de la sformas de pago (el timeout es necesario para que espere a que se haga la consulta)\r\n        // en gral esta consulta dura poquito (entre 10 y 40 milisegundos). Por eso con 150 milisegundos de espera es mas que suficiente\r\n        setTimeout(() => {\r\n            // Hago focus al siguiente elemento de lps\r\n            const primerCheckBoxFp: any = document.getElementById(\"lp-radio-0\");\r\n            if (primerCheckBoxFp) {\r\n                // primerCheckBoxFp.checked = true;\r\n                primerCheckBoxFp.focus();\r\n            }\r\n        }, 150);\r\n    };\r\n\r\n    onBlurFechaVencimiento = (e) => {\r\n        // Actualizo fecha (sobretodo si el formato es 'ddmm')\r\n        this.comprobante.fechaVto = this.utilsService.stringToDateLikePicker(\r\n            this.comprobante.fechaVto\r\n        );\r\n        if (!this.comprobante.fechaComprobante) {\r\n            this.comprobante.fechaVto = null;\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"Ingrese primero la fecha de emisión\"\r\n            )()();\r\n        } else if (\r\n            !(\r\n                this.comprobante.fechaVto.year >\r\n                    this.comprobante.fechaComprobante.year ||\r\n                (this.comprobante.fechaVto.year ==\r\n                    this.comprobante.fechaComprobante.year &&\r\n                    this.comprobante.fechaVto.month >\r\n                        this.comprobante.fechaComprobante.month) ||\r\n                (this.comprobante.fechaVto.year ==\r\n                    this.comprobante.fechaComprobante.year &&\r\n                    this.comprobante.fechaVto.month ==\r\n                        this.comprobante.fechaComprobante.month &&\r\n                    this.comprobante.fechaVto.day >=\r\n                        this.comprobante.fechaComprobante.day)\r\n            )\r\n        ) {\r\n            this.comprobante.fechaVto = null;\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"La fecha de vencimiento debe ser igual o posterior a la de emisión\"\r\n            )()();\r\n        } else {\r\n            // Actualizo grilla trazable lotes\r\n            this.actualizarTrazableLotes();\r\n\r\n            // Hago foco en el primer checbkox de la sformas de pago (el timeout es necesario para que espere a que se haga la consulta)\r\n            // en gral esta consulta dura poquito (entre 10 y 40 milisegundos). Por eso con 150 milisegundos de espera es mas que suficiente\r\n            setTimeout(() => {\r\n                // Hago focus al siguiente elemento de lps\r\n                const primerCheckBoxFp: any =\r\n                    document.getElementById(\"lp-radio-0\");\r\n                if (primerCheckBoxFp) {\r\n                    // primerCheckBoxFp.checked = true;\r\n                    primerCheckBoxFp.focus();\r\n                }\r\n            }, 150);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Evento blur de pto venta y numero en comprobante\r\n     * tipo: puntoVenta o numero\r\n     * keyTipoe: comprobante, comprobanteRelacionado\r\n     */\r\n    onBlurNumeroAutocomp = (e) => (tipo: string) => (keyTipo: string) =>\r\n        (this[keyTipo][tipo] = this.emisionRemitosService.autocompNroComp(tipo)(\r\n            this[keyTipo]\r\n        ));\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////// Otras Eventos ///////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Actualizo el deposito seleccionado que me viene de tablaIngreso\r\n     */\r\n    onSelectDeposito = (depSelect: Deposito) => {\r\n        this.deposito = depSelect;\r\n    };\r\n\r\n    /**\r\n     * Evento de cuando se apreta felcha arriba o feclah abajo en input de busca cliente\r\n     */\r\n    keyPressInputTexto = (e: any) => (upOrDown) => {\r\n        e.preventDefault();\r\n        // Hace todo el laburo de la lista popup y retorna el nuevo indice seleccionado\r\n        this.clienteEnfocadoIndex =\r\n            this.popupListaService.keyPressInputForPopup(upOrDown)(\r\n                this.clientes.filtrados.value\r\n            )(this.clienteEnfocadoIndex);\r\n    };\r\n\r\n    /**\r\n     * Evento on enter en el input de buscar cliente\r\n     */\r\n    onEnterInputProv = (e: any) => {\r\n        e.preventDefault();\r\n        this.clientes.filtrados.subscribe((provsLista) => {\r\n            // Busco el producto\r\n            const provSelect =\r\n                provsLista && provsLista.length\r\n                    ? provsLista[this.clienteEnfocadoIndex]\r\n                    : null;\r\n            // Lo selecciono\r\n            provSelect ? this.onClickPopupCliente(provSelect) : null;\r\n            // Reseteo el index\r\n            this.clienteEnfocadoIndex = -1;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Evento change del input del proovedor\r\n     * _.throttle(onChangeInputCliente, 300)\r\n     */\r\n    onChangeInputCliente = (busqueda) => {\r\n        // Limpio los clientes\r\n        this.clientes.filtrados.next([]);\r\n        this.cliente = new Padron();\r\n\r\n        if (busqueda && busqueda.length >= 2) {\r\n            this.findClientes(busqueda);\r\n        }\r\n\r\n        // Reseteo el indice\r\n        this.clienteEnfocadoIndex = -1;\r\n    };\r\n\r\n    buscandoCliente = false;\r\n\r\n    findClientes = _.throttle((busqueda) => {\r\n        this.buscandoCliente = true;\r\n\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.padron)({\r\n                grupo: gruposParametros.cliente,\r\n                elementos: busqueda,\r\n            })\r\n            .subscribe((clientes) => {\r\n                this.clientes.filtrados.next(clientes);\r\n                this.buscandoCliente = false;\r\n            });\r\n    }, 400);\r\n\r\n    /**\r\n     * Agrega o elimina una forma pago de las seleccionadas. Tambien muestra detalle de la lista correspondiente\r\n     */\r\n    handleFormaPagoSelec = (fp: FormaPago) => (tipoOperacion: string) => {\r\n        // Agrego o elimino\r\n        if (tipoOperacion === \"add\") {\r\n            if (\r\n                fp.descripcion == \"Canje\" ||\r\n                fp.descripcion == \"Dólar Abierto\"\r\n            ) {\r\n                this.formasPagoSeleccionadas = [];\r\n                this.formasPagoSeleccionadas.push(fp);\r\n                this.disableRest = true;\r\n                if (\r\n                    this.comprobante &&\r\n                    this.comprobante.tipo &&\r\n                    this.comprobante.tipo.idCteTipo &&\r\n                    this.comprobante.tipo.idCteTipo == 75\r\n                ) {\r\n                    this.esCanje = true;\r\n                    this.diferidoVto = true;\r\n                    if (fp.idFormaPago == 12) {\r\n                        this.percep2459 = true;\r\n                    }\r\n                }\r\n            } else if (fp.descripcion == \"Pesificado\") {\r\n                this.formasPagoSeleccionadas = [];\r\n                this.formasPagoSeleccionadas.push(fp);\r\n                this.disableRest = true;\r\n                if (\r\n                    this.comprobante &&\r\n                    this.comprobante.tipo &&\r\n                    this.comprobante.tipo.idCteTipo &&\r\n                    this.comprobante.tipo.idCteTipo == 75\r\n                ) {\r\n                    this.esPesificado = true;\r\n                }\r\n            } else {\r\n                // Primero los borro (si quedaorn de anbtes)\r\n                this.formasPagoSeleccionadas =\r\n                    this.formasPagoSeleccionadas.filter(\r\n                        (fpSelec) => fpSelec.idFormaPago !== fp.idFormaPago\r\n                    );\r\n                // Ahora los agrego\r\n                this.formasPagoSeleccionadas.push(fp);\r\n            }\r\n        } else {\r\n            this.formasPagoSeleccionadas = this.formasPagoSeleccionadas.filter(\r\n                (fpSelec) => fpSelec.idFormaPago !== fp.idFormaPago\r\n            );\r\n            this.disableRest = false;\r\n            this.esCanje = false;\r\n            this.isAutorizada = false;\r\n            this.claveAutorizacion = null;\r\n            this.diferidoVto = false;\r\n            this.esPesificado = false;\r\n            this.percep2459 = false;\r\n        }\r\n\r\n        // Ahora mappeo los detalles de las formas de pago seleccionadas para mostrarlos en la grilla de el medio\r\n        this.tablas.datos.detallesFormaPago = this.formasPagoSeleccionadas\r\n            .map((fp) =>\r\n                Object.assign([], fp.detalles).map((det) => {\r\n                    const auxDet: DetalleFormaPago = Object.assign({}, det);\r\n                    auxDet.formaPagoDescrip = fp.descripcion;\r\n                    // Seteo fechaPago\r\n                    auxDet.fechaPago = new DateLikePicker(\r\n                        moment(\r\n                            this.utilsService.dateLikePickerToDate(\r\n                                this.comprobante.fechaVto\r\n                            )\r\n                        )\r\n                            .add(auxDet.cantDias, \"days\")\r\n                            .toDate()\r\n                    );\r\n                    //\r\n                    return auxDet;\r\n                })\r\n            )\r\n            .reduce((a, b) => [...a].concat([...b]), []); // Aca aplasto el array bidimensional a uno de una dimensión\r\n    };\r\n\r\n    /**\r\n     * Actualizo subtotales\r\n     */\r\n    actualizarSubtotales = (\r\n        prod: ProductoPendiente,\r\n        options = { fromBuscaPendiente: false }\r\n    ) => {\r\n        // Si busca pendientes..\r\n        // if (prod.importe === 0 && this.tablas.datos.subtotalesProductos.length <= 0) {\r\n\r\n        if (options.fromBuscaPendiente && prod.importe === 0) {\r\n            this.tablas.datos.subtotalesProductos.push({\r\n                idProducto: prod.producto.idProductos,\r\n                subtotal: 0,\r\n                subtotalIva: 0,\r\n                numeroComp: prod.comprobante,\r\n                precioDesc: 0,\r\n                idFactDetalle: prod.idFactDetalle,\r\n            });\r\n        } else {\r\n            // Obtengo el nuevo subtotal\r\n            return this.emisionRemitosService\r\n                .getCalculoSubtotales(prod)\r\n                .toPromise()\r\n                .then((nuevoSubtotal) => {\r\n                    // Checkeo si hay uno viejo\r\n                    const viejoSubtotal =\r\n                        this.tablas.datos.subtotalesProductos.find(\r\n                            (s) => prod.idFactDetalle === s.idFactDetalle\r\n                        );\r\n\r\n                    // Si hay uno viejo, lo edito. Si NO hay uno viejo, pusheo directamente el nuevo\r\n                    if (viejoSubtotal) {\r\n                        viejoSubtotal.subtotal = nuevoSubtotal.subtotal;\r\n                        viejoSubtotal.subtotalIva = nuevoSubtotal.subtotalIva;\r\n                        viejoSubtotal.precioDesc = nuevoSubtotal.precioDesc;\r\n                    } else {\r\n                        this.tablas.datos.subtotalesProductos.push(\r\n                            nuevoSubtotal\r\n                        );\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Actualiza el total en cotizacion y otros\r\n     */\r\n    actualizarDatosProductos = (itemSelect?) => {\r\n        if (this.estadoRelacionadoObligatorio == true) {\r\n            if (itemSelect > 0) {\r\n                if (itemSelect.pendiente > itemSelect.original) {\r\n                    alert(\r\n                        \"Atención !!! No se puede modificar la cantidad del comprobante: El valor ingresado no puede ser mayor al valor Original\"\r\n                    );\r\n                    itemSelect.pendiente = itemSelect.original;\r\n                }\r\n            }\r\n        }\r\n        // Si viene un item es porque viene de onClickConfirm\r\n        if (itemSelect) {\r\n            // Actualizo subtotal, y dsps las facturas\r\n\r\n            this.actualizarSubtotales(itemSelect).then((resp) => {\r\n                this.fetchFacturas();\r\n                this.actualizarTotalNeto();\r\n            });\r\n        } else {\r\n            this.fetchFacturas();\r\n            this.actualizarTotalNeto();\r\n        }\r\n    };\r\n\r\n    actualizarTotalNeto = () => {\r\n        // Es la suma de la columna subtotal (que ya tiene aplicado el descuento)\r\n        this.cotizacionDatos.total = this.comprobante.tipo.comprobante\r\n            .incluyeNeto\r\n            ? _.sumBy(this.tablas.datos.productosPend, (prod) => {\r\n                  // Busco el subtotal\r\n                  const subtotalBuscado =\r\n                      this.tablas.datos.subtotalesProductos.find(\r\n                          (st) => st.idFactDetalle === prod.idFactDetalle\r\n                      );\r\n\r\n                  return subtotalBuscado && subtotalBuscado.subtotal\r\n                      ? subtotalBuscado.subtotal\r\n                      : 0;\r\n              })\r\n            : 0;\r\n    };\r\n\r\n    actualizarSumatoriaSubto = () => {\r\n        this.sumatoriaSubtotales =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            this.comprobante.tipo.comprobante.incluyeIva\r\n                ? _.sumBy(this.tablas.datos.modelosFactura, (fact) =>\r\n                      Number(fact.importeTotal) ? Number(fact.importeTotal) : 0\r\n                  )\r\n                : 0;\r\n    };\r\n\r\n    /**\r\n     * Actualiza la grilla de Trazable Lotes\r\n     */\r\n    actualizarTrazableLotes = (prodToDelete?) => {\r\n        // Agrego los lotes de los productos trazables a la grilla de trazabilidad lotes\r\n        if (this.tablas.datos.productosPend.length > 0) {\r\n            this.emisionRemitosService\r\n                .buscaLotes(this.tablas.datos.productosPend)(this.comprobante)\r\n                .subscribe((lotes) => {\r\n                    const nuevosLotes = lotes.filter(\r\n                        (lotNew) =>\r\n                            !this.tablas.datos.lotesTraza.some(\r\n                                (lotOld) => lotOld.idLote === lotNew.idLote\r\n                            )\r\n                    );\r\n\r\n                    this.tablas.datos.lotesTraza =\r\n                        this.tablas.datos.lotesTraza.concat(nuevosLotes);\r\n\r\n                    // Si se borró algún producto, borro sus lotes correspondientes\r\n                    if (prodToDelete) {\r\n                        this.tablas.datos.lotesTraza =\r\n                            this.tablas.datos.lotesTraza.filter(\r\n                                // TODO: Fijarse si está filtrando bien acá. Quizás filtrar por idFactDetalle\r\n                                (lot) =>\r\n                                    lot.idProducto ===\r\n                                    prodToDelete.producto.idProducto\r\n                            );\r\n                    }\r\n                });\r\n        } else {\r\n            this.tablas.datos.lotesTraza = [];\r\n        }\r\n    };\r\n    /* verificoRelacionadoObligatorio = Si comprobantes relacionadoObligatorio esta en true, no dejo que se puedan agregar articulos porque\r\n      se toman desde los comprobantes relacionados ya cargados (ejemplo remitos)\r\n    */\r\n    verificoRelacionadoObligatorio = (val: Boolean) => {\r\n        if (val == true) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    onChangeMoneda = (monedas: Moneda) => {\r\n        this.listasPreciosUsuario = this.recursoService.getRecursoList(\r\n            resourcesREST.listaPrecios\r\n        )({\r\n            codPadron: this.cliente.padronCodigo,\r\n            codMoneda: monedas.idMoneda,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Trae data que depende del tipo comprobante relacionado\r\n     * También limpia varios campos\r\n     */\r\n    onChangeTipoComprobante = (cteTipoSelect: TipoComprobante) => {\r\n        this.tiposComprobantesRel = this.recursoService.getRecursoList(\r\n            resourcesREST.cteTipo\r\n        )({\r\n            sisModulo: sisModulos.venta,\r\n            idCteTipo: cteTipoSelect.idCteTipo,\r\n            sisTipoOperacion: this.tipoOperacion.idSisTipoOperacion,\r\n        });\r\n        this.listasPreciosUsuario = this.recursoService.getRecursoList(\r\n            resourcesREST.listaPrecios\r\n        )({\r\n            codPadron: this.cliente.padronCodigo,\r\n            codMoneda: 1,\r\n        });\r\n        //muestro titulo\r\n        this.tituloCardComprobante =\r\n            \"COMPROBANTE: \" + cteTipoSelect.comprobante.descripcion;\r\n\r\n        // Si trae observaciones, las seteo en el nuevo comprobante que se está creando\r\n        this.comprobante.observaciones =\r\n            cteTipoSelect.comprobante && cteTipoSelect.comprobante.observaciones\r\n                ? cteTipoSelect.comprobante.observaciones\r\n                : null;\r\n\r\n        this.comprobante.numerador = null;\r\n        this.comprobante.moneda = null;\r\n        this.comprobante.letraCodigo = null;\r\n        this.disableRest = false;\r\n\r\n        if (\r\n            cteTipoSelect.comprobante.relacionadoObligatorio == undefined ||\r\n            cteTipoSelect.comprobante.relacionadoObligatorio == false\r\n        ) {\r\n            this.estadoRelacionadoObligatorio = false;\r\n        } else {\r\n            this.estadoRelacionadoObligatorio = true;\r\n        }\r\n\r\n        // Blanqueo todo lo que le sigue\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n        this.tablas.datos.productosPend = [];\r\n        this.tablas.datos.modelosFactura = [];\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.tablas.datos.lotesTraza = [];\r\n\r\n        // Limpio formas pago\r\n        this.dataTablaFormasPago = null;\r\n        this.formasPagoSeleccionadas = [];\r\n\r\n        // Limpio lista pre\r\n        this.listaPrecioSelect = null;\r\n\r\n        // Reinicio radio buttons\r\n        this.listasPreciosUsuario.subscribe((resp) =>\r\n            resp.forEach((lp, ind) => {\r\n                const e = document.getElementById(\r\n                    \"lp-radio-\" + ind\r\n                ) as HTMLInputElement;\r\n                e.checked = false;\r\n            })\r\n        );\r\n\r\n        // Limpio cotizacion datos\r\n        this.cotizacionDatos.total = 0;\r\n        this.sumatoriaSubtotales = 0;\r\n\r\n        // Limpio subtotales\r\n        this.tablas.datos.subtotalesProductos = [];\r\n\r\n        // Limpio datos canje\r\n        this.sisCanje = new SisCanje();\r\n        this.nroCopias = 3;\r\n\r\n        if (this.comprobante.tipo.idCteTipo == 75) {\r\n            this.buscarCerealesCanje();\r\n            this.buscaEstadosSisa(this.cliente.padronCodigo);\r\n        }\r\n        // Actualizo monedas\r\n        this.monedas = cteTipoSelect.comprobante.monedas;\r\n    };\r\n\r\n    /**\r\n     * Busca facturas\r\n     */\r\n    fetchFacturas = () => {\r\n        // Busco las facturas de los productos\r\n        if (\r\n            this.cliente &&\r\n            this.tipoOperacion &&\r\n            this.tablas.datos.productosPend &&\r\n            this.tablas.datos.productosPend.length > 0\r\n        ) {\r\n            this.emisionRemitosService\r\n                .buscaModelos(\r\n                    this.tablas.datos.productosPend,\r\n                    this.tablas.datos.subtotalesProductos,\r\n                    this.comprobante.moneda\r\n                        ? this.comprobante.moneda.idMoneda\r\n                        : null,\r\n                    this.cliente.padronCodigo,\r\n                    this.tipoOperacion.idSisTipoOperacion,\r\n                    this.comprobante.tipo.idCteTipo,\r\n                    this.estadoSisa,\r\n                    this.percep2459\r\n                )\r\n                .subscribe((modelProds) => {\r\n                    this.tablas.datos.modelosFactura = modelProds;\r\n                    this.actualizarSumatoriaSubto();\r\n                });\r\n        } else {\r\n            this.tablas.datos.modelosFactura = [];\r\n            this.sumatoriaSubtotales = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Cuyando cambia el tipo operacion se actualizan los tipos comprobantes\r\n     */\r\n    onChangeTipoOperacion = (tipoOpSelect: SisTipoOperacion) => {\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.cteTipo)({\r\n                sisTipoOperacion: tipoOpSelect.idSisTipoOperacion,\r\n                sisSitIva: this.cliente.condIva.descCorta,\r\n            })\r\n            .subscribe((data) => {\r\n                this.tiposComprobantes = data;\r\n            });\r\n\r\n        this.depositos = this.recursoService.getRecursoList(\r\n            resourcesREST.depositos\r\n        )({\r\n            todos: tipoOpSelect.depositoOrigen,\r\n        });\r\n        if (tipoOpSelect.idSisTipoOperacion == 4) {\r\n            this.emisionRemitosService\r\n                .buscarFacturasAnticipadas(this.cliente.padronCodigo)\r\n                .subscribe((encabezados) => {\r\n                    if (\r\n                        encabezados.control.codigo == \"OK\" &&\r\n                        encabezados.arraydatos.length > 0\r\n                    ) {\r\n                        let descripcion = \"\";\r\n                        encabezados.arraydatos.forEach((encabezado) => {\r\n                            encabezado.detalle.forEach((detalle) => {\r\n                                descripcion +=\r\n                                    detalle.articulo +\r\n                                    \" - \" +\r\n                                    detalle.pendiente +\r\n                                    \" unidades \\n\";\r\n                            });\r\n                        });\r\n                        this.utilsService.showModal(\r\n                            \"Este cliente tiene facturas anticipadas pendientes\"\r\n                        )(descripcion)()();\r\n                    }\r\n                });\r\n        }\r\n        // Limpio grilla articulos y afines\r\n        this.tablas.datos.productosPend = [];\r\n        this.tablas.datos.modelosFactura = [];\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.tablas.datos.lotesTraza = [];\r\n\r\n        this.comprobante = new Comprobante();\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n\r\n        // Limpio cotizacion datos\r\n        this.cotizacionDatos.total = 0;\r\n        this.sumatoriaSubtotales = 0;\r\n    };\r\n\r\n    /**\r\n     * Checkea si el resto a pagar es valido\r\n     */\r\n    isRestoPagarValid = () => {\r\n        /**\r\n         * El importe no es valido si es CERO y No se permite importe cero\r\n         */\r\n        const importeCeroValido =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            this.cotizacionDatos.total + this.sumatoriaSubtotales === 0 &&\r\n            this.comprobante.tipo.comprobante.permiteImporteCero;\r\n\r\n        return importeCeroValido || this.calcRestoPagar() === \"0.00\";\r\n    };\r\n\r\n    /**\r\n     * Calcula el resto pagar\r\n     */\r\n    calcRestoPagar = () => {\r\n        const sumMontos = _.sumBy(\r\n            this.tablas.datos.detallesFormaPago,\r\n            (fPago) => (Number(fPago.monto) ? Number(fPago.monto) : 0)\r\n        );\r\n\r\n        // Los paréntesis son ilustrativos, ya sabemos que la suma es asociativa y conmutativa\r\n        const restoPagar = this.utilsService.toLocateString(\r\n            Number(\r\n                this.cotizacionDatos.total +\r\n                    this.sumatoriaSubtotales -\r\n                    sumMontos\r\n            ).toFixed(2)\r\n        );\r\n        // const restoPagar = Number(\r\n        //     (this.cotizacionDatos.total + this.sumatoriaSubtotales) - sumMontos\r\n        // ).toFixed(2);\r\n\r\n        return restoPagar === \"-0.00\" ||\r\n            restoPagar === \"-0.01\" ||\r\n            restoPagar === \"0.01\"\r\n            ? \"0.00\"\r\n            : restoPagar;\r\n    };\r\n\r\n    compareIvaSelect = (i1, i2) => {\r\n        // if (i1 & i2)\r\n        //     debugger;\r\n    };\r\n\r\n    onBlurCuit = (ev) => {\r\n        // Si el cuit NO es valido\r\n        if (\r\n            this.cliente.cuit &&\r\n            this.cliente.cuit.toString() &&\r\n            !this.utilsService.validarCuit(this.cliente.cuit.toString())\r\n        ) {\r\n            this.utilsService.showModal(\"Error\")(\"Cuit no válido\")(() => {\r\n                this.cliente.cuit = null;\r\n                document.getElementById(\"cuitCliente\")\r\n                    ? document.getElementById(\"cuitCliente\").focus()\r\n                    : null;\r\n            })();\r\n        }\r\n    };\r\n\r\n    disabledConfirmar = () => {\r\n\r\n        const noPermiteImporteCero =\r\n            this.comprobante.tipo\r\n            /*&& this.cotizacionDatos &&\r\n           this.comprobante.tipo.comprobante &&\r\n            this.cotizacionDatos.total + this.sumatoriaSubtotales === 0 &&\r\n            !this.comprobante.tipo.comprobante.permiteImporteCero;\r\n*/\r\n        const datosNoValidos =\r\n            !this.emisionRemitosService.checkIfDatosValidosComprobante(\r\n                this.comprobante\r\n            )(this.cliente)(this.tablas.datos.productosPend)(\r\n                this.tablas.datos.modelosFactura\r\n            )(this.deposito)(this.tablas.datos.lotesTraza);\r\n\r\n        const formaPagoNoValido =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.requiereFormaPago &&\r\n            (!this.tablas.datos.detallesFormaPago ||\r\n                this.tablas.datos.detallesFormaPago.length <= 0 ||\r\n                !this.isRestoPagarValid());\r\n\r\n        const relacionadoNoValido =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n           /* (this.comprobante.tipo.idCteTipo == 77 || this.comprobante.tipo.idCteTipo == 76) &&*/\r\n            (!this.relacionadoConfirmado  || !this.factCabAfipRelacionado  );\r\n\r\n        return (\r\n            datosNoValidos ||\r\n            formaPagoNoValido ||\r\n            noPermiteImporteCero ||\r\n            relacionadoNoValido\r\n\r\n        );\r\n    };\r\n\r\n    compareFnMonedas = (m1: Moneda, m2: Moneda) =>\r\n        m1 && m2 ? m1.idMoneda === m2.idMoneda : m1 === m2;\r\n\r\n    /**\r\n     * Actualia formas de pago y productos seleccionables\r\n     */\r\n    onChangeListaPrecio = (lp: ListaPrecio) => {\r\n        this.listaPrecioSelect = lp;\r\n\r\n        // Tabla forma de pago actualizo\r\n        this.dataTablaFormasPago = lp && lp.formasPago ? lp.formasPago : null;\r\n\r\n        // Obtengo los productos que puede agregar a la venta\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.productosReducidos)({\r\n                tipo: \"reducida\",\r\n                listaPrecio: lp.idListaPrecio,\r\n                aptoCanje: this.tipoOperacion.canje,\r\n                idDeposito: this.deposito ? this.deposito.idDeposito : null,\r\n            })\r\n            .subscribe((prods) => {\r\n                this.productos.next(prods);\r\n            });\r\n\r\n        // Y limpio los productos que tenga agregado actualmente\r\n        // this.tablas.datos.productosPend = [];\r\n\r\n        // Si ya hay productos, los filtro por la lp seleccionada\r\n        if (\r\n            this.tablas.datos.productosPend &&\r\n            this.tablas.datos.productosPend.length > 0\r\n        ) {\r\n            this.onClickBuscarPendientes();\r\n\r\n            // this.tablas.datos.productosPend = this.tablas.datos.productosPend\r\n            //     .filter(\r\n            //         pp => pp.idListaPrecio === lp.idListaPrecio\r\n            //     )\r\n        }\r\n    };\r\n\r\n    fechaComprobanteInvalida = () =>\r\n        this.comprobante.numerador &&\r\n        this.comprobante.numerador.fechaApertura &&\r\n        this.comprobante.numerador.fechaCierre &&\r\n        !moment(\r\n            this.utilsService.dateLikePickerToDate(\r\n                this.comprobante.fechaComprobante\r\n            )\r\n        ).isBetween(\r\n            moment(\r\n                this.utilsService.dateLikePickerToDate(\r\n                    this.comprobante.numerador.fechaApertura\r\n                )\r\n            ),\r\n            moment(\r\n                this.utilsService.dateLikePickerToDate(\r\n                    this.comprobante.numerador.fechaCierre\r\n                )\r\n            ),\r\n            \"days\",\r\n            \"[]\"\r\n        );\r\n\r\n    onBlurPtoVentaCteRel = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobanteRelacionado.puntoVenta\r\n            ? (this.comprobanteRelacionado.puntoVenta =\r\n                  this.comprobanteRelacionado.puntoVenta.padStart(4, \"0\"))\r\n            : null;\r\n\r\n    onBlurNumeradorCteRel = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobanteRelacionado.numero\r\n            ? (this.comprobanteRelacionado.numero =\r\n                  this.comprobanteRelacionado.numero.padStart(8, \"0\"))\r\n            : null;\r\n\r\n    onBlurPtoVentaCtePes = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobantePesificado &&\r\n        this.comprobantePesificado.puntoVenta\r\n            ? (this.comprobantePesificado.puntoVenta =\r\n                  this.comprobantePesificado.puntoVenta.padStart(4, \"0\"))\r\n            : null;\r\n\r\n    onBlurNumeradorCtePes = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobantePesificado &&\r\n        this.comprobantePesificado.numero\r\n            ? (this.comprobantePesificado.numero =\r\n                  this.comprobantePesificado.numero.padStart(8, \"0\"))\r\n            : null;\r\n\r\n    onChangeLetra = (letraSelect: LetraCodigo) =>\r\n        (this.comprobante.numerador =\r\n            letraSelect &&\r\n            letraSelect.numeradores &&\r\n            letraSelect.numeradores.length > 0\r\n                ? letraSelect.numeradores[0]\r\n                : null);\r\n\r\n    onChangeContrato = (cont: Contrato) => {\r\n        this.sisCanje = cont ? cont.sisCanje : null;\r\n\r\n        this.relacionesCanje = this.recursoService.getRecursoList(\r\n            resourcesREST.relacionesCanje\r\n        )({\r\n            idSisCanje: this.sisCanje.idSisCanje,\r\n        });\r\n    };\r\n\r\n    onChangeProductoCanje = (sisCanje: SisCanje) => {\r\n        this.relacionesCanje = this.recursoService.getRecursoList(\r\n            resourcesREST.relacionesCanje\r\n        )({\r\n            idSisCanje: sisCanje.idSisCanje,\r\n        });\r\n    };\r\n\r\n    compareWithCanje = (a: SisCanje, b: SisCanje) =>\r\n        a.idSisCanje === b.idSisCanje;\r\n    compareWithContrato = (a: Contrato, b: Contrato) =>\r\n        a.idContratos === b.idContratos;\r\n\r\n    onClickConfirmCondiciones = () => {\r\n        this.condicionesConfirmadas = true;\r\n    };\r\n\r\n    onClickCancelarCondiciones = () => {\r\n        this.condicionesConfirmadas = false;\r\n    };\r\n\r\n    onClickConfirmRelacionado = () => {\r\n        if (\r\n            this.numeroComprobanteAfipRelacionado &&\r\n            this.ptoVentaAfipRelacionado\r\n        ) {\r\n            const stringNumeroComprobante = this.numeroComprobanteAfipRelacionado.toString();\r\n            this.numeroAfipRelacionado = Number(\r\n                this.ptoVentaAfipRelacionado.toString() +\r\n                    _.padStart(stringNumeroComprobante, 8, \"0\")\r\n            );\r\n            this.emisionRemitosService\r\n                .getComprobanteAfip(\r\n                    this.codigoAfipRelacionado,\r\n                    this.numeroAfipRelacionado\r\n                )\r\n                .subscribe((response) => {\r\n                    this.idFactCabRelacionado = response.control.descripcionLarga;\r\n\r\n                    this.utilsService.showModal(response.control.codigo)(\r\n\r\n                        response.control.descripcion\r\n\r\n                    )()();\r\n                    if (response.control.codigo == \"OK\") {\r\n                        this.relacionadoConfirmado = true;\r\n                        this.factCabAfipRelacionado = Number(\r\n                            response.control.descripcionLarga\r\n                        );\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"Complete ambos campos para la búsqueda de comprobante\"\r\n            );\r\n        }\r\n    };\r\n\r\n    onClickCancelarRelacionado = () => {\r\n        this.relacionadoConfirmado = false;\r\n    };\r\n\r\n    onClickBuscarPesificado = () => {\r\n        this.emisionRemitosService\r\n            .buscarComprobantesPesificacion(\r\n                this.comprobantePesificado.puntoVenta +\r\n                    this.comprobantePesificado.numero\r\n            )\r\n            .subscribe((response) => {\r\n                if (response) {\r\n                    this.utilsService.showModal(\"OK\")(\r\n                        \"Comprobante encontrado\"\r\n                    )()();\r\n                    console.log(response);\r\n                    let valorTotal21 = 0;\r\n                    let valorTotal105 = 0;\r\n                    this.marcaPesificado = true;\r\n                    this.pesificadoPersisteSn = true;\r\n                    this.comprobantePesificadoInterno = response.numero;\r\n                    if (\r\n                        response.cotDolar <\r\n                        this.cotizacionDatos.cotizacion.cotizacion\r\n                    ) {\r\n                        this.comprobante.tipo =\r\n                            this.tiposComprobantes[\r\n                                this.tiposComprobantes.findIndex(\r\n                                    (value) => value.idCteTipo === 76\r\n                                )\r\n                            ];\r\n                        this.comprobante.letraCodigo =\r\n                            this.comprobante.tipo.letrasCodigos[0];\r\n                        this.onChangeLetra(this.comprobante.letraCodigo);\r\n                        //this.onChangeTipoComprobante(this.comprobante.tipo);\r\n                        this.monedas =\r\n                            this.comprobante.tipo.comprobante.monedas;\r\n                        this.comprobante.moneda =\r\n                            this.monedas[\r\n                                this.monedas.findIndex(\r\n                                    (value) => value.idMoneda === 1\r\n                                )\r\n                            ];\r\n                        response.detalle.forEach((value) => {\r\n                            if (value.ivaPorc == 21) {\r\n                                valorTotal21 =\r\n                                    valorTotal21 +\r\n                                    value.importe *\r\n                                        (this.cotizacionDatos.cotizacion\r\n                                            .cotizacion -\r\n                                            response.cotDolar);\r\n                            } else {\r\n                                valorTotal105 =\r\n                                    valorTotal105 +\r\n                                    value.importe *\r\n                                        (this.cotizacionDatos.cotizacion\r\n                                            .cotizacion -\r\n                                            response.cotDolar);\r\n                            }\r\n                        });\r\n                        if (response.diferidoVto) {\r\n                            valorTotal21 = valorTotal21 + valorTotal21 * 0.21;\r\n                            valorTotal105 =\r\n                                valorTotal105 + valorTotal105 * 0.105;\r\n                        }\r\n                        this.tablas.datos.productosPend.push(\r\n                            new ProductoPendiente({\r\n                                item: 0,\r\n                                comprobante: \"\",\r\n                                numero: \"0\",\r\n                                original: 0,\r\n                                pendiente: 1,\r\n                                precio: valorTotal21 + valorTotal105,\r\n                                dolar: 1,\r\n                                moneda: \" \",\r\n                                porCalc: 0,\r\n                                ivaPorc: 0,\r\n                                deposito: 0,\r\n                                idFactDetalleImputa: null,\r\n                                idFactCabImputada: null,\r\n                                descuento: 0,\r\n                                tipoDescuento: \"%\",\r\n                                cantBultos: 0,\r\n                                despacho: \"\",\r\n                                observaciones: \"\",\r\n                                itemImputada: 0,\r\n                                producto: {\r\n                                    idProductos: 1845,\r\n                                    codProducto: \"999999\",\r\n                                    codigoBarra: \" \",\r\n                                    descripcionCorta:\r\n                                        \"AJUSTE X TC FAC. \" +\r\n                                        this.comprobantePesificado.puntoVenta +\r\n                                        this.comprobantePesificado.numero +\r\n                                        \" - dolar \" +\r\n                                        response.cotDolar.toString(),\r\n                                    descripcion:\r\n                                        \"AJUSTE X TC FAC. \" +\r\n                                        this.comprobantePesificado.puntoVenta +\r\n                                        this.comprobantePesificado.numero +\r\n                                        \" - dolar \" +\r\n                                        response.cotDolar.toString(),\r\n                                    aptoCanje: false,\r\n                                    stock: false,\r\n                                    trazable: false,\r\n                                    traReceta: false,\r\n                                    traInforma: false,\r\n                                    gtin: \" \",\r\n                                    puntoPedido: \"0.00\",\r\n                                    costoReposicion: \"0.00\",\r\n                                    precioVentaProv: \"0.00\",\r\n                                    observaciones: \" \",\r\n                                    IVA: {\r\n                                        idIVA: 1,\r\n                                        porcIVA: 21,\r\n                                    },\r\n                                    subRubro: null,\r\n                                    rubro: null,\r\n                                    unidadCompra: null,\r\n                                    unidadVenta: null,\r\n                                    editar: false,\r\n                                    modeloCab: null,\r\n                                    marca: null,\r\n                                    cultivos: [],\r\n                                    moneda: null,\r\n                                },\r\n                                codigoListaPrecio: null,\r\n                                idListaPrecio: null,\r\n                                importe: valorTotal21 + valorTotal105,\r\n                                idFactDetalle: \"abc\",\r\n                                modeloCab: null,\r\n                                diferenciaPrecio: 0,\r\n                                recargo: 0,\r\n                                recargoTotal: 0,\r\n                                diasLibres: 0,\r\n                                diasResultantes: 0,\r\n                                cotaInferior: 0,\r\n                                cotaSuperior: 0,\r\n                            })\r\n                        );\r\n                        this.tablas.datos.productosPend[0].imputacion.seleccionada =\r\n                            new ModeloDetalle({\r\n                                idModeloDetalle: 585,\r\n                                orden: 2,\r\n                                descripcion: \"IVA\",\r\n                                dh: \"S\",\r\n                                prioritario: false,\r\n                                operador: \"*\",\r\n                                valor: 21,\r\n                                ctaContable: \"200281\",\r\n                                planCuenta: {\r\n                                    planCuentas: null,\r\n                                    planDescripcion: null,\r\n                                },\r\n                                sisModulo: 2,\r\n                                tipoModelo: 2,\r\n                                libro: {\r\n                                    idLibro: 29,\r\n                                },\r\n                            });\r\n                        this.tablas.datos.productosPend[0].imputacion.seleccionada.idSisTipoModelo = 2;\r\n                        this.tablas.datos.subtotalesProductos.push({\r\n                            idProducto: 1845,\r\n                            subtotal: valorTotal21 + valorTotal105,\r\n                            subtotalIva:\r\n                                valorTotal21 +\r\n                                valorTotal105 +\r\n                                valorTotal21 * 0.21 +\r\n                                valorTotal105 * 0.21,\r\n                            numeroComp: \"000000000000\",\r\n                            precioDesc: 0,\r\n                            idFactDetalle: \"abc\",\r\n                        });\r\n                        this.tablas.datos.modelosFactura.push({\r\n                            cuentaContable: \"200281\",\r\n                            descripcion: \"IVA\",\r\n                            importeTotal: valorTotal21 * 0.21,\r\n                            porcentaje: 21,\r\n                            idSisTipoModelo: 2,\r\n                            baseImponible: valorTotal21,\r\n                            operador: \"*\",\r\n                            idLibro: 29,\r\n                        });\r\n                        this.tablas.datos.modelosFactura.push({\r\n                            cuentaContable: \"200283\",\r\n                            descripcion: \"IVA 10,5\",\r\n                            importeTotal: valorTotal105 * 0.105,\r\n                            porcentaje: 10.5,\r\n                            idSisTipoModelo: 2,\r\n                            baseImponible: valorTotal105,\r\n                            operador: \"*\",\r\n                            idLibro: 29,\r\n                        });\r\n                        this.tablas.datos.lotesTraza = [];\r\n                        this.actualizarSumatoriaSubto();\r\n                        this.actualizarTotalNeto();\r\n                        //this.actualizarDatosProductos();\r\n                    } else if (\r\n                        response.cotDolar >\r\n                        this.cotizacionDatos.cotizacion.cotizacion\r\n                    ) {\r\n                        this.comprobante.tipo =\r\n                            this.tiposComprobantes[\r\n                                this.tiposComprobantes.findIndex(\r\n                                    (value) => value.idCteTipo === 77\r\n                                )\r\n                            ];\r\n                        this.comprobante.letraCodigo =\r\n                            this.comprobante.tipo.letrasCodigos[0];\r\n                        this.onChangeLetra(this.comprobante.letraCodigo);\r\n                        //this.onChangeTipoComprobante(this.comprobante.tipo);\r\n                        this.comprobante.moneda =\r\n                            this.monedas[\r\n                                this.monedas.findIndex(\r\n                                    (value) => value.idMoneda === 1\r\n                                )\r\n                            ];\r\n                        response.detalle.forEach((value) => {\r\n                            if (value.ivaPorc == 21) {\r\n                                valorTotal21 =\r\n                                    valorTotal21 +\r\n                                    value.importe *\r\n                                        (response.cotDolar -\r\n                                            this.cotizacionDatos.cotizacion\r\n                                                .cotizacion);\r\n                            } else {\r\n                                valorTotal105 =\r\n                                    valorTotal105 +\r\n                                    value.importe *\r\n                                        (response.cotDolar -\r\n                                            this.cotizacionDatos.cotizacion\r\n                                                .cotizacion);\r\n                            }\r\n                        });\r\n                        if (response.diferidoVto) {\r\n                            valorTotal21 = valorTotal21 + valorTotal21 * 0.21;\r\n                            valorTotal105 =\r\n                                valorTotal105 + valorTotal105 * 0.105;\r\n                        }\r\n                        this.tablas.datos.productosPend.push(\r\n                            new ProductoPendiente({\r\n                                item: 0,\r\n                                comprobante: \"\",\r\n                                numero: \"0\",\r\n                                original: 0,\r\n                                pendiente: 1,\r\n                                precio: valorTotal21 + valorTotal105,\r\n                                dolar: 1,\r\n                                moneda: \" \",\r\n                                porCalc: 0,\r\n                                ivaPorc: 0,\r\n                                deposito: 0,\r\n                                idFactDetalleImputa: null,\r\n                                idFactCabImputada: null,\r\n                                descuento: 0,\r\n                                tipoDescuento: \"%\",\r\n                                cantBultos: 0,\r\n                                despacho: \"\",\r\n                                observaciones: \"\",\r\n                                itemImputada: 0,\r\n                                producto: {\r\n                                    idProductos: 1845,\r\n                                    codProducto: \"999999\",\r\n                                    codigoBarra: \" \",\r\n                                    descripcionCorta:\r\n                                        \"AJUSTE X TC FAC. \" +\r\n                                        this.comprobantePesificado.puntoVenta +\r\n                                        this.comprobantePesificado.numero +\r\n                                        \" - dolar \" +\r\n                                        response.cotDolar.toString(),\r\n                                    descripcion:\r\n                                        \"AJUSTE X TC FAC. \" +\r\n                                        this.comprobantePesificado.puntoVenta +\r\n                                        this.comprobantePesificado.numero +\r\n                                        \" - dolar \" +\r\n                                        response.cotDolar.toString(),\r\n                                    aptoCanje: false,\r\n                                    stock: false,\r\n                                    trazable: false,\r\n                                    traReceta: false,\r\n                                    traInforma: false,\r\n                                    gtin: \" \",\r\n                                    puntoPedido: \"0.00\",\r\n                                    costoReposicion: \"0.00\",\r\n                                    precioVentaProv: \"0.00\",\r\n                                    observaciones: \" \",\r\n                                    IVA: {\r\n                                        idIVA: 1,\r\n                                        porcIVA: 21,\r\n                                    },\r\n                                    subRubro: null,\r\n                                    rubro: null,\r\n                                    unidadCompra: null,\r\n                                    unidadVenta: null,\r\n                                    editar: false,\r\n                                    modeloCab: null,\r\n                                    marca: null,\r\n                                    cultivos: [],\r\n                                    moneda: null,\r\n                                },\r\n                                codigoListaPrecio: null,\r\n                                idListaPrecio: null,\r\n                                importe: valorTotal21 + valorTotal105,\r\n                                idFactDetalle: \"abc\",\r\n                                modeloCab: null,\r\n                                diferenciaPrecio: 0,\r\n                                recargo: 0,\r\n                                recargoTotal: 0,\r\n                                diasLibres: 0,\r\n                                diasResultantes: 0,\r\n                                cotaInferior: 0,\r\n                                cotaSuperior: 0,\r\n                            })\r\n                        );\r\n                        this.tablas.datos.productosPend[0].imputacion.seleccionada =\r\n                            new ModeloDetalle({\r\n                                idModeloDetalle: 585,\r\n                                orden: 2,\r\n                                descripcion: \"IVA\",\r\n                                dh: \"S\",\r\n                                prioritario: false,\r\n                                operador: \"*\",\r\n                                valor: 21,\r\n                                ctaContable: \"200281\",\r\n                                planCuenta: {\r\n                                    planCuentas: null,\r\n                                    planDescripcion: null,\r\n                                },\r\n                                sisModulo: 2,\r\n                                tipoModelo: 2,\r\n                                libro: {\r\n                                    idLibro: 29,\r\n                                },\r\n                            });\r\n                        this.tablas.datos.productosPend[0].imputacion.seleccionada.idSisTipoModelo = 2;\r\n                        this.tablas.datos.subtotalesProductos.push({\r\n                            idProducto: 1845,\r\n                            subtotal: valorTotal21 + valorTotal105,\r\n                            subtotalIva:\r\n                                valorTotal21 +\r\n                                valorTotal105 +\r\n                                valorTotal21 * 0.21 +\r\n                                valorTotal105 * 0.21,\r\n                            numeroComp: \"000000000000\",\r\n                            precioDesc: 0,\r\n                            idFactDetalle: \"abc\",\r\n                        });\r\n                        this.tablas.datos.modelosFactura.push({\r\n                            cuentaContable: \"200281\",\r\n                            descripcion: \"IVA\",\r\n                            importeTotal: valorTotal21 * 0.21,\r\n                            porcentaje: 21,\r\n                            idSisTipoModelo: 2,\r\n                            baseImponible: valorTotal21,\r\n                            operador: \"*\",\r\n                            idLibro: 29,\r\n                        });\r\n                        this.tablas.datos.modelosFactura.push({\r\n                            cuentaContable: \"200283\",\r\n                            descripcion: \"IVA 10,5\",\r\n                            importeTotal: valorTotal105 * 0.105,\r\n                            porcentaje: 10.5,\r\n                            idSisTipoModelo: 2,\r\n                            baseImponible: valorTotal105,\r\n                            operador: \"*\",\r\n                            idLibro: 29,\r\n                        });\r\n                        this.tablas.datos.lotesTraza = [];\r\n                        this.actualizarSumatoriaSubto();\r\n                        this.actualizarTotalNeto();\r\n                    } else {\r\n                        this.utilsService.showModal(\"ERROR\")(\r\n                            \"Las cotizaciones son iguales\"\r\n                        )()();\r\n                    }\r\n                } else {\r\n                    this.utilsService.showModal(\"ERROR\")(\r\n                        \"No se encontró el comprobante\"\r\n                    )()();\r\n                }\r\n            });\r\n    };\r\n\r\n    getCantidadCanjeReferencia = () =>\r\n        this.comprobante &&\r\n        this.comprobante.tipo &&\r\n        this.comprobante.tipo.comprobante &&\r\n        this.comprobante.tipo.comprobante.usaRelacion\r\n            ? this.relacionCanje &&\r\n              this.tablas.datos.productosPend &&\r\n              this.tablas.datos.productosPend.length > 0\r\n                ? _.sumBy(this.tablas.datos.productosPend, (prod) =>\r\n                      Number(prod.pendiente)\r\n                  ) * this.relacionCanje.factor\r\n                : 0\r\n            : this.utilsService.parseDecimalNumber(\r\n                  Number(\r\n                      this.utilsService.parseDecimal(this.cotizacionDatos.total)\r\n                  ) / this.sisCanje.precio\r\n              );\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.component.ts","module.exports = \"<meta http-equiv=\\\"Cache-Control\\\" content=\\\"no-cache, no-store, must-revalidate\\\">\\r\\n<meta http-equiv=\\\"Pragma\\\" content=\\\"no-cache\\\">\\r\\n<meta http-equiv=\\\"Expires\\\" content=\\\"0\\\">\\r\\n<ba-card class=\\\"emision-remitos\\\">\\r\\n\\r\\n    <form #ventForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                    <label for=\\\"cliente\\\">{{preCargaPadron}}</label>\\r\\n                <div class=\\\"form-group  inline-group\\\">\\r\\n                    <div class=\\\"cliente-input-container\\\" style=\\\"display: flex; flex-direction: column \\\">\\r\\n\\r\\n                        <input autocomplete=\\\"off\\\" #emiRemInput\\r\\n                            id=\\\"clienteSeleccionado\\\"\\r\\n                            (blur)=\\\"onBlurInputCliente($event)\\\"\\r\\n                            (ngModelChange)=\\\"onChangeInputCliente($event)\\\"\\r\\n                            required\\r\\n                            name=\\\"clPadCod\\\"\\r\\n                            [disabled]=\\\"!statusCargaPadron\\\"\\r\\n                            [(ngModel)]=\\\"cliente.padronCodigo\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\"\\r\\n                            (keyup.enter)=\\\"onEnterInputProv($event)\\\" (keydown.arrowdown)=\\\"keyPressInputTexto($event)('down')\\\"\\r\\n                            (keydown.arrowup)=\\\"keyPressInputTexto($event)('up')\\\"\\r\\n\\r\\n                            >\\r\\n                        <div\\r\\n                            class=\\\"spinner-container\\\"\\r\\n                            *ngIf=\\\"\\r\\n                                utilsService.ifFocused(emiRemInput)\\r\\n                                &&\\r\\n                                (\\r\\n                                    !cliente ||\\r\\n                                    !cliente.padronApelli\\r\\n                                )\\r\\n                                &&\\r\\n                                cliente.padronCodigo && cliente.padronCodigo.length > 0\\r\\n                                &&\\r\\n                                buscandoCliente\\r\\n                            \\\">\\r\\n                            <i class=\\\"fa fa-spinner fa-spin\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <popup-lista\\r\\n                *ngIf=\\\"utilsService.ifFocused(emiRemInput)\\\"\\r\\n                [items]=\\\"clientes.filtrados.asObservable().distinctUntilChanged()\\\"\\r\\n                [keysToShow]=\\\"['padronApelli', 'padronNombre', 'padronCodigo']\\\"\\r\\n                [onClickItem]=\\\"onClickPopupCliente\\\"\\r\\n                [fatherPosition]=\\\"popupListaService.getOffsetOfInputCliente('clienteSeleccionado')\\\"\\r\\n                >\\r\\n            </popup-lista>\\r\\n\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                    <label for=\\\"nombreCliente\\\">Razón</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input autocomplete=\\\"off\\\" disabled name=\\\"clPadApe\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                        id=\\\"nombreCliente\\\" placeholder=\\\"{{cliente.padronApelli ? cliente.padronApelli + ', ' + cliente.padronNombre : null}}\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                    <label for=\\\"cuit\\\">CUIT</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <!-- <input autocomplete=\\\"off\\\" name=\\\"clCuit\\\" (blur)=\\\"onBlurCuit($event)\\\" [disabled]=\\\"disabledClienteCustom\\\" [(ngModel)]=\\\"cliente.cuit\\\" -->\\r\\n                    <input autocomplete=\\\"off\\\" disabled name=\\\"clCuit\\\" (blur)=\\\"onBlurCuit($event)\\\" [(ngModel)]=\\\"cliente.cuit\\\"\\r\\n                        type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cuitCliente\\\" placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- <div *ngIf=\\\"disabledClienteCustom\\\" class=\\\"col-sm-1\\\"> -->\\r\\n            <div class=\\\"col-sm-1\\\">\\r\\n                    <label for=\\\"cuit\\\">IVA</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <!-- <input autocomplete=\\\"off\\\" name=\\\"clDscCort\\\" disabled [(ngModel)]=\\\"cliente.condIva.descCorta\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cuit\\\" -->\\r\\n                    <input autocomplete=\\\"off\\\" name=\\\"clDscCort\\\" disabled [ngModel]=\\\"cliente.condIva ? cliente.condIva.descCorta : ''\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cuit\\\"\\r\\n                        placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <label for=\\\"tipoOperacionSelect\\\">Tipo Operacion:</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <select\\r\\n                        id=\\\"tipoOperacionSelect\\\"\\r\\n                        class=\\\"form-control without-padding\\\"\\r\\n                        required name=\\\"clTipOp\\\"\\r\\n                        [(ngModel)]=\\\"tipoOperacion\\\"\\r\\n                        (ngModelChange)=\\\"onChangeTipoOperacion($event)\\\"\\r\\n                        [ngStyle]=\\\"{padding: '0px 8px 0px 8px'}\\\"\\r\\n                        >\\r\\n                        <option *ngFor=\\\"let tipoOp of tiposOperacion | async\\\" [ngValue]=\\\"tipoOp\\\">\\r\\n                            {{tipoOp.descripcion}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                 <label class=\\\"add-item-label\\\" for=\\\"depositoInput\\\">Deposito: </label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <select required [compareWith]=\\\"utilsService.dropdownCompareWith\\\" name=\\\"clDep\\\" [(ngModel)]=\\\"deposito\\\" class=\\\"form-control without-padding\\\">\\r\\n                        <option *ngFor=\\\"let dep of depositos | async\\\" [ngValue]=\\\"dep\\\">\\r\\n                            {{dep.descripcion}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"\\r\\n            dataVendedor.vendedor &&\\r\\n            dataVendedor.vendedor.idVendedor &&\\r\\n            dataVendedor.vendedor.idVendedor !== 1\\r\\n        \\\" class=\\\"row\\\">\\r\\n            <div class=\\\"input-vend\\\">\\r\\n                <label for=\\\"idInputVendedor\\\">Vendedor:</label>\\r\\n                <input autocomplete=\\\"off\\\" disabled name=\\\"clAuxNomCom\\\" [(ngModel)]=\\\"dataVendedor.vendedor.auxNombreCompleto\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                    id=\\\"idInputVendedor\\\">\\r\\n            </div>\\r\\n            <div class=\\\"checkbox-vend\\\">\\r\\n                <ba-checkbox name=\\\"clDtVenInc\\\" [(ngModel)]=\\\"dataVendedor.incluir\\\" [label]=\\\"'Incluir'\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ba-checkbox>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row custom-card-container\\\">\\r\\n            <custom-card class=\\\"col-sm-5\\\" title=\\\"{{ tituloCardComprobante }}\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                        <div class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteTipo\\\">Cte:</label>\\r\\n                            <select required name=\\\"clCompTip\\\" [(ngModel)]=\\\"comprobante.tipo\\\"\\r\\n                                    (ngModelChange)=\\\"onChangeTipoComprobante($event)\\\"\\r\\n                                class=\\\"form-control without-padding\\\" [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\" id=\\\"cteTipo\\\">\\r\\n                                <option *ngFor=\\\"let tipoComp of tiposComprobantes\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                    {{ tipoComp.descCorta }} {{ tipoComp.comprobante.referencia }}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-1\\\" style=\\\"padding: 0;\\\">\\r\\n                        <div class=\\\"form-group inline-group\\\">\\r\\n                            <select *ngIf=\\\"comprobante && comprobante.tipo && comprobante.tipo.letrasCodigos\\\" required\\r\\n                                name=\\\"letraSelct\\\"\\r\\n                                [(ngModel)]=\\\"comprobante.letraCodigo\\\"\\r\\n                                (ngModelChange)=\\\"onChangeLetra($event)\\\"\\r\\n                                class=\\\"form-control without-padding\\\"\\r\\n                                id=\\\"letraCodId\\\"\\r\\n                                >\\r\\n                                <option *ngFor=\\\"let lc of comprobante.tipo.letrasCodigos\\\" [ngValue]=\\\"lc\\\">\\r\\n                                    {{ lc.letra.letra }}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                        <div *ngIf=\\\"!(\\r\\n                            comprobante.letraCodigo && comprobante.letraCodigo.numeradores\\r\\n                        )\\\" class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteNro\\\">Nro:</label>\\r\\n                            <select required [(ngModel)]=\\\"comprobante.numerador\\\" id=\\\"selectPtoVentaNum\\\" class=\\\"form-control\\\" [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\" name=\\\"clCompNro\\\">\\r\\n                                <option [ngValue]=\\\"null\\\">\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"\\r\\n                            comprobante.letraCodigo && comprobante.letraCodigo.numeradores\\r\\n                        \\\" class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteNro\\\">Nro:</label>\\r\\n\\r\\n                            <select\\r\\n                                required id=\\\"selectPtoVentaNum\\\" class=\\\"form-control\\\"\\r\\n                                [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\"\\r\\n                                name=\\\"clCompNro\\\"\\r\\n                                [(ngModel)]=\\\"comprobante.numerador\\\">\\r\\n                                <option *ngFor=\\\"let upNum of comprobante.letraCodigo.numeradores\\\" [ngValue]=\\\"upNum\\\">\\r\\n                                    {{\\r\\n                                    upNum.ptoVenta.ptoVenta.toString().padStart(4, '0')\\r\\n                                    }} - {{\\r\\n                                    upNum.numerador.toString().padStart(8, '0')\\r\\n                                    }}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <!-- <div class=\\\"col-sm-5\\\"></div> -->\\r\\n                    <div class=\\\"col-sm-5\\\">\\r\\n                        <div class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteMoneda\\\">Moneda:</label>\\r\\n                            <select\\r\\n                                required\\r\\n                                [compareWith]=\\\"compareFnMonedas\\\"\\r\\n                                name=\\\"compMoneda\\\"\\r\\n                                [(ngModel)]=\\\"comprobante.moneda\\\"\\r\\n                                (ngModelChange)=\\\"onChangeMoneda($event)\\\"\\r\\n                                class=\\\"form-control without-padding\\\" [ngStyle]=\\\"{padding: '2px 8px 0px 8px'}\\\" id=\\\"cteMoneda\\\">\\r\\n                                <option *ngFor=\\\"let mon of monedas\\\" [ngValue]=\\\"mon\\\">\\r\\n                                    {{mon.descripcion}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                        <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                            <label for=\\\"fechaComprobante\\\">Emisión: </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <!-- Deshabilito la fecha si NÓ está seleccionado el cliente, el tipo comprobante y seteado el ptoventa -->\\r\\n                                <input autocomplete=\\\"off\\\" required\\r\\n                                    (blur)=\\\"onBlurFechaComprobante($event)\\\"\\r\\n                                    (keyup.enter)=\\\"onBlurFechaComprobante($event)\\\"\\r\\n                                    class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"dd/mm/aaaa\\\"\\r\\n                                    name=\\\"dp1\\\" [(ngModel)]=\\\"comprobante.fechaComprobante\\\"\\r\\n                                    ngbDatepicker (ngModelChange)=\\\"onModelChangeFechaComp($event, dComp)\\\" #dComp=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp.toggle()\\\" type=\\\"button\\\"\\r\\n                                        style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-7\\\">\\r\\n                        <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                            <label for=\\\"fechaVencimiento\\\">Vencimiento: </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <!-- Deshabilito la fecha si NÓ está seleccionado el cliente, el tipo comprobante y seteado el ptoventa -->\\r\\n                                <input autocomplete=\\\"off\\\" required\\r\\n                                    (blur)=\\\"onBlurFechaVencimiento($event)\\\"\\r\\n                                    (keyup.enter)=\\\"onBlurFechaVencimiento($event)\\\"\\r\\n                                    class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"dd/mm/aaaa\\\"\\r\\n                                    name=\\\"dp2\\\" [(ngModel)]=\\\"comprobante.fechaVto\\\"\\r\\n                                    ngbDatepicker (ngModelChange)=\\\"onModelChangeFechaVto($event, dVto)\\\" #dVto=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dVto.toggle()\\\" type=\\\"button\\\"\\r\\n                                        style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                    <div class=\\\"each-input\\\">\\r\\n                        <label for=\\\"nroCopias\\\">Nº Copias:</label>\\r\\n                        <select\\r\\n                            required\\r\\n                            class=\\\"form-control without-padding cond-cotiza copias-select\\\"\\r\\n                            name=\\\"nroCopias\\\"\\r\\n                            [(ngModel)]=\\\"nroCopias\\\"\\r\\n                            id=\\\"nroCopias\\\">\\r\\n                            <option [ngValue]=\\\"1\\\">\\r\\n                                1\\r\\n                            </option>\\r\\n                            <option [ngValue]=\\\"2\\\">\\r\\n                                2\\r\\n                            </option>\\r\\n                            <option [ngValue]=\\\"3\\\">\\r\\n                                3\\r\\n                            </option>\\r\\n                            <option [ngValue]=\\\"4\\\">\\r\\n                                4\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"comprobante && comprobante.tipo && comprobante.tipo.idCteTipo && comprobante.tipo.requiereClaveAutorizacion == true\\\">\\r\\n\\r\\n                            <div class=\\\"each-input\\\">\\r\\n                                <label for=\\\"claveAutorizacion\\\">Clave</label>\\r\\n                             <input [(ngModel)]=\\\"claveAutorizacion\\\" id = \\\"claveAutorizacion\\\"\\r\\n                             name=\\\"claveAutorizacion\\\"\\r\\n                             (ngModelChange)=\\\"changeClave()\\\"\\r\\n                             class=\\\"\\\"\\r\\n                             type=\\\"password\\\"\\r\\n                             class=\\\"form-control edit-input size-control\\\"  >\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </custom-card>\\r\\n\\r\\n            <ngb-tabset [destroyOnHide]=false class=\\\"col-sm-7 tabs-forma-pago\\\">\\r\\n                <ngb-tab title=\\\"Forma de Pago\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"fpago-content\\\">\\r\\n                            <table class=\\\"fpago-lista-precio-tab\\\">\\r\\n                                <tr class=\\\"table-header\\\">\\r\\n                                    <th></th>\\r\\n                                    <th>Lista Precio</th>\\r\\n                                    <th>Condiciones</th>\\r\\n                                </tr>\\r\\n\\r\\n                                <tr *ngFor=\\\"let lp of listasPreciosUsuario | async; index as indLp; last as isLast\\\">\\r\\n                                    <td>\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            [attr.id]=\\\"'lp-radio-' + indLp\\\"\\r\\n                                            type=\\\"radio\\\"\\r\\n                                            name=\\\"lista-radio\\\"\\r\\n                                            [value]=\\\"lp\\\"\\r\\n                                            (change)=\\\"\\r\\n                                                onChangeListaPrecio(lp)\\r\\n                                            \\\"/>\\r\\n                                    </td>\\r\\n                                    <td>{{ lp.codigoLista }}</td>\\r\\n                                    <td>{{ lp.condiciones }}</td>\\r\\n                                </tr>\\r\\n                            </table>\\r\\n\\r\\n                            <tabla-forma-pago\\r\\n                                class=\\\"fpago-tabla\\\"\\r\\n                                [dataTable]=\\\"dataTablaFormasPago\\\"\\r\\n                                [disableRest]=\\\"disableRest\\\"\\r\\n                                (onAddSelecFormaPago)=\\\"handleFormaPagoSelec($event)('add')\\\"\\r\\n                                (onRemoveSelecFormaPago)=\\\"handleFormaPagoSelec($event)('remove')\\\">\\r\\n                            </tabla-forma-pago>\\r\\n                        </div>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Cereal\\\" [disabled]=\\\"(comprobante && comprobante.tipo && comprobante.tipo.idCteTipo && comprobante.tipo.idCteTipo != 75) || !(esCanje)\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"canje-padding\\\">\\r\\n                            <div class=\\\"form-group inline-group\\\">\\r\\n                                <div class=\\\"each-input\\\"><label for=\\\"estadoSisa\\\">Estado Sisa:</label>\\r\\n                                    <select\\r\\n                                        required\\r\\n                                        class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                        name=\\\"estadoSisa\\\"\\r\\n                                        [(ngModel)]=\\\"estadoSisa\\\"\\r\\n                                        id=\\\"estadoSisa\\\">\\r\\n                                        <option *ngFor=\\\"let estado of estadosSisa\\\" [ngValue]=\\\"estado\\\">\\r\\n                                            {{estado.codEstado}} - {{estado.percepIva}}%\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group inline-group\\\">\\r\\n                                <div class=\\\"each-input\\\"><label for=\\\"cereal\\\">Cereal:</label>\\r\\n                                    <select\\r\\n                                        required\\r\\n                                        class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                        name=\\\"cereal\\\"\\r\\n                                        [(ngModel)]=\\\"cereal\\\"\\r\\n                                        id=\\\"cereal\\\">\\r\\n                                        <option *ngFor=\\\"let cereal of cereales\\\" [ngValue]=\\\"cereal.cerealCodigo.cerealCodigo\\\">\\r\\n                                            {{cereal.cerealCodigo.cerealCodigo}} - {{cereal.cerealCodigo.nombre}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <!--<div class=\\\"canje-container\\\">\\r\\n                            <div class=\\\"canje-content\\\">\\r\\n                                <div class=\\\"canje-item\\\">\\r\\n                                    <label for=\\\"tipoCompra\\\">Contrato:</label>\\r\\n                                    <select\\r\\n                                        name=\\\"clsisContra\\\"\\r\\n                                        [(ngModel)]=\\\"contrato\\\"\\r\\n                                        [disabled]=\\\"\\r\\n                                            (!tipoOperacion || tipoOperacion.canje !== true) ||\\r\\n                                            (comprobante && comprobante.tipo && comprobante.tipo.comprobante && !comprobante.tipo.comprobante.usaContrato)\\r\\n                                        \\\"\\r\\n                                        (ngModelChange)=\\\"onChangeContrato($event)\\\"\\r\\n                                        class=\\\"form-control without-padding\\\" id=\\\"selectContrato\\\">\\r\\n\\r\\n                                        <option [ngValue]=\\\"null\\\">Ninguno</option>\\r\\n                                        <option *ngFor=\\\"let con of contratos | async\\\" [ngValue]=\\\"con\\\">\\r\\n                                            {{ con.contratoNro }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n\\r\\n                                <div class=\\\"canje-item\\\">\\r\\n                                    <label for=\\\"tipoCompra\\\">Producto:</label>\\r\\n                                    <select\\r\\n                                        [disabled]=\\\"\\r\\n                                            (comprobante && comprobante.tipo && comprobante.tipo.comprobante && comprobante.tipo.comprobante.usaContrato)\\r\\n                                            &&\\r\\n                                            (\\r\\n                                                (!tipoOperacion || tipoOperacion.canje !== true)\\r\\n                                                ||\\r\\n                                                contrato\\r\\n                                            )\\r\\n                                        \\\"\\r\\n                                        [compareWith]=\\\"compareWithCanje\\\"\\r\\n                                        (ngModelChange)=\\\"onChangeProductoCanje($event)\\\"\\r\\n                                        name=\\\"clsisCnj\\\"\\r\\n                                        [(ngModel)]=\\\"sisCanje\\\"\\r\\n                                        class=\\\"form-control without-padding\\\" id=\\\"selectCanje\\\">\\r\\n                                        <option *ngFor=\\\"let canje of sisCanjes | async\\\" [ngValue]=\\\"canje\\\">\\r\\n                                            {{ canje.descripcion }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n                                <div    *ngIf=\\\"\\r\\n                                            comprobante && comprobante.tipo &&\\r\\n                                            comprobante.tipo.comprobante &&\\r\\n                                            comprobante.tipo.comprobante.usaRelacion\\r\\n                                        \\\"\\r\\n                                        class=\\\"canje-item\\\">\\r\\n                                    <label for=\\\"selectRelCanje\\\">Relaciones:</label>\\r\\n                                    <select\\r\\n                                        name=\\\"relCanjeName\\\"\\r\\n                                        [(ngModel)]=\\\"relacionCanje\\\"\\r\\n                                        class=\\\"form-control without-padding\\\" id=\\\"selectRelCanje\\\">\\r\\n\\r\\n                                        <option *ngFor=\\\"let rc of relacionesCanje | async\\\" [ngValue]=\\\"rc\\\">\\r\\n                                            {{ rc.descripcion }}, {{ rc.factor }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"canje-content\\\">\\r\\n                                <div class=\\\"canje-item\\\">\\r\\n\\r\\n                                    <label  class=\\\"precio-ref\\\">Precio Ref: </label>\\r\\n                                    <label>{{ sisCanje && sisCanje.precio ? utilsService.parseDecimal(sisCanje.precio) : ''}}</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"canje-item fecha-item\\\">\\r\\n\\r\\n                                    <label  for=\\\"fechaVto\\\">Fec Vto: </label>\\r\\n                                    <label>{{\\r\\n                                        contrato && contrato.idContratos ?\\r\\n                                        utilsService.prettyDate(contrato.fechaVto)\\r\\n                                        :\\r\\n                                        utilsService.dateToString(sisCanje.fechaVto)\\r\\n                                    }}</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"canje-item\\\">\\r\\n                                    <label  for=\\\"interes\\\">Interes:</label>\\r\\n                                    <label>{{sisCanje.interes}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>-->\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Comprobante Relacionado\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"cte-rel-container\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-5\\\">\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"cteRelTipo\\\">Cte:</label>\\r\\n\\r\\n                                        <select id=\\\"cteRelSelect\\\" name=\\\"clCompRelTi\\\" [(ngModel)]=\\\"comprobanteRelacionado.tipo\\\" class=\\\"form-control without-padding\\\"\\r\\n                                            [ngStyle]=\\\"{padding: '2px 8px 0px 8px'}\\\" id=\\\"cteRelTipo\\\">\\r\\n                                            <option *ngFor=\\\"let tipoComp of tiposComprobantesRel | async\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                                {{tipoComp.descripcion}}\\r\\n                                            </option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-5\\\">\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"cteNro\\\">Nro:</label>\\r\\n                                        <input autocomplete=\\\"off\\\" [attr.disabled]=\\\"comprobanteRelacionado.todosLosPendientes ? '' : null\\\"\\r\\n                                            (blur)=\\\"onBlurPtoVentaCteRel($event)\\\"\\r\\n                                            maxlength=\\\"4\\\"\\r\\n                                            [(ngModel)]=\\\"comprobanteRelacionado.puntoVenta\\\"\\r\\n                                            type=\\\"text\\\" class=\\\"form-control pre-numero-input\\\"\\r\\n                                            name=\\\"clPtoVentRel\\\"\\r\\n                                            id=\\\"puntoVenta\\\" placeholder=\\\"\\\">\\r\\n                                        <input autocomplete=\\\"off\\\" [attr.disabled]=\\\"comprobanteRelacionado.todosLosPendientes ? '' : null\\\"\\r\\n                                            (blur)=\\\"onBlurNumeradorCteRel($event)\\\"\\r\\n                                            maxlength=\\\"8\\\"\\r\\n                                            name=\\\"clNroRel\\\"\\r\\n                                            [(ngModel)]=\\\"comprobanteRelacionado.numero\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                            id=\\\"numero\\\" placeholder=\\\"\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <div class=\\\"checkbox-todoPendiente\\\">\\r\\n                                        <ba-checkbox\\r\\n                                            name=\\\"clTodsPends\\\"\\r\\n                                            [(ngModel)]=\\\"comprobanteRelacionado.todosLosPendientes\\\"\\r\\n                                            [label]=\\\"'Todos los pendientes'\\\"\\r\\n                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                                            [disabled]=\\\"\\r\\n                                                comprobante && comprobante.tipo &&\\r\\n                                                comprobante.tipo.comprobante && !comprobante.tipo.comprobante.relacionadosMultiples\\r\\n                                            \\\"\\r\\n                                            >\\r\\n                                        </ba-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <ba-checkbox\\r\\n                                            name=\\\"preservarPrevios\\\"\\r\\n                                            [(ngModel)]=\\\"preservarPrevios\\\"\\r\\n                                            [label]=\\\"'Preservar artículos previos'\\\"\\r\\n                                            [disabled]=\\\"\\r\\n                                            false\\r\\n                                            \\\"\\r\\n                                            >\\r\\n                                    </ba-checkbox>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-sm-3 btn-container\\\">\\r\\n                                    <button\\r\\n                                        [disabled]=\\\"\\r\\n                                            !comprobanteRelacionado.todosLosPendientes &&\\r\\n                                            !(\\r\\n                                                comprobanteRelacionado.puntoVenta &&\\r\\n                                                comprobanteRelacionado.numero\\r\\n                                            )\\r\\n                                            ||\\r\\n                                            !(\\r\\n                                                cliente &&\\r\\n                                                cliente.padronCodigo\\r\\n                                            )\\r\\n                                            || (comprobante && comprobante.tipo && comprobante.tipo.idCteTipo && comprobante.tipo.idCteTipo == 75 && formasPagoSeleccionadas && formasPagoSeleccionadas.length == 1 && formasPagoSeleccionadas[0].descripcion == 'Canje' && !cereal)\\r\\n                                        \\\"\\r\\n                                        (click)=\\\"onClickBuscarPendientes()\\\"\\r\\n                                        type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n                                        Buscar\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Pesificación\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"cte-rel-container\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-5\\\">\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"dolarPesificacion\\\">Cot. Dólar:</label>\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            [(ngModel)]=\\\"cotizacionDatos.cotizacion.cotizacion\\\"\\r\\n                                            type=\\\"number\\\" class=\\\"form-control pre-numero-input\\\"\\r\\n                                            name=\\\"dolarPesificacion\\\"\\r\\n                                            id=\\\"dolarPesificacion\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"pesificadoNro\\\">Nro:</label>\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            (blur)=\\\"onBlurPtoVentaCtePes($event)\\\"\\r\\n                                            maxlength=\\\"4\\\"\\r\\n                                            [(ngModel)]=\\\"comprobantePesificado.puntoVenta\\\"\\r\\n                                            type=\\\"text\\\" class=\\\"form-control pre-numero-input\\\"\\r\\n                                            name=\\\"clPtoVentPes\\\"\\r\\n                                            id=\\\"puntoVentaPesificado\\\" placeholder=\\\"\\\">\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            (blur)=\\\"onBlurNumeradorCtePes($event)\\\"\\r\\n                                            maxlength=\\\"8\\\"\\r\\n                                            name=\\\"clNroPes\\\"\\r\\n                                            [(ngModel)]=\\\"comprobantePesificado.numero\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n                                            id=\\\"numeroPesificado\\\" placeholder=\\\"\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                                <div class=\\\"col-sm-3 btn-container\\\">\\r\\n                                    <button\\r\\n                                        [disabled]=\\\"\\r\\n                                            !(\\r\\n                                                comprobantePesificado.puntoVenta &&\\r\\n                                                comprobantePesificado.numero\\r\\n                                            )\\r\\n                                        \\\"\\r\\n                                        (click)=\\\"onClickBuscarPesificado()\\\"\\r\\n                                        type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n                                        Pesificar\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n            </ngb-tabset>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <ngb-tabset [destroyOnHide]=false class=\\\"col-sm-12 tabs-ingreso\\\">\\r\\n                <ngb-tab title=\\\"Articulos\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-emision-rem  [data]=\\\"tablas.datos.productosPend\\\"\\r\\n                                            [columns]=\\\"tablas.columnas.columnasProductos\\\"\\r\\n                                            [remove]=\\\"onClickRemove\\\"\\r\\n                                            [edit]=\\\"onClickEdit('columnasProductos')\\\"\\r\\n                                            [confirmEdit]=\\\"onClickConfirmEdit('columnasProductos')\\\"\\r\\n                                            [onClickProductoLista]=\\\"onClickProductoLista\\\"\\r\\n                                            [enableAddItem]=\\\"verificoRelacionadoObligatorio(estadoRelacionadoObligatorio)\\\"\\r\\n                                            [subtotales]=\\\"tablas.datos.subtotalesProductos\\\"\\r\\n                                            [productosObservable]=\\\"productos\\\"\\r\\n                                            [comprobante]=\\\"comprobante\\\"\\r\\n                                            [checkPrecio]=\\\"false\\\"\\r\\n                                            [claveAutorizacion]=\\\"isAutorizada\\\">\\r\\n                        </tabla-emision-rem>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Trazable Lotes\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-emision-rem  [data]=\\\"tablas.datos.lotesTraza\\\"\\r\\n                                            [columns]=\\\"tablas.columnas.columnasTrazabilidad\\\"\\r\\n                                            [edit]=\\\"onClickEdit('columnasTrazabilidad')\\\"\\r\\n                                            [confirmEdit]=\\\"onClickConfirmEdit('columnasTrazabilidad')\\\">\\r\\n                        </tabla-emision-rem>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Forma Pago\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-emision-rem [data]=\\\"tablas.datos.detallesFormaPago\\\" [columns]=\\\"tablas.columnas.columnasDetallesFp\\\"\\r\\n                            [edit]=\\\"onClickEdit('columnasDetallesFp')\\\" [confirmEdit]=\\\"onClickConfirmEdit('columnasDetallesFp')\\\">\\r\\n                        </tabla-emision-rem>\\r\\n\\r\\n                        <div class=\\\"resto-pagar\\\">\\r\\n                            <label class=\\\"resto-pagar-content\\\">Resto Pagar: {{ calcRestoPagar() }}</label>\\r\\n                        </div>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Canje Referencia\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <table *ngIf=\\\"sisCanje\\\" class=\\\"table-canje-referencia\\\">\\r\\n                            <tr>\\r\\n                                <td>Articulo</td>\\r\\n                                <td style=\\\"text-align: right\\\">Cantidad</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{ sisCanje.descripcion }}</td>\\r\\n                                <td style=\\\"text-align: right\\\">{{\\r\\n                                    getCantidadCanjeReferencia()\\r\\n                                }}</td>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n\\r\\n                <ngb-tab title=\\\"\\\">\\r\\n                    <ng-template ngbTabTitle>\\r\\n                        <div>Subtotales</div>\\r\\n                    </ng-template>\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <div *ngIf=\\\"comprobante.tipo && comprobante.tipo.comprobante.idSisComprobantes === 6\\\" class=\\\"row factura-filters\\\">\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                                <div class=\\\"form-group inline-group\\\">\\r\\n                                    <label for=\\\"cteTipo\\\">Cte:</label>\\r\\n                                    <select [compareWith]=\\\"utilsService.dropdownCompareWith\\\" required name=\\\"clFactTip\\\" [(ngModel)]=\\\"factura.tipo\\\" class=\\\"form-control without-padding\\\" [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\"\\r\\n                                        id=\\\"cteTipo\\\">\\r\\n                                        <option *ngFor=\\\"let tipoComp of tiposComprobantesFactura | async\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                            {{tipoComp.descCorta}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"factura && factura.tipo && factura.tipo.letrasCodigos\\\" class=\\\"col-sm-1\\\">\\r\\n                                <div class=\\\"form-group inline-group\\\">\\r\\n                                    <select required name=\\\"clFactLetra\\\" [(ngModel)]=\\\"factura.letraCodigo\\\" class=\\\"form-control\\\" id=\\\"cteTipoFactura\\\">\\r\\n                                        <option *ngFor=\\\"let lcf of factura.tipo.letrasCodigos\\\" [ngValue]=\\\"lcf\\\">\\r\\n                                            {{ lcf.letra.letra }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                                <div *ngIf=\\\"!(factura.tipo && factura.tipo.numerador)\\\" class=\\\"form-group inline-group\\\">\\r\\n                                    <label for=\\\"cteNro\\\">Nro:</label>\\r\\n                                    <select required disabled id=\\\"selectPtoVentaNumFac\\\" class=\\\"form-control\\\" [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\" name=\\\"clCompNro\\\">\\r\\n                                        <option [ngValue]=\\\"null\\\">\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n                                <div *ngIf=\\\"factura.tipo && factura.tipo.numerador\\\" class=\\\"form-group inline-group\\\">\\r\\n                                    <label for=\\\"selectPtoVentaNumFac\\\">Nro:</label>\\r\\n\\r\\n                                    <select required id=\\\"selectPtoVentaNumFac\\\" class=\\\"form-control\\\" [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\"\\r\\n                                        name=\\\"factNro\\\" [(ngModel)]=\\\"factura.numerador\\\">\\r\\n                                        <option *ngFor=\\\"let upNum of factura.tipo.numerador\\\" [ngValue]=\\\"upNum\\\">\\r\\n                                            {{\\r\\n                                            upNum.ptoVenta.ptoVenta.toString().padStart(4, '0')\\r\\n                                            }} - {{\\r\\n                                            upNum.ptoVenta.ptoVenta.toString().padStart(8, '0')\\r\\n                                            }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                                <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                                    <label for=\\\"fechaComprobante\\\">Fecha Contable</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            (blur)=\\\"factura.fechaComprobante = utilsService.stringToDateLikePicker(factura.fechaComprobante)\\\"\\r\\n                                            (keyup.enter)=\\\"onCalculateFecha($event)('fechaContable')('factura')\\\" class=\\\"form-control\\\"\\r\\n                                            placeholder=\\\"dd/mm/aaaa\\\" name=\\\"dp3\\\" [(ngModel)]=\\\"factura.fechaComprobante\\\"\\r\\n                                            ngbDatepicker\\r\\n                                            #dComp=\\\"ngbDatepicker\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp.toggle()\\\" type=\\\"button\\\"\\r\\n                                                style=\\\"height: 100%;\\\">\\r\\n                                                <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                                <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                                    <label for=\\\"fechaVto\\\">Fecha Vto</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            (blur)=\\\"factura.fechaVto = utilsService.stringToDateLikePicker(factura.fechaVto)\\\"\\r\\n                                            (keyup.enter)=\\\"onCalculateFecha($event)('fechaVto')('factura')\\\"\\r\\n                                            id=\\\"fechaVtoFactura\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/aaaa\\\" name=\\\"dp4\\\"\\r\\n                                            [(ngModel)]=\\\"factura.fechaVto\\\" ngbDatepicker #dVto=\\\"ngbDatepicker\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dVto.toggle()\\\" type=\\\"button\\\"\\r\\n                                                style=\\\"height: 100%;\\\">\\r\\n                                                <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"subtotales-container\\\">\\r\\n                            <!-- <div class=\\\"subtotales-titulo\\\">\\r\\n                                <p>Subtotales</p>\\r\\n                            </div> -->\\r\\n\\r\\n                            <div class=\\\"subtotales-content\\\">\\r\\n                                <tabla-emision-rem\\r\\n                                    [data]=\\\"tablas.datos.modelosFactura\\\"\\r\\n                                    [columns]=\\\"tablas.columnas.columnasFactura\\\"\\r\\n                                    [edit]=\\\"onClickEdit('columnasFactura')\\\"\\r\\n                                    [confirmEdit]=\\\"onClickConfirmEdit('columnasFactura')\\\"\\r\\n                                    [comprobante]=\\\"comprobante\\\"\\r\\n                                    [tablaSubtotales]=\\\"true\\\"\\r\\n                                    >\\r\\n                                </tabla-emision-rem>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Canje cereales\\\"\\r\\n                [disabled]=\\\"\\r\\n                        !(comprobante && comprobante.tipo && comprobante.tipo.idCteTipo && comprobante.tipo.idCteTipo == 75 && esCanje)\\r\\n                    \\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <div class=\\\"each-input check\\\">\\r\\n                                <input [disabled]=\\\"condicionesConfirmadas\\\" class=\\\"align-check\\\" name=\\\"diferidoVto\\\" [(ngModel)]=\\\"diferidoVto\\\" type=\\\"checkbox\\\">Diferir total del comprobante al vencimiento\\r\\n                            </div>\\r\\n                            <!--<div class=\\\"each-input\\\"><label for=\\\"cereal\\\">Cereal:</label>\\r\\n                                <select\\r\\n                                    [disabled]=\\\"condicionesConfirmadas\\\"\\r\\n                                    required\\r\\n                                    class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                    name=\\\"cereal\\\"\\r\\n                                    [(ngModel)]=\\\"cereal\\\"\\r\\n                                    id=\\\"cereal\\\">\\r\\n                                    <option *ngFor=\\\"let cereal of cereales\\\" [ngValue]=\\\"cereal.cerealCodigo.cerealCodigo\\\">\\r\\n                                        {{cereal.cerealCodigo.cerealCodigo}} - {{cereal.cerealCodigo.nombre}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>-->\\r\\n                            <div class=\\\"col-sm-12 btn-container-2\\\">\\r\\n                                <button\\r\\n                                        name=\\\"confirmaCondiciones\\\"\\r\\n                                        [disabled]=\\\"condicionesConfirmadas\\\"\\r\\n                                        (click)=\\\"onClickConfirmCondiciones()\\\"\\r\\n                                        class=\\\"btn btn-primary btn-ingreso-from btn-space\\\"\\r\\n                                        >\\r\\n                                    Confirmar\\r\\n                                </button>\\r\\n\\r\\n                                <button [disabled]=\\\"!condicionesConfirmadas\\\" (click)=\\\"onClickCancelarCondiciones()\\\" class=\\\"btn btn-primary btn-space btn-ingreso-from\\\">\\r\\n                                    Cancelar\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Recargo Canje\\\" [disabled]=\\\"\\r\\n                !(comprobante && comprobante.tipo && comprobante.tipo.idCteTipo && comprobante.tipo.idCteTipo == 75 && esCanje)\\r\\n            \\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-emision-rem  [data]=\\\"tablas.datos.productosPend\\\"\\r\\n                                            [columns]=\\\"tablas.columnas.columnasRecargo\\\"\\r\\n                                            [onClickProductoLista]=\\\"onClickProductoLista\\\"\\r\\n                                            [subtotales]=\\\"tablas.datos.subtotalesProductos\\\"\\r\\n                                            [productosObservable]=\\\"productos\\\"\\r\\n                                            [comprobante]=\\\"comprobante\\\">\\r\\n                        </tabla-emision-rem>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Comprobante Autorizado\\\"\\r\\n                [disabled]=\\\"\\r\\n                        !(\\r\\n                        comprobante &&\\r\\n                        comprobante.tipo &&\\r\\n                        (comprobante.tipo.idCteTipo == 77\\r\\n                         || comprobante.tipo.idCteTipo == 76))\\r\\n                    \\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <div class=\\\"each-input same-line\\\">\\r\\n                                <div>Tipo de comprobante: </div>\\r\\n                                <select\\r\\n                                    [disabled]=\\\"relacionadoConfirmado\\\"\\r\\n                                    required\\r\\n                                    class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                    name=\\\"codigoAfipRelacionado\\\"\\r\\n                                    [(ngModel)]=\\\"codigoAfipRelacionado\\\"\\r\\n                                    id=\\\"codigoAfipRelacionado\\\">\\r\\n                                    <option *ngFor=\\\"let cbte of cbtesAfip\\\" [ngValue]=\\\"cbte.codigoAfip\\\">\\r\\n                                        {{cbte.codigoAfip}} - {{cbte.descripcion}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"each-input same-line\\\">\\r\\n                                <div>Número del comprobante autorizado:</div>\\r\\n\\r\\n                                <input [disabled]=\\\"relacionadoConfirmado\\\" class=\\\"form-control max-length-half\\\" name=\\\"ptoVentaAfipRelacionado\\\" [(ngModel)]=\\\"ptoVentaAfipRelacionado\\\" type=\\\"number\\\">\\r\\n                                <input [disabled]=\\\"relacionadoConfirmado\\\" class=\\\"form-control max-length\\\" name=\\\"numeroComprobanteAfipRelacionado\\\" [(ngModel)]=\\\"numeroComprobanteAfipRelacionado\\\" type=\\\"number\\\">\\r\\n                            </div>\\r\\n                            <!--<div class=\\\"each-input\\\"><label for=\\\"cereal\\\">Cereal:</label>\\r\\n                                <select\\r\\n                                    [disabled]=\\\"condicionesConfirmadas\\\"\\r\\n                                    required\\r\\n                                    class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                    name=\\\"cereal\\\"\\r\\n                                    [(ngModel)]=\\\"cereal\\\"\\r\\n                                    id=\\\"cereal\\\">\\r\\n                                    <option *ngFor=\\\"let cereal of cereales\\\" [ngValue]=\\\"cereal.cerealCodigo.cerealCodigo\\\">\\r\\n                                        {{cereal.cerealCodigo.cerealCodigo}} - {{cereal.cerealCodigo.nombre}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>-->\\r\\n                            <div class=\\\"col-sm-12 btn-container-2\\\">\\r\\n                                <button\\r\\n                                        name=\\\"relacionadoConfirmado\\\"\\r\\n                                        [disabled]=\\\"relacionadoConfirmado\\\"\\r\\n                                        (click)=\\\"onClickConfirmRelacionado()\\\"\\r\\n                                        class=\\\"btn btn-primary btn-ingreso-from btn-space\\\"\\r\\n                                        >\\r\\n                                    Confirmar\\r\\n                                </button>\\r\\n\\r\\n                                <button [disabled]=\\\"!relacionadoConfirmado\\\" (click)=\\\"onClickCancelarRelacionado()\\\" class=\\\"btn btn-primary btn-space btn-ingreso-from\\\">\\r\\n                                    Cancelar\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n\\r\\n                </ngb-tab>\\r\\n\\r\\n\\r\\n            </ngb-tabset>\\r\\n\\r\\n            <custom-card *ngIf=\\\"statusPreciosCotas || statusPorcentajeCotas  \\\"  class=\\\"col-sm-12 card-observaciones card-flex-column-reverse\\\" title=\\\"Validaciones\\\">\\r\\n\\r\\n                <div *ngIf=\\\"statusPreciosCotas\\\"  class=\\\"col-sm-12 tabs-ingreso;\\\" >\\r\\n                    <div class=\\\"statusCotas\\\"><li> {{statusPreciosCotas}}</li></div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"statusPorcentajeCotas\\\"  class=\\\"col-sm-12 tabs-ingreso;\\\" >\\r\\n                    <div class=\\\"statusCotas\\\"><li> {{statusPorcentajeCotas}}</li></div>\\r\\n                </div>\\r\\n            </custom-card>\\r\\n\\r\\n\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"row custom-card-container\\\">\\r\\n            <custom-card class=\\\"col-sm-5 card-observaciones card-flex-column-reverse\\\" title=\\\"Observaciones\\\">\\r\\n                <textarea name=\\\"clObser\\\" [(ngModel)]=\\\"comprobante.observaciones\\\" class=\\\"form-control text-area-observaciones\\\" id=\\\"observaciones\\\"></textarea>\\r\\n            </custom-card>\\r\\n\\r\\n            <div class=\\\"col-sm-5 card-total card-flex-column-reverse\\\">\\r\\n\\r\\n                <custom-card class=\\\" \\\" title=\\\"Totales\\\">\\r\\n                    <div class=\\\"card-total-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <div>\\r\\n                                    <label class=\\\"titulo-cotizacion\\\">Cotizacion Dolar: </label>\\r\\n                                    <label>{{cotizacionDatos.cotizacion.cotizacion}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <div id=\\\"fechaComprobante\\\">\\r\\n                                    <label class=\\\"titulo-cotizacion\\\">Fecha: </label>\\r\\n                                    <label>{{cotizacionDatos.cotizacion.fechaCotizacion | date:'dd/MM/yyyy'}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- <div class=\\\"row\\\">\\r\\n                            <div class=\\\"total-comprobante col-sm-6\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Comprobante: </label>\\r\\n                                <label>{{cotizacionDatos.total}}</label>\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Neto: </label>\\r\\n                                <label>{{utilsService.parseDecimal(cotizacionDatos.total)}}</label>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Cte: </label>\\r\\n                                <label>{{utilsService.parseDecimal(cotizacionDatos.total + sumatoriaSubtotales)}}</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </custom-card>\\r\\n            </div>\\r\\n<!-- [disabled]=\\\"disabledConfirmar()\\\" -->\\r\\n            <custom-card class=\\\"col-sm-2 card-flex-column-reverse\\\" title=\\\"\\\">\\r\\n                <div class=\\\"col-sm-12 btn-container\\\">\\r\\n                    <button [disabled]=\\\"disabledConfirmar()\\\" (click)=\\\"onClickConfirmar()\\\" class=\\\"btn btn-primary btn-ingreso-from\\\">\\r\\n                        Confirmar\\r\\n                    </button>\\r\\n                    <button (click)=\\\"onClickCancelar()\\\" class=\\\"btn btn-primary btn-ingreso-from\\\">\\r\\n                        Cancelar\\r\\n                    </button>\\r\\n                </div>\\r\\n            </custom-card>\\r\\n        </div>\\r\\n    </form>\\r\\n</ba-card>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"grabandoPorcentaje !== 0\\\" class=\\\"spinner-container-2\\\">\\r\\n    <p class=\\\"title\\\">\\r\\n        Guardando Comprobante\\r\\n    </p>\\r\\n    <p><ngb-progressbar [value]=\\\"grabandoPorcentaje\\\" type=\\\"info\\\"></ngb-progressbar></p>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"grabandoPorcentajeAfip !== 0\\\"  class=\\\"spinner-container-2\\\">\\r\\n    <p class=\\\"title\\\">\\r\\n        Autorizando comprobante en afip, aguarde un momento\\r\\n    </p>\\r\\n    <p><ngb-progressbar [value]=\\\"grabandoPorcentajeAfip\\\" type=\\\"info\\\"></ngb-progressbar></p>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.html\n// module id = ./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.html\n// module chunks = ventas.module","module.exports = \".emision-remitos {\\n  font-size: 11px; }\\n  .emision-remitos .col-sm-3 {\\n    -webkit-box-flex: 0px;\\n        -ms-flex: 0px;\\n            flex: 0px;\\n    min-width: 25%; }\\n  .emision-remitos .checkbox-todoPendiente {\\n    padding-left: 5%; }\\n  .emision-remitos .statusCotas {\\n    color: red;\\n    padding-bottom: 0px; }\\n  .emision-remitos .tabs-ingreso {\\n    padding: 1.5%; }\\n  .emision-remitos .tabs-ingreso .subtotales-container {\\n      padding: 0 5% 1%; }\\n  .emision-remitos .tabs-ingreso .subtotales-container .subtotales-titulo {\\n        font-size: 1rem; }\\n  .emision-remitos .tabs-ingreso .subtotales-container .subtotales-content {\\n        border-radius: 7px;\\n        background: #d4d4de; }\\n  .emision-remitos .tabs-ingreso .subtotales-container .subtotales-content td {\\n          border-top: 0px !important; }\\n  .emision-remitos .tabs-ingreso .resto-pagar {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: end;\\n          -ms-flex-pack: end;\\n              justify-content: flex-end; }\\n  .emision-remitos .tabs-ingreso .resto-pagar .resto-pagar-content {\\n        padding: 5px 3px 3px; }\\n  .emision-remitos .lista-filtrada-proveedores {\\n    position: absolute;\\n    z-index: 9999999;\\n    /* opacity: 0; */\\n    top: 81px;\\n    left: 77px; }\\n  .emision-remitos .tipo-compra-dropdown {\\n    padding: 0 2%;\\n    margin-bottom: 1px; }\\n  .emision-remitos .custom-card .custom-card-content .inline-group .without-padding {\\n    padding: 2px 8px 0px 8px !important; }\\n  .emision-remitos .custom-card .custom-card-content .observaciones {\\n    margin-bottom: 2px; }\\n  .emision-remitos .custom-card-container .card-observaciones .observaciones {\\n    padding: 1%; }\\n  .emision-remitos .custom-card-container .card-total .card-total-content {\\n    padding: 1.7%; }\\n  .emision-remitos .custom-card-container .card-total .deposito {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: end;\\n        -ms-flex-pack: end;\\n            justify-content: flex-end; }\\n  .emision-remitos .custom-card-container .card-total .deposito div {\\n      margin-bottom: 5px;\\n      width: 50%; }\\n  .emision-remitos .btn-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column; }\\n  .emision-remitos .btn-container .btn-ingreso-from {\\n      float: none;\\n      margin: 7% 0; }\\n  .emision-remitos .total-comprobante {\\n    padding-top: 2%; }\\n  .emision-remitos .titulo-cotizacion {\\n    font-weight: bold; }\\n  .emision-remitos .card-flex-column-reverse {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: reverse;\\n        -ms-flex-direction: column-reverse;\\n            flex-direction: column-reverse; }\\n  .emision-remitos .pre-numero-input {\\n    width: 30%;\\n    margin-right: 3px; }\\n  .emision-remitos .tabs-forma-pago .fpago-content {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: justify;\\n        -ms-flex-pack: justify;\\n            justify-content: space-between; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-tabla {\\n      width: 30%; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .txt-area-container {\\n      width: 48%; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .txt-area-container .text-area-forma-pago {\\n        height: 78px;\\n        color: #000;\\n        font-size: 0.8rem; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-lista-precio-tab {\\n      width: 70%; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-lista-precio-tab .table-header {\\n        background: #b8b8bd; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-lista-precio-tab tr:nth-child(even) {\\n        background: #cacad2; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-lista-precio-tab td {\\n        padding: 2px; }\\n  .emision-remitos .tabs-forma-pago .fpago-content .fpago-lista-precio-tab td .checkbox-td {\\n          display: block;\\n          margin: 2px; }\\n  .emision-remitos .tabs-forma-pago .canje-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    margin: 0% 1.4%;\\n    padding: 7px 7px 2px; }\\n  .emision-remitos .tabs-forma-pago .canje-container .canje-content {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: justify;\\n          -ms-flex-pack: justify;\\n              justify-content: space-between; }\\n  .emision-remitos .tabs-forma-pago .canje-container .canje-content .canje-item {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n        display: flex;\\n        width: 40%; }\\n  .emision-remitos .tabs-forma-pago .canje-container .canje-content .canje-item label {\\n          white-space: nowrap;\\n          margin: 5px 4px 4px;\\n          padding-top: 4px; }\\n  .emision-remitos .tabs-forma-pago .canje-container .canje-content .canje-item input, .emision-remitos .tabs-forma-pago .canje-container .canje-content .canje-item select {\\n          margin: 4px 0;\\n          max-height: 25px; }\\n  .emision-remitos .tabs-forma-pago .canje-container .canje-content .fecha-item input {\\n        margin: 0;\\n        max-height: 30px; }\\n  .emision-remitos .tabs-forma-pago .canje-container :first-child {\\n      margin-bottom: 2%; }\\n  .emision-remitos .tabs-forma-pago .cte-rel-container {\\n    padding: 1% 2% 2%; }\\n  .emision-remitos .input-vend {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    margin: 2px 14px 10px;\\n    font-size: 0.7rem; }\\n  .emision-remitos .input-vend > label {\\n      margin-right: 10px;\\n      margin: 0;\\n      padding: 5px 7px 1px 1px; }\\n  .emision-remitos .checkbox-vend {\\n    padding: 4px 2px 0px; }\\n  .emision-remitos .spinner-container {\\n    padding-top: 5.3px;\\n    right: 21px;\\n    position: absolute; }\\n  .emision-remitos .table-canje-referencia {\\n    width: 98%;\\n    margin: 9px 13px; }\\n  .emision-remitos .table-canje-referencia tr:first-child {\\n      background: #d4d4de;\\n      font-weight: bold;\\n      margin: 5px; }\\n  .emision-remitos .table-canje-referencia tr td {\\n      padding: 5px; }\\n  .container {\\n  padding-left: 1.5rem; }\\n  .each-input {\\n  margin-bottom: 5px; }\\n  .cond-cotiza {\\n  display: inline;\\n  width: 8rem !important; }\\n  .same-line {\\n  display: fleX;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: row;\\n          flex-direction: row;\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: start;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n  .max-length {\\n  width: 8rem; }\\n  .canje-padding {\\n  padding: 5px; }\\n  .modal-body {\\n  white-space: pre-line; }\\n  .modal-sm {\\n  max-width: 400px !important; }\\n  .copias-select {\\n  width: 10px !important;\\n  padding: 0px 8px; }\\n  .max-length-half {\\n  width: 4rem; }\\n  .check {\\n  display: block;\\n  padding-left: 15px;\\n  text-indent: -15px; }\\n  .align-check {\\n  width: 13px;\\n  height: 13px;\\n  padding: 0;\\n  margin: 0;\\n  vertical-align: bottom;\\n  position: relative;\\n  top: -1px;\\n  *overflow: hidden; }\\n  .without-padding {\\n  padding: 0; }\\n  .inline-flex {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex; }\\n  .btn-container-2 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -ms-flex-direction: row;\\n  flex-direction: row; }\\n  .btn-space {\\n  margin-left: 10px; }\\n  :host /deep/ .emision-remitos .tabs-ingreso .tab-content {\\n  padding: 2px 0px !important; }\\n  .spinner-container-2 {\\n  position: absolute;\\n  top: 40%;\\n  left: 23%;\\n  display: block;\\n  min-width: 47%;\\n  z-index: 9999;\\n  background: #d4d4dede;\\n  padding: 3%;\\n  border-radius: 12px; }\\n  .spinner-container-2 .title {\\n    text-align: center;\\n    font-size: 1rem;\\n    padding-bottom: 3px;\\n    font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif; }\\n  .alert-danger {\\n  background-color: #f44336;\\n  /* Red */ }\\n  .alert-success {\\n  background-color: #36f456; }\\n  .alert {\\n  padding: 20px;\\n  color: white;\\n  margin-bottom: 15px;\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.scss\n// module id = ./src/app/pages/main/ventas/emisionRemitos/emisionRemitos.scss\n// module chunks = ventas.module","export * from './emisionRemitos.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/emisionRemitos/index.ts","export * from './ventas.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/index.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ventas',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class Ventas {\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/ventas.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { routing } from './ventas.routing';\r\nimport { Ventas } from \".\";\r\nimport { NgbTabsetModule, NgbProgressbarModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SharedModule } from \"../SharedModule\";\r\nimport { RecursoService } from \"app/services/recursoService\";\r\nimport { AuthService } from \"../../../services/authService\";\r\nimport { UtilsService } from \"../../../services/utilsService\";\r\n\r\nimport { PendingChangesGuard } from \"app/guards/PendingChangesGuard\";\r\n\r\nimport { EmisionRemitos } from \"./emisionRemitos\";\r\nimport { EmisionRemitosService } from \"./emisionRemitos/emisionRemitosService\";\r\nimport { TablaEmisionRem } from \"app/pages/main/ventas/emisionRemitos/components/tablaEmisionRem/tablaEmisionRem.component\";\r\nimport { TablaFormaPago } from \"app/pages/main/ventas/emisionRemitos/components/tablaFormaPago\";\r\nimport { ContratosService } from \"app/services/contratosService\";\r\nimport { FilesService } from \"app/services/filesService\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        routing,\r\n        NgbTabsetModule,\r\n        SharedModule,\r\n        NgbProgressbarModule\r\n    ],\r\n    declarations: [\r\n        Ventas,\r\n        TablaEmisionRem,\r\n        TablaFormaPago,\r\n        EmisionRemitos\r\n    ],\r\n    providers: [\r\n        RecursoService,\r\n        AuthService,\r\n        UtilsService,\r\n        EmisionRemitosService,\r\n        ContratosService,\r\n        PendingChangesGuard,\r\n        FilesService\r\n    ],\r\n    exports: [\r\n        TablaEmisionRem,\r\n        TablaFormaPago\r\n    ]\r\n})\r\nexport class VentasModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/ventas.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { Ventas } from '.';\r\nimport { EmisionRemitos } from './emisionRemitos';\r\nimport { PendingChangesGuard } from \"app/guards/PendingChangesGuard\";\r\n\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: Ventas,\r\n        children: [\r\n            { path: 'emision-remito', component: EmisionRemitos, canDeactivate: [PendingChangesGuard] },\r\n        ]\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/ventas/ventas.routing.ts"],"sourceRoot":"webpack:///"}