{"version":3,"sources":["./src/app/models/tablaCompra.ts","./src/app/pages/main/compras/compras.component.ts","./src/app/pages/main/compras/compras.module.ts","./src/app/pages/main/compras/compras.routing.ts","./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/index.ts","./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.component.ts","./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.html","./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.scss","./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/index.ts","./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.component.ts","./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.html","./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.scss","./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.component.ts","./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.html","./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.scss","./src/app/pages/main/compras/comprobanteCompra/index.ts","./src/app/pages/main/compras/index.ts"],"names":[],"mappings":"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","file":"compras.module.chunk.js","sourcesContent":["import { ProductoPendiente } from \"app/models/productoPendiente\";\r\nimport { ModeloFactura } from \"app/models/modeloFactura\";\r\nimport { DetalleFormaPago } from \"app/models/detalleFormaPago\";\r\n\r\n// Modelo auxiliar para comprobanteCompra\r\nexport class TablaCompra {\r\n    columnas: {\r\n        columnasProductos: any[];\r\n        columnasTrazabilidad: any[];\r\n        columnasFactura: any[];\r\n        columnasDetallesFp: any[];\r\n    };\r\n    datos: {\r\n        productosPend: ProductoPendiente[];\r\n        modelosFactura: any[];\r\n        detallesFormaPago: DetalleFormaPago[]\r\n    };\r\n\r\n    constructor(tablaCompra?: {\r\n        columnas: {\r\n            columnasProductos: any[];\r\n            columnasTrazabilidad: any[];\r\n            columnasFactura: any[];\r\n            columnasDetallesFp: any[];\r\n        },\r\n        datos: {\r\n            productosPend: ProductoPendiente[];\r\n            modelosFactura: ModeloFactura[];\r\n            detallesFormaPago: DetalleFormaPago[]\r\n        }\r\n    }) {\r\n        if (tablaCompra) {\r\n            this.columnas = tablaCompra.columnas;\r\n            this.datos = tablaCompra.datos;\r\n        } else {\r\n            this.columnas = {\r\n                columnasProductos: [],\r\n                columnasTrazabilidad: [],\r\n                columnasFactura: [],\r\n                columnasDetallesFp: []\r\n            };\r\n            this.datos = {\r\n                productosPend: [],\r\n                modelosFactura: [],\r\n                detallesFormaPago: []\r\n            };\r\n        }\r\n        \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/tablaCompra.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'compras',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class Compras {\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/compras.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { routing } from './compras.routing';\r\nimport { Compras } from \".\";\r\nimport { NgbTabsetModule, NgbProgressbarModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { SharedModule } from \"../SharedModule\";\r\nimport { RecursoService } from \"app/services/recursoService\";\r\nimport { AuthService } from \"../../../services/authService\";\r\nimport { UtilsService } from \"../../../services/utilsService\";\r\nimport { TablaIngreso } from \"app/pages/main/compras/comprobanteCompra/components/tablaIngreso\";\r\nimport { ComprobanteCompra } from \"app/pages/main/compras/comprobanteCompra\";\r\nimport { ComprobanteCompraService } from \"app/pages/main/compras/comprobanteCompra/comprobanteCompraService\";\r\nimport { TablaFormaPagoComp } from \"app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp\";\r\nimport { EmisionRemitosService } from \"../ventas/emisionRemitos/emisionRemitosService\";\r\nimport { PendingChangesGuard } from \"app/guards/PendingChangesGuard\";\r\nimport { ComprobanteService } from \"app/services/comprobanteService\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        routing,\r\n        NgbTabsetModule,\r\n        NgbProgressbarModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        Compras,\r\n        ComprobanteCompra,\r\n        TablaIngreso,\r\n        TablaFormaPagoComp\r\n    ],\r\n    providers: [\r\n        RecursoService,\r\n        AuthService,\r\n        UtilsService,\r\n        ComprobanteCompraService,\r\n        EmisionRemitosService,\r\n        PendingChangesGuard,\r\n        ComprobanteService\r\n    ],\r\n    exports: [\r\n        TablaIngreso,\r\n        TablaFormaPagoComp\r\n    ]\r\n})\r\nexport class ComprasModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/compras.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { Compras } from '.';\r\nimport { ComprobanteCompra } from './comprobanteCompra';\r\nimport { PendingChangesGuard } from 'app/guards/PendingChangesGuard';\r\n\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: Compras,\r\n        children: [\r\n            { path: 'comprobante-compra', component: ComprobanteCompra, canDeactivate: [PendingChangesGuard] }\r\n        ]\r\n    }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/compras.routing.ts","export * from './tablaFormaPagoComp.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/index.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormaPago } from 'app/models/formaPago';\r\n\r\n@Component({\r\n    selector: 'tabla-forma-pago-comp',\r\n    templateUrl: './tablaFormaPagoComp.html',\r\n    styleUrls: ['./tablaFormaPagoComp.scss'],\r\n})\r\n    \r\nexport class TablaFormaPagoComp {\r\n    // Datos de la tabla\r\n    @Input() dataTable;\r\n    @Input() moneda;\r\n    // Eventos de cambio que atrapo en EmisionRemito\r\n    @Output() onAddSelecFormaPago = new EventEmitter<FormaPago>();\r\n    @Output() onRemoveSelecFormaPago = new EventEmitter<FormaPago>();\r\n\r\n    seleccionados: FormaPago[] = [];\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * Checkea si se puede seleccionar o no\r\n     */\r\n    checkIfSeleccionable = (fp: FormaPago) => \r\n        true \r\n        // this.seleccionados.some(fpSelec => fpSelec.listaPrecio.idListaPrecio !== fp.listaPrecio.idListaPrecio)\r\n\r\n    /**\r\n     * Evento change del checkbox\r\n     */\r\n    onChangeCheckbox = (e) => (fp: FormaPago) => {\r\n       \r\n        if (e && e.target) {\r\n            const estado = e.target.checked;\r\n\r\n            // Actualizo la lista de seleccioandos del componete emisionRemitos\r\n            estado ? \r\n                this.onAddSelecFormaPago.emit(fp) :\r\n                this.onRemoveSelecFormaPago.emit(fp);\r\n\r\n            // También actualizo la lista seleccionados de este componente (lo necesito para checkear si los checkbox son seleccionables o no)\r\n            estado ? \r\n                this.seleccionados.push(fp) :\r\n                this.seleccionados = this.seleccionados.filter(fpSelec => fpSelec.idFormaPago !== fp.idFormaPago);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focusea el input de buscar producto, si y solo si es el último checkbox el bluseado\r\n     */\r\n    onBlurCheckbox = (isLast) => \r\n        isLast && document.getElementById('addInput') ? \r\n            document.getElementById('addInput').focus() : null\r\n\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.component.ts","module.exports = \"<div class=\\\"tabla-forma-pago-comp\\\">\\r\\n    <table style=\\\"width:100%\\\">\\r\\n        <tr class=\\\"table-header\\\">\\r\\n            <th></th>\\r\\n            <th>F.Pago</th>\\r\\n            <th>Detalle</th>\\r\\n        </tr>\\r\\n    \\r\\n        <tr *ngFor=\\\"let fp of dataTable | async; index as indFp; last as isLast\\\">\\r\\n            <td>\\r\\n                <input \\r\\n                    (blur)=\\\"onBlurCheckbox(isLast)\\\" \\r\\n                    [attr.id]=\\\"'fp-check-' + indFp\\\" \\r\\n                    (change)=\\\"onChangeCheckbox($event)(fp)\\\" \\r\\n                    [attr.disabled]=\\\"moneda ? null : 'disabled'\\\"\\r\\n                    class=\\\"checkbox-td\\\" type=\\\"checkbox\\\"/>\\r\\n            </td>\\r\\n            <td>{{ fp.descripcion }}</td>\\r\\n            <td>{{ fp.descripcion }}</td>\\r\\n        </tr>\\r\\n    </table> \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.html\n// module id = ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.html\n// module chunks = compras.module","module.exports = \"/*Modificacion Dario*/\\n.tabla-forma-pago-comp {\\n  height: 112px;\\n  overflow: auto; }\\n.tabla-forma-pago-comp table .table-header {\\n    background: #b8b8bd; }\\n.tabla-forma-pago-comp table tr:nth-child(even) {\\n    background: #cacad2; }\\n.tabla-forma-pago-comp table td {\\n    padding: 2px; }\\n.tabla-forma-pago-comp table td .checkbox-td {\\n      display: block;\\n      margin: 2px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.scss\n// module id = ./src/app/pages/main/compras/comprobanteCompra/components/tablaFormaPagoComp/tablaFormaPagoComp.scss\n// module chunks = compras.module","export * from './tablaIngreso.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/index.ts","import { Component, Input } from \"@angular/core\";\r\nimport { UtilsService } from \"../../../../../../services/utilsService\";\r\nimport { ProductoPendiente } from \"../../../../../../models/productoPendiente\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { RecursoService } from \"../../../../../../services/recursoService\";\r\nimport { resourcesREST } from \"constantes/resoursesREST\";\r\n\r\nimport { PopupListaService } from \"../../../../../reusable/otros/popup-lista/popup-lista-service\";\r\nimport sisModulos from \"constantes/sisModulos\";\r\nimport sisTipoModelos from \"constantes/sisTipoModelos\";\r\nimport { ProductoReducido } from \"../../../../../../models/productoReducido\";\r\n\r\n@Component({\r\n    selector: \"tabla-ingreso\",\r\n    templateUrl: \"./tablaIngreso.html\",\r\n    styleUrls: [\"./tablaIngreso.scss\"],\r\n})\r\nexport class TablaIngreso {\r\n    showTooltip = false;\r\n    // Datos de mierda que me da paja sacar por miedo a romper todo\r\n    sortBy = \"nombre\";\r\n    filterQuery = \"\";\r\n    rowsOnPage = 10;\r\n    sortOrder = \"asc\";\r\n    // Fin datos de mierda\r\n\r\n    // Reusabilidad tabla\r\n    @Input() enableAddItem = false;\r\n\r\n    // Inputs\r\n    @Input() columns;\r\n    @Input() data;\r\n    @Input() edit;\r\n    @Input() add;\r\n    @Input() remove;\r\n    @Input() confirmEdit;\r\n\r\n    // Lo uso para habilitar/deshabilitar input de ingreso new prod\r\n    @Input() comprobante;\r\n\r\n    /////////// BUSQUEDA ///////////\r\n    textoBusqueda: string;\r\n    productosBusqueda: {\r\n        todos: ProductoReducido[];\r\n        filtrados: BehaviorSubject<ProductoReducido[]>;\r\n    } = { todos: [], filtrados: new BehaviorSubject([]) };\r\n\r\n    productoSeleccionado: ProductoReducido = new ProductoReducido();\r\n    // Inhdice del producto enfocado del popup\r\n    productoEnfocadoIndex: number = -1;\r\n\r\n    @Input() onClickProductoLista;\r\n    @Input() customsBlur = null;\r\n    @Input() customLoseFocus = null;\r\n\r\n    prodFocus = false;\r\n\r\n    // Indica si es o no es la tabla de subtotales\r\n    @Input() tablaSubtotales = false;\r\n\r\n    constructor(\r\n        public utilsService: UtilsService,\r\n        private recursoService: RecursoService,\r\n        private popupListaService: PopupListaService\r\n    ) {\r\n        recursoService\r\n            .getRecursoList(resourcesREST.productosReducidos)({\r\n                tipo: \"reducida\",\r\n            })\r\n            .subscribe((prods) => {\r\n                // debugger;\r\n                this.productosBusqueda.todos = prods;\r\n                this.productosBusqueda.filtrados.next(prods);\r\n            });\r\n    }\r\n    \r\n\r\n    toInt(num: string) {\r\n        return +num;\r\n    }\r\n\r\n    sortByWordLength = (a: any) => {\r\n        return a.city.length;\r\n    };\r\n\r\n    /**\r\n     * Obtiene el style a partir de una columna\r\n     * @param col\r\n     */\r\n    getStyleFromCol(col) {\r\n        let styles = {\r\n            width: col.ancho,\r\n            \"border-top\": \"none\",\r\n        };\r\n        //console.log(col.decimal);\r\n        return styles;\r\n    }\r\n\r\n    /**\r\n     * Este método checkea el tipo de dato de la key y la parsea de acuerdo a el. Por ejemplo, si es boolean retrona 'si' en 'true' y 'no' en 'false'\r\n     * @param key\r\n     */\r\n    parseKey(key) {\r\n        const tipoDato: any = typeof key;\r\n\r\n        // debugger;\r\n\r\n        if (tipoDato === \"boolean\") {\r\n            return key ? \"Si\" : \"No\";\r\n        }\r\n\r\n        if (tipoDato === \"object\") {\r\n            // Me fijo el nombre de la clase del objeto\r\n            if (\r\n                key &&\r\n                (key.constructor.name === \"DateLikePicker\" ||\r\n                    (key.year && key.month && key.day))\r\n            ) {\r\n                return `${key.day < 10 ? \"0\" : \"\"}${key.day}/${\r\n                    key.month < 10 ? \"0\" : \"\"\r\n                }${key.month}/${key.year}`;\r\n            }\r\n        }\r\n\r\n        if (tipoDato === \"number\") {\r\n            return key.toLocaleString();\r\n        }\r\n\r\n        return key;\r\n    }\r\n\r\n    /**\r\n     * Evento change del input de codProducto\r\n     */\r\n    onChangeInputItemAdd = (textoBuscado) => {\r\n        if (textoBuscado) {\r\n            this.productosBusqueda.filtrados.next(\r\n                this.productosBusqueda.todos.filter(\r\n                    (prodPend) =>\r\n                        prodPend.codProducto\r\n                            .toString()\r\n                            .includes(textoBuscado.toString().toLowerCase()) ||\r\n                        prodPend.descripcion\r\n                            .toString()\r\n                            .toLowerCase()\r\n                            .includes(textoBuscado.toString().toLowerCase())\r\n                    // prodPend => prodPend.producto.codProducto.toString().includes(\r\n                    //     textoBuscado.toString().toLowerCase()\r\n                    // ) ||\r\n                    // prodPend.producto.descripcion.toString().toLowerCase().includes(\r\n                    //     textoBuscado.toString().toLowerCase()\r\n                    // )\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Busca el producto y limpia la lista\r\n     */\r\n    onBlurInputItemAdd = (eventInput: any) => {\r\n        // Busco si ingresó un cód producto\r\n        const codIngre =\r\n            eventInput && eventInput.currentTarget\r\n                ? eventInput.currentTarget.value\r\n                : null;\r\n\r\n        // Si lo ingresó, lo busco en la lista de filtrados\r\n        if (codIngre) {\r\n            // Busco el producto en la lista\r\n            const prodBuscado = this.productosBusqueda.filtrados\r\n                .getValue()\r\n                .find((p: ProductoReducido) => p.codProducto === codIngre);\r\n\r\n            // Si lo encontré, lo selecciono. Sinó, no.\r\n            prodBuscado ? this.onClickProductoListaLocal(prodBuscado) : null;\r\n        }\r\n\r\n        setTimeout(() => this.productosBusqueda.filtrados.next([]), 100);\r\n\r\n        // También reseteo el indice de busqueda\r\n        this.productoEnfocadoIndex = -1;\r\n        this.prodFocus = false;\r\n    };\r\n\r\n    /**\r\n     * Retorna el offset del input add\r\n     */\r\n    getOffsetOfAddInput = () => {\r\n        return this.utilsService.getOffset(document.getElementById(\"addInput\"));\r\n    };\r\n\r\n    /**\r\n     * Setea la fecha de compra calculandola dado un string en formato 'ddmm', parseando a 'dd/mm/aaaa'\r\n     */\r\n    onCalculateFecha = (e) => (key) => (subkey) => (item) => {\r\n        // if (!item[key][subkey] || typeof item[key][subkey] !== 'string') {\r\n        //     item[key][subkey] = '';\r\n        //     return;\r\n        // }\r\n        if (!item[key][subkey]) {\r\n            return;\r\n        }\r\n\r\n        item[key][subkey] = this.utilsService.stringToDateLikePicker(\r\n            item[key][subkey]\r\n        );\r\n\r\n        // Hago focus en el prox input\r\n        subkey === \"fechaElab\"\r\n            ? document.getElementById(\"fecha-fechaVto\").focus()\r\n            : null;\r\n\r\n        // Confirmo edicion despues de hacer blur en el último campo\r\n        subkey === \"fechaVto\" ? this.confirmEdit(item) : null;\r\n    };\r\n\r\n    /**\r\n     * Evento de cuando se apreta felcha arriba o feclah abajo en input de busca producto\r\n     */\r\n    keyPressInputTexto = (e: any) => (upOrDown) => {\r\n        e.preventDefault();\r\n        // Hace todo el laburo de la lista popup y retorna el nuevo indice seleccionado\r\n        this.productoEnfocadoIndex =\r\n            this.popupListaService.keyPressInputForPopup(upOrDown)(\r\n                this.productosBusqueda.filtrados.value\r\n            )(this.productoEnfocadoIndex);\r\n    };\r\n\r\n    /**\r\n     * Evento on enter en el input de buscar productos\r\n     */\r\n    onEnterInputBuscProd = (e: any) => {\r\n        e.preventDefault();\r\n        this.productosBusqueda.filtrados.subscribe((prodsLista) => {\r\n            // Busco el producto\r\n            const prodSelect =\r\n                prodsLista && prodsLista.length\r\n                    ? prodsLista[this.productoEnfocadoIndex]\r\n                    : null;\r\n            // Lo selecciono\r\n            prodSelect ? this.onClickProductoListaLocal(prodSelect) : null;\r\n            // Reseteo el indice del prod buscado\r\n            this.productoEnfocadoIndex = -1;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Funcionalidad extra en onclickproductolsita\r\n     */\r\n    onClickProductoListaLocal = (prodSelect) => {\r\n        this.textoBusqueda = \"\";\r\n        this.onClickProductoLista(prodSelect);\r\n    };\r\n\r\n    /**\r\n     * Retorna la clase del input que se va a poner en edicio y enfocar primero, cuando se apreta en editar\r\n     */\r\n    getClassInputEditable = (item) => (col) => {\r\n        if (item) {\r\n            const idItem = item.cuentaContable\r\n                ? item.cuentaContable\r\n                : item.idFormaPagoDet\r\n                ? item.idFormaPagoDet\r\n                : // item.producto && item.producto.idProductos ? `${item.producto.idProductos}-${item.numero}` : '000'\r\n                item.producto && item.idFactDetalle\r\n                ? `${item.idFactDetalle}-${item.numero}`\r\n                : \"000\";\r\n\r\n            return `form-control edit-input${\r\n                col.editarFocus ? ` editar-focus-${idItem}` : \"\"\r\n            }`;\r\n        }\r\n    };\r\n\r\n    // Checkea si pongo el 'tick' para finalizar la edicion.\r\n    checkIfShowTick(item) {\r\n        if (this.columns) {\r\n            return this.columns.some((col) => {\r\n                return (\r\n                    col.enEdicion &&\r\n                    ((item.cuentaContable &&\r\n                        col.enEdicion === item.cuentaContable) ||\r\n                        (item.idFormaPagoDet &&\r\n                            col.enEdicion === item.idFormaPagoDet))\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    // Cheackea si esta en edicion\r\n    checkIfEditOn = (item) => (col) =>\r\n        col.enEdicion &&\r\n        // (item.producto && item.producto.idProductos && col.enEdicion === item.producto.idProductos) ||\r\n        // (item.producto && item.producto.idProductos && col.enEdicion === `${item.producto.idProductos}-${item.numero}`) ||\r\n        ((item.producto &&\r\n            item.idFactDetalle &&\r\n            col.enEdicion === `${item.idFactDetalle}-${item.numero}`) ||\r\n            (item.cuentaContable && col.enEdicion === item.cuentaContable) ||\r\n            (item.idFormaPagoDet && col.enEdicion === item.idFormaPagoDet));\r\n\r\n    getPositionTooltip = () => {\r\n        const fatherPosition = this.getOffsetOfAddInput();\r\n\r\n        return {\r\n            top: fatherPosition.top - 2 + \"px\",\r\n            left: fatherPosition.left + 115 + \"px\",\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Retorna la function blur de una columna dada (si esta tiene custom blur)\r\n     */\r\n    // getFunctionBlurOfColumn = (col) => {\r\n    //     if (col && col.customBlur) {\r\n    //         return this.customsBlur[col.customBlur];\r\n    //     }\r\n    // }\r\n\r\n    force2decimals = (item) => (col) =>\r\n        item && col && col.decimal\r\n            ? (item[col.key] = parseFloat(item[col.key]).toFixed(2))\r\n            : item[col.key];\r\n\r\n    public modelChanged(event) {\r\n        event.value = parseFloat(event.value).toFixed(2);\r\n    }\r\n    // agregar un elemento a la lista duplicando el registro al que se hizo click y creando una copia \r\n    // rescribiendo el indice \r\n    agregarElemento(item, idMaximo) {\r\n        debugger\r\n        let xMax = Math.max.apply(null, this.data.map(function(o) { return o.item; }));\r\n        let temp = JSON.parse(JSON.stringify(item))\r\n        temp.item = xMax+1\r\n        this.data.push(JSON.parse(JSON.stringify(temp)));\r\n    }\r\n\r\n    borrarItem(item, index) {\r\n        (this.data as Array<any>).splice(index, 1);\r\n    }\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.component.ts","module.exports = \"<!-- [mfRowsOnPage]=\\\"rowsOnPage\\\" -->\\r\\n<div class=\\\"panel panel-default tabla-ingreso\\\">\\r\\n    <table class=\\\"table table-striped\\\" [mfData]=\\\"data | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\"  [(mfSortBy)]=\\\"sortBy\\\" [(mfSortOrder)]=\\\"sortOrder\\\">\\r\\n        <thead class=\\\"head-table\\\">\\r\\n            <tr>\\r\\n                <th *ngIf=\\\"edit || remove\\\" style=\\\"width: 10%; border-top: none;\\\"></th>\\r\\n                <!-- Recorro y muestro las columnas recibidas en el input -->\\r\\n                <th class=\\\"table-column\\\" *ngFor=\\\"let col of columns\\\" [ngStyle]=\\\"getStyleFromCol(col)\\\" [ngClass]=\\\"col.customClass ? col.customClass : 'text-align: left;'\\\">\\r\\n                    <mfDefaultSorter by=\\\"name\\\">{{col.nombre}}</mfDefaultSorter>\\r\\n                </th>\\r\\n            </tr>\\r\\n\\r\\n        </thead>\\r\\n\\r\\n        \\r\\n                    \\r\\n                   \\r\\n\\r\\n        <tbody #tbodyref>\\r\\n            <tr *ngFor=\\\"let item of mf.data; let i = index\\\">\\r\\n                <!-- BOTONES EDITAR Y BORRAR -->\\r\\n                <td *ngIf=\\\" edit || remove\\\" class=\\\"btn-container\\\">\\r\\n                    <div  *ngIf=\\\"add && item.comprobante === 'OC'\\\" (click)=\\\"agregarElemento(item, mf.data.length)\\\" class=\\\"btn-accion btn-add\\\">\\r\\n                        <i class=\\\"fa fa-plus-square\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"edit\\\" (click)=\\\"edit(item)\\\" class=\\\"btn-accion btn-editar\\\">\\r\\n                        <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"remove\\\" (click)=\\\"borrarItem(item,i)\\\" class=\\\"btn-accion btn-remover\\\">\\r\\n                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"checkIfShowTick(item)\\\" (click)=\\\"confirmEdit(item)\\\" class=\\\"btn-accion btn-remover\\\">\\r\\n                        <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </div>\\r\\n                   \\r\\n                    \\r\\n                </td>\\r\\n                <!-- FIN BOTONES EDITAR Y BORRAR -->\\r\\n\\r\\n                <!-- ACA MUESTRA LA DATA -->\\r\\n                <td *ngFor=\\\"let col of columns\\\" [ngClass]=\\\"col.customClass ? col.customClass : 'text-align: left;'\\\">\\r\\n                    <!-- Si SI tiene subkey -->\\r\\n                    <div *ngIf=\\\"col.subkey\\\">\\r\\n                        <!-- Si NO esta en edicion -->\\r\\n                        <div *ngIf=\\\"!checkIfEditOn(item)(col)\\\">\\r\\n\\r\\n                            \\r\\n                            <div *ngIf=\\\"col.decimal\\\">\\r\\n                                {{utilsService.parseDecimal(item[col.key][col.subkey])}}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"!col.decimal\\\">\\r\\n                                {{parseKey(item[col.key][col.subkey])}}\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                        <!-- Si SI está en edicion -->\\r\\n                        <div *ngIf=\\\"checkIfEditOn(item)(col)\\\">\\r\\n                            <input *ngIf=\\\" (col.nombre !== 'trazable' && col.key !== 'trazabilidad') ||\\r\\n                                            (col.key === 'trazabilidad' &&   col.subkey !== 'fechaElab' && col.subkey !== 'fechaVto' )\\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key][col.subkey]\\\"\\r\\n                                    style=\\\"margin: 4px 6px;\\\"\\r\\n                                    type=\\\"text\\\"\\r\\n                                    (blur)=\\\"col && col.customBlur ? customsBlur[col.customBlur](item, $event) : null\\\"\\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\"\\r\\n                                    id=\\\"inputSubKey\\\"\\r\\n                                    placeholder=\\\"\\\">\\r\\n\\r\\n                            <div *ngIf=\\\"col.key === 'trazabilidad' && (col.subkey === 'fechaElab' || col.subkey === 'fechaVto')\\\" class=\\\"datepicker-datelikepicker\\\">\\r\\n                                <input [attr.id]=\\\"'fecha-' + col.subkey\\\" (blur)=\\\"onCalculateFecha($event)(col.key)(col.subkey)(item)\\\" (keyup.enter)=\\\"onCalculateFecha($event)(col.key)(col.subkey)(item)\\\" class=\\\"form-control\\\" placeholder=\\\"dd-mm-yyyy\\\" name=\\\"dp\\\" [(ngModel)]=\\\"item[col.key][col.subkey]\\\" ngbDatepicker #dComp=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"col.nombre === 'item' && !col.decimal\\\">\\r\\n                         {{ item.item }}\\r\\n                    </div>\\r\\n                   \\r\\n                    <!-- Si NO tiene subkey -->\\r\\n                    <div *ngIf=\\\"!col.subkey\\\">\\r\\n\\r\\n                        <!-- Si NO está en edicion -->\\r\\n                        <div *ngIf=\\\"!checkIfEditOn(item)(col)\\\">\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.nombre !== 'imputacion' && \\r\\n                                !col.decimal && \\r\\n                                !(\\r\\n                                    col.elementoFinalBlur && \\r\\n                                    comprobante && comprobante.tipo &&\\r\\n                                    comprobante.tipo.comprobante && \\r\\n                                    (\\r\\n                                        (\\r\\n                                            !tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeNeto\\r\\n                                        ) ||\\r\\n                                        (\\r\\n                                            tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeIva\\r\\n                                        )\\r\\n\\r\\n                                    )\\r\\n                                )\\r\\n                                \\\">\\r\\n                                {{parseKey(item[col.key])}}\\r\\n                            </div>\\r\\n\\r\\n                            <!-- <div    style=\\\"background: #ff000061;\\\" -->\\r\\n                            <div    style=\\\"color: #c10000;\\\"\\r\\n                                    *ngIf=\\\"\\r\\n                                        col.elementoFinalBlur && \\r\\n                                        comprobante && comprobante.tipo &&\\r\\n                                        comprobante.tipo.comprobante && \\r\\n                                        (\\r\\n                                            (\\r\\n                                                !tablaSubtotales &&\\r\\n                                                !comprobante.tipo.comprobante.incluyeNeto\\r\\n                                            ) ||\\r\\n                                            (\\r\\n                                                tablaSubtotales &&\\r\\n                                                !comprobante.tipo.comprobante.incluyeIva\\r\\n                                            )\\r\\n\\r\\n                                        )\\r\\n                                    \\\">\\r\\n                                {{ utilsService.parseDecimal(item[col.key]) }}\\r\\n                            </div>\\r\\n\\r\\n                            <!-- CASOS PARTICULARES -->\\r\\n                            <div *ngIf=\\\"col.nombre === 'imputacion' && !col.decimal\\\">\\r\\n                                {{ item[col.key] && item[col.key].seleccionada ? item[col.key].seleccionada.descripcion : ''}}\\r\\n                            </div>\\r\\n                           \\r\\n                            \\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && col.key !== 'precio' && \\r\\n                                !(\\r\\n                                    col.elementoFinalBlur && \\r\\n                                    comprobante && comprobante.tipo &&\\r\\n                                    comprobante.tipo.comprobante && \\r\\n                                    (\\r\\n                                        (\\r\\n                                            !tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeNeto\\r\\n                                        ) ||\\r\\n                                        (\\r\\n                                            tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeIva\\r\\n                                        )\\r\\n\\r\\n                                    )\\r\\n                                )\\r\\n                            \\\">\\r\\n                                {{ utilsService.parseDecimal(item[col.key]) }}\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"\\r\\n                                col.decimal && col.key === 'precio' && \\r\\n                                !(\\r\\n                                    col.elementoFinalBlur && \\r\\n                                    comprobante && comprobante.tipo &&\\r\\n                                    comprobante.tipo.comprobante && \\r\\n                                    (\\r\\n                                        (\\r\\n                                            !tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeNeto\\r\\n                                        ) ||\\r\\n                                        (\\r\\n                                            tablaSubtotales &&\\r\\n                                            !comprobante.tipo.comprobante.incluyeIva\\r\\n                                        )\\r\\n\\r\\n                                    )\\r\\n                                )\\r\\n                            \\\">\\r\\n                                {{ \\r\\n                                    utilsService.toThreeDecimals(item[col.key])\\r\\n                                }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- Si SI está en edicion -->\\r\\n                        <!-- [(ngModel)]=\\\"item[col.key]\\\" -->\\r\\n                        <div *ngIf=\\\"checkIfEditOn(item)(col)\\\">\\r\\n                            <input  *ngIf=\\\" (\\r\\n                                        col.nombre !== 'imputacion' && \\r\\n                                        col.nombre !== 'monto' &&\\r\\n                                        col.key !== 'trazabilidad' && \\r\\n                                        !col.elementoFinalBlur)\\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key]\\\"\\r\\n                                    style=\\\"margin: 4px 6px; text-align: end;\\\" type=\\\"text\\\"\\r\\n                                    class=\\\"form-control edit-input\\\"\\r\\n                                    id=\\\"inputSubKey\\\"\\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\"\\r\\n                                    (blur)=\\\"col && col.customBlur ? customsBlur[col.customBlur](item, $event) : null\\\"\\r\\n                                    >\\r\\n\\r\\n                                    <!-- (blur)=\\\"getFunctionBlurOfColumn(col) ? getFunctionBlurOfColumn(col)(item) : null\\\" -->\\r\\n\\r\\n                            <!-- ULTIMO INPUT EDITABLE. CAPTURO EL BLUR -->\\r\\n                            <input  *ngIf=\\\"\\r\\n                                        col.elementoFinalBlur && \\r\\n                                        comprobante && comprobante.tipo &&\\r\\n                                        comprobante.tipo.comprobante && \\r\\n                                        (\\r\\n                                            (\\r\\n                                                !tablaSubtotales && \\r\\n                                                comprobante.tipo.comprobante.incluyeNeto\\r\\n                                            ) ||\\r\\n                                            (\\r\\n                                                tablaSubtotales && \\r\\n                                                comprobante.tipo.comprobante.incluyeIva\\r\\n                                            )\\r\\n                                        )\\r\\n                                    \\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key]\\\"  \\r\\n                                    style=\\\"margin: 4px 6px; text-align: end;\\\" \\r\\n                                    type=\\\"text\\\"\\r\\n                                    class=\\\"form-control edit-input\\\" \\r\\n                                    id=\\\"inputSubKey\\\" \\r\\n                                    (blur)=\\\"confirmEdit(item)\\\" \\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\">\\r\\n                            <!-- FIN ULTIMO INPUT EDITABLE -->\\r\\n\\r\\n                            <!-- CASOS PARTICULARES -->\\r\\n\\r\\n                            <input  \\r\\n                                *ngIf=\\\"col.nombre === 'monto'\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                [(ngModel)]=\\\"item[col.key]\\\"\\r\\n                                style=\\\"margin: 4px 6px; text-align: end;\\\" \\r\\n                                class=\\\"form-control edit-input\\\"\\r\\n                                id=\\\"inputSubKey\\\"\\r\\n                                step=\\\".01\\\"\\r\\n                                (ngModelChange)=\\\"modelChanged($event)\\\"\\r\\n                                [ngClass]=\\\"getClassInputEditable(item)(col)\\\"\\r\\n                                (blur)=\\\"col && col.customBlur ? customsBlur[col.customBlur](item, $event) : null\\\"\\r\\n                                >\\r\\n\\r\\n                                <!-- [ngClass]=\\\"'form-control without-padding editar-focus-' + item.producto.idProductos+'-'+item.numero\\\" -->\\r\\n                            <select *ngIf=\\\"col.nombre === 'imputacion'\\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key].seleccionada\\\"\\r\\n                                    [ngClass]=\\\"'form-control without-padding editar-focus-' + item.idFactDetalle+'-'+item.numero\\\"\\r\\n                                    >\\r\\n                                <option *ngFor=\\\"let impu of item[col.key].todas\\\" [ngValue]=\\\"impu\\\">\\r\\n                                    {{impu.descripcion}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n\\r\\n                            <input  *ngIf=\\\"\\r\\n                                        col.elementoFinalBlur && \\r\\n                                        comprobante && comprobante.tipo &&\\r\\n                                        comprobante.tipo.comprobante && \\r\\n                                        (\\r\\n                                            (\\r\\n                                                !tablaSubtotales &&\\r\\n                                                !comprobante.tipo.comprobante.incluyeNeto\\r\\n                                            ) ||\\r\\n                                            (\\r\\n                                                tablaSubtotales &&\\r\\n                                                !comprobante.tipo.comprobante.incluyeIva\\r\\n                                            )\\r\\n                                        )\\r\\n                                    \\\"\\r\\n                                    [(ngModel)]=\\\"item[col.key]\\\"  \\r\\n                                    style=\\\"margin: 4px 6px; text-align: end; color: #c10000;\\\" \\r\\n                                    type=\\\"text\\\"\\r\\n                                    class=\\\"form-control edit-input\\\" \\r\\n                                    id=\\\"inputSubKey\\\" \\r\\n                                    (blur)=\\\"confirmEdit(item)\\\" \\r\\n                                    [ngClass]=\\\"getClassInputEditable(item)(col)\\\">\\r\\n\\r\\n                            <!-- FIN CASOS PARTICULARES -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <!-- FIN DE MUESTREO DE DATA -->\\r\\n\\r\\n            </tr>\\r\\n\\r\\n            <div class=\\\"tooltip-add-prod\\\" *ngIf=\\\"showTooltip && (!comprobante || !comprobante.numerador || !comprobante.numerador.ptoVenta || !comprobante.numerador.ptoVenta.ptoVenta || !comprobante.numerador.ptoVenta.ptoVenta)\\\" [ngStyle]=\\\"getPositionTooltip()\\\">\\r\\n                <span>\\r\\n                    Debe completar el nro de comprobante antes de agregar productos\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <!-- ROW PARA AGREGAR UN PRODUCTO -->\\r\\n            <tr *ngIf=\\\"enableAddItem\\\">\\r\\n                <td></td>\\r\\n                <td (mouseenter) = \\\"showTooltip = true\\\"  (mouseleave) = \\\"showTooltip = false\\\">\\r\\n                    <input  [(ngModel)]=\\\"textoBusqueda\\\" type=\\\"text\\\" class=\\\"form-control input-new-prod\\\" id=\\\"addInput\\\" placeholder=\\\"\\\"\\r\\n                            (blur)=\\\"onBlurInputItemAdd($event)\\\"\\r\\n                            (focus)=\\\"prodFocus = true\\\"\\r\\n                            (ngModelChange)=\\\"onChangeInputItemAdd($event)\\\"\\r\\n                            (keydown.arrowdown)=\\\"keyPressInputTexto($event)('down')\\\"\\r\\n                            (keydown.arrowup)=\\\"keyPressInputTexto($event)('up')\\\"\\r\\n                            (keydown.enter)=\\\"onEnterInputBuscProd($event)\\\"\\r\\n                            [disabled]=\\\"!comprobante || !comprobante.numerador || !comprobante.numerador.ptoVenta || !comprobante.numerador.ptoVenta.ptoVenta || !comprobante.numerador.ptoVenta.ptoVenta\\\"\\r\\n                            >\\r\\n\\r\\n                    <!-- *ngIf=\\\"textoBusqueda && textoBusqueda.length > 0\\\" -->\\r\\n                    <popup-lista    *ngIf=\\\"prodFocus\\\"\\r\\n                                    [items]=\\\"productosBusqueda.filtrados\\\"\\r\\n                                    [keysToShow]=\\\"['descripcion', 'codProducto', 'codProductoOriginal']\\\"\\r\\n                                    [onClickItem]=\\\"onClickProductoListaLocal\\\"\\r\\n                                    [fatherPosition]=\\\"getOffsetOfAddInput()\\\">\\r\\n                    </popup-lista>\\r\\n                </td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n            </tr>\\r\\n            <!-- FIN ROW PARA AGREGAR UN PRODUCTO -->\\r\\n\\r\\n        </tbody>\\r\\n<!-- \\r\\n        <tfoot>\\r\\n            <tr>\\r\\n                <td colspan=\\\"12\\\" style=\\\"border-top: none\\\">\\r\\n                    <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tfoot>\\r\\n        -->\\r\\n    </table>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.html\n// module id = ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.html\n// module chunks = compras.module","module.exports = \"/*Modificacion Dario*/\\n:host /deep/ .widgets .data-table-container {\\n  width: 100%; }\\n:host /deep/ .widgets .data-table-container .panel-heading {\\n    margin-top: 25px; }\\n.panel {\\n  font-size: 11px; }\\n.panel .table .table-column {\\n    text-transform: capitalize; }\\n.panel .table thead {\\n    background: #c2c3d2;\\n    color: black;\\n    text-shadow: 0 0 3px #fff; }\\n.panel .table thead tr th {\\n      padding: 5px 8px; }\\n.panel .table tbody tr td {\\n    padding: 0 8px; }\\n.panel .table tbody tr td .datepicker-datelikepicker {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      width: 90%;\\n      margin-left: 9%; }\\n.panel .table tbody .btn-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: start;\\n        -ms-flex-pack: start;\\n            justify-content: flex-start;\\n    padding: 7px 5px 0px;\\n    margin-top: 7px; }\\n.panel .table tbody .btn-container .btn-accion {\\n      margin: 2%;\\n      font-size: 0.9rem;\\n      padding: 5px 9px;\\n      cursor: pointer;\\n      padding-top: 0; }\\n.panel .table tbody .btn-container .btn-editar i {\\n      vertical-align: middle; }\\n.panel .table tbody .add-tr .add-td {\\n    padding: 0 4px; }\\n.panel .table tbody .add-tr .add-td .checkbox-traza {\\n      margin-top: 6px; }\\n.panel .table tbody .lista-filtrada-items {\\n    display: block;\\n    position: absolute;\\n    top: 0;\\n    left: 0; }\\n.panel .table tbody tr td .input-new-prod {\\n    width: 97%;\\n    margin: 0 auto;\\n    margin: 5px auto; }\\n.panel .table tbody .tooltip-add-prod {\\n    position: fixed;\\n    background: #c3c5d4;\\n    padding: 5px 10px;\\n    text-align: center;\\n    border-radius: 24px;\\n    opacity: 0.8;\\n    left: 222px;\\n    top: 90px;\\n    font-size: 11px;\\n    -webkit-transition: width 2s;\\n    transition: width 2s; }\\n.tabla-ingreso .form-control .sort-option {\\n  text-transform: capitalize; }\\n.tabla-ingreso .footer-table {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between; }\\n.tabla-ingreso .footer-table .add-item-label {\\n    font-size: 0.9rem; }\\n.tabla-ingreso .footer-table .deposito {\\n    margin-right: 2%; }\\n.without-padding {\\n  padding: 0; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.scss\n// module id = ./src/app/pages/main/compras/comprobanteCompra/components/tablaIngreso/tablaIngreso.scss\n// module chunks = compras.module","import { BaThemeConfig } from \"./../../../../theme/theme.config\";\r\nimport { DisabledButtons } from \"./../../../examples/ui/components/buttons/components/disabledButtons/disabledButtons.component\";\r\nimport * as _ from \"lodash\";\r\nimport * as moment from \"moment\";\r\nimport { Component, HostListener, AfterViewInit } from \"@angular/core\";\r\n\r\nimport { UtilsService } from \"app/services/utilsService\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Padron } from \"../../../../models/padron\";\r\nimport { RecursoService } from \"app/services/recursoService\";\r\nimport { resourcesREST } from \"constantes/resoursesREST\";\r\n\r\nimport { SisTipoOperacion } from \"app/models/sisTipoOperacion\";\r\nimport { TipoComprobante } from \"app/models/tipoComprobante\";\r\nimport { Moneda } from \"../../../../models/moneda\";\r\nimport { ProductoPendiente } from \"app/models/productoPendiente\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { Cotizacion } from \"../../../../models/cotizacion\";\r\nimport { Comprobante } from \"app/models/comprobante\";\r\nimport { ComprobanteRelacionado } from \"app/models/comprobanteRelacionado\";\r\nimport { Deposito } from \"app/models/deposito\";\r\nimport { PopupListaService } from \"app/pages/reusable/otros/popup-lista/popup-lista-service\";\r\nimport { ComprobanteCompraService } from \"./comprobanteCompraService\";\r\nimport { FormaPago } from \"app/models/formaPago\";\r\n\r\nimport { DetalleFormaPago } from \"app/models/detalleFormaPago\";\r\nimport { NgbProgressbarConfig } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { DateLikePicker } from \"../../../../models/dateLikePicker\";\r\nimport gruposParametros from \"constantes/gruposParametros\";\r\nimport { ProductoReducido } from \"../../../../models/productoReducido\";\r\nimport { TablaCompra } from \"../../../../models/tablaCompra\";\r\nimport { Numerador } from \"app/models/numerador\";\r\nimport sisModulos from \"constantes/sisModulos\";\r\nimport { ComprobanteEncabezado } from \"app/models/comprobanteEncabezado\";\r\nimport { PtoVenta } from \"app/models/ptoVenta\";\r\nimport { SisLetra } from \"app/models/sisLetra\";\r\nimport { LetraCodigo } from \"app/models/letraCodigo\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ComprobanteService } from \"app/services/comprobanteService\";\r\nimport { Alert } from \"selenium-webdriver\";\r\nimport { AuthService } from \"app/services/authService\";\r\n\r\n@Component({\r\n    selector: \"comprobante-compra\",\r\n    templateUrl: \"./comprobanteCompra.html\",\r\n    styleUrls: [\"./comprobanteCompra.scss\"],\r\n    providers: [NgbProgressbarConfig],\r\n})\r\n\r\n/**\r\n * Form reutilizable\r\n */\r\nexport class ComprobanteCompra implements AfterViewInit {\r\n    // Checkea cambios antes de salir\r\n    @HostListener(\"window:beforeunload\")\r\n    canDeactivate() {\r\n        return this.comprobanteCompraService.checkPendingChanges(\r\n            this.comprobante\r\n        )(this.factura)(this.proveedorSeleccionado)(\r\n            this.comprobanteRelacionado\r\n        );\r\n    }\r\n\r\n    /////////////////////////////////////////////\r\n    /////////// Modelos Comprobante /////////////\r\n    /////////////////////////////////////////////\r\n    proveedorSeleccionado: Padron = new Padron();\r\n    comprobante: Comprobante = new Comprobante();\r\n    comprobanteRelacionado: ComprobanteRelacionado =\r\n        new ComprobanteRelacionado();\r\n    factura: Comprobante = new Comprobante();\r\n    cotizacionDatos: {\r\n        cotizacion: Cotizacion;\r\n        total: number;\r\n    } = { cotizacion: new Cotizacion(), total: 0 };\r\n    cotizacionDolarEditada: number;\r\n    // seteo el estado obligatorio por defecto en falso\r\n    estadoRelacionadoObligatorio: Boolean = false;\r\n    estadoEdicionCantidadProducto: Boolean = false;\r\n    depositoSelec: Deposito;\r\n    tipoOpSelect: SisTipoOperacion;\r\n    precioOriginal = [];\r\n    sisTiposOpDepositos: any[];\r\n    depositosAMostrar: Deposito[] = [];\r\n    allDepositos: Deposito[];\r\n    filtro = {};\r\n    agregarElemento = false;\r\n    pesificado = false;\r\n    dolarizadoAlVto = false;\r\n    interesMensualCompra = 0.0;\r\n    canjeInsumos = false;\r\n    tipoCambio = \"divisa\";\r\n    condicionesConfirmadas = false;\r\n    // Indice del producto enfocado del popup\r\n    proveedorEnfocadoIndex: number = -1;\r\n    // Suma de todos los subtotales\r\n    sumatoriaSubtotales: number = 0;\r\n    // Fps seleccionadas\r\n    formasPagoSeleccionadas: FormaPago[] = [];\r\n    preCargaPadron:String = \"\";\r\n    statusCargaPadron : boolean;\r\n    /////////////////////////////////////////////\r\n    //////////// Listas desplegables ////////////\r\n    /////////////////////////////////////////////\r\n    tiposComprobantes: Observable<TipoComprobante[]>;\r\n    tiposOperacion: Observable<SisTipoOperacion[]>;\r\n    // monedas: Observable<Moneda[]>;\r\n    monedas: Subject<Moneda[]> = new Subject();\r\n    depositos: Observable<Deposito[]>;\r\n    tiposComprobantesFactura: Observable<TipoComprobante[]>;\r\n    tiposComprobantesRel: Observable<TipoComprobante[]>;\r\n    tituloCardComprobante: String = \"COMPROBANTE\";\r\n    proveedores: {\r\n        filtrados: BehaviorSubject<Padron[]>;\r\n    } = {\r\n        filtrados: new BehaviorSubject([]),\r\n    };\r\n\r\n    letras: string[] = [];\r\n    ajusteConfirmado = false;\r\n    valorRealFactura: number = null;\r\n    valorCalculadoFactura: number = null;\r\n\r\n    // Si es 0, no se muestra el 'cargando'.\r\n    valueGuardandoCompro = 0;\r\n\r\n    /**\r\n     * Blurs customs\r\n     */\r\n\r\n    customsBlurProduct = {\r\n        calculateImporte: (item: ProductoPendiente, ev) => {\r\n            if (this.estadoEdicionCantidadProducto == false) {\r\n                item.importe = item.pendiente * Number(item.precio);\r\n                this.utilsService.onBlurInputNumber(ev);\r\n            }\r\n        },\r\n    };\r\n\r\n    /////////////////////////////////////////////\r\n\r\n    ////////////////// Tablas ///////////////////\r\n    /////////////////////////////////////////////\r\n    dataTablaFormasPago: Observable<FormaPago[]>;\r\n    tablas: TablaCompra = new TablaCompra();\r\n\r\n    ////////////////////////////////////////////\r\n    //////////////// PopupLista ////////////////\r\n    ////////////////////////////////////////////\r\n\r\n    popupLista: any = {\r\n        onClickListProv: (prove: Padron) => {\r\n            this.proveedorSeleccionado = new Padron({ ...prove });\r\n\r\n            // Focus siguiente elemento\r\n            document.getElementById(\"tipoOperacionSelect\")\r\n                ? document.getElementById(\"tipoOperacionSelect\").focus()\r\n                : null;\r\n        },\r\n        getOffsetOfInputProveedor: () =>\r\n            this.utilsService.getOffset(\r\n                document.getElementById(\"inputProveedor\")\r\n            ),\r\n    };\r\n\r\n    /**\r\n     * Toda la carga de data se hace en el mismo orden en el que está declarado arriba\r\n     */\r\n    constructor(\r\n        private recursoService: RecursoService,\r\n        public comprobanteCompraService: ComprobanteCompraService,\r\n        public comprobanteService: ComprobanteService,\r\n        public utilsService: UtilsService,\r\n        private popupListaService: PopupListaService,\r\n        private router: Router,\r\n        configProgressBar: NgbProgressbarConfig,\r\n        private authService: AuthService\r\n    ) {\r\n        this.comprobante.numerador = new Numerador();\r\n\r\n        ////////// Barra de progreso ///////////\r\n        configProgressBar.max = 100;\r\n        configProgressBar.striped = true;\r\n        configProgressBar.animated = true;\r\n        configProgressBar.type = \"success\";\r\n        this.preCargaPadron = \"Cargando proovedores, espere...\"\r\n        this.statusCargaPadron = false;\r\n        ////////// Listas desplegables  //////////\r\n        this.tiposOperacion = this.recursoService.getRecursoList(\r\n            resourcesREST.sisTipoOperacion\r\n        )({\r\n            sisModulo: 1,\r\n        });\r\n\r\n        // this.monedas = this.recursoService.getRecursoList(resourcesREST.sisMonedas)();\r\n        // this.depositos = this.recursoService.getRecursoList(resourcesREST.depositos)();\r\n\r\n        this.tiposComprobantesFactura = this.recursoService.getRecursoList(\r\n            resourcesREST.cteTipo\r\n        )({\r\n            sisComprobante: 2,\r\n        });\r\n\r\n        this.dataTablaFormasPago = this.recursoService.getRecursoList(\r\n            resourcesREST.formaPago\r\n        )({\r\n            codPadron: this.proveedorSeleccionado\r\n                ? this.proveedorSeleccionado.padronCodigo\r\n                : null,\r\n            idSisModulo: sisModulos.compra,\r\n        });\r\n\r\n        ////////// Proveedores  //////////\r\n\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.padron)({\r\n                grupo: gruposParametros.proveedor,\r\n            })\r\n            .subscribe((proveedores) => {\r\n                // this.proveedores.todos = proveedores;\r\n                this.proveedores.filtrados.next(proveedores);\r\n                this.preCargaPadron = \"Proovedor\"\r\n                this.statusCargaPadron = true;\r\n            });\r\n\r\n        ////////// Tablas //////////\r\n        this.tablas.columnas.columnasProductos =\r\n            comprobanteCompraService.getColumnsProductos();\r\n        this.tablas.columnas.columnasTrazabilidad =\r\n            comprobanteCompraService.getColumnsTrazabilidad();\r\n        this.tablas.columnas.columnasFactura =\r\n            comprobanteCompraService.getColumnsFactura();\r\n        this.tablas.columnas.columnasDetallesFp =\r\n            comprobanteCompraService.getColumnsDetallesFp();\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.tiposOpDepositos)()\r\n            .subscribe((data) => {\r\n                this.sisTiposOpDepositos = data;\r\n                for (let i = 0; i < this.sisTiposOpDepositos.length; i++) {\r\n                    if (\r\n                        !this.filtro[\r\n                            this.sisTiposOpDepositos[i].idSisTipoOperacion\r\n                        ]\r\n                    ) {\r\n                        this.filtro[\r\n                            this.sisTiposOpDepositos[i].idSisTipoOperacion\r\n                        ] = [];\r\n                    }\r\n                    this.filtro[\r\n                        this.sisTiposOpDepositos[i].idSisTipoOperacion\r\n                    ].push(this.sisTiposOpDepositos[i].idDepositos);\r\n                }\r\n            });\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.depositos)({\r\n                todos: 1,\r\n            })\r\n            .subscribe((data) => {\r\n                this.allDepositos = data;\r\n            });\r\n        ////////// Otros //////////\r\n        this.comprobanteCompraService\r\n            .getCotizacionDatos()\r\n            .subscribe((cotizDatos) => {\r\n                this.cotizacionDatos.cotizacion = cotizDatos;\r\n                this.cotizacionDolarEditada = cotizDatos.cotizacion;\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Focus en input proveedor\r\n        document.getElementById(\"inputProveedor\")\r\n            ? document.getElementById(\"inputProveedor\").focus()\r\n            : null;\r\n    }\r\n\r\n    ///////////////////////////////// Eventos OnClick /////////////////////////////////\r\n    onCLickAdd = (prodSelect: ProductoPendiente) => {\r\n        this.agregarElemento = true;\r\n        return true;\r\n    }\r\n    onClickRemove = (prodSelect: ProductoPendiente) => {\r\n        _.remove(this.tablas.datos.productosPend, (prod: ProductoPendiente) => {\r\n            // return prod.producto.idProductos === prodSelect.producto.idProductos && prod.numero === prodSelect.numero;\r\n            return prod.idFactDetalle === prodSelect.idFactDetalle;\r\n        });\r\n\r\n        _.remove(this.precioOriginal, (obj) => {\r\n            // return prod.producto.idProductos === prodSelect.producto.idProductos && prod.numero === prodSelect.numero;\r\n            return obj.idFactDetalle === prodSelect.idFactDetalle;\r\n        });\r\n\r\n        // Actualizo totales y eso\r\n        this.actualizarDatosProductos();\r\n    };\r\n\r\n    onClickEdit = (tipoColumnas) => (itemSelect: any) => {\r\n        this.tablas.columnas[tipoColumnas] = this.tablas.columnas[\r\n            tipoColumnas\r\n        ].map((tabla) => {\r\n            let newTabla = tabla;\r\n            if (newTabla.enEdicion !== undefined) {\r\n                // tipoColumnas === 'columnasProductos' ? newTabla.enEdicion = itemSelect.producto.idProductos :\r\n                // tipoColumnas === 'columnasProductos' ? newTabla.enEdicion = `${itemSelect.producto.idProductos}-${itemSelect.numero}` :\r\n                // tipoColumnas === 'columnasTrazabilidad' ? newTabla.enEdicion = `${itemSelect.producto.idProductos}-${itemSelect.numero}` :\r\n                tipoColumnas === \"columnasProductos\"\r\n                    ? (newTabla.enEdicion = `${itemSelect.idFactDetalle}-${itemSelect.numero}`)\r\n                    : tipoColumnas === \"columnasTrazabilidad\"\r\n                    ? (newTabla.enEdicion = `${itemSelect.idFactDetalle}-${itemSelect.numero}`)\r\n                    : tipoColumnas === \"columnasFactura\"\r\n                    ? (newTabla.enEdicion = itemSelect.cuentaContable)\r\n                    : tipoColumnas === \"columnasDetallesFp\"\r\n                    ? (newTabla.enEdicion = itemSelect.idFormaPagoDet)\r\n                    : null;\r\n            }\r\n            return newTabla;\r\n        });\r\n\r\n        // Hago focus en el select de imputacion\r\n        setTimeout(() => {\r\n            const idItem = itemSelect.cuentaContable\r\n                ? itemSelect.cuentaContable\r\n                : itemSelect.idFormaPagoDet\r\n                ? itemSelect.idFormaPagoDet\r\n                : // itemSelect.producto && itemSelect.producto.idProductos ? itemSelect.producto.idProductos : '000';\r\n                // itemSelect.producto && itemSelect.producto.idProductos ? `${itemSelect.producto.idProductos}-${itemSelect.numero}` : '000';\r\n                itemSelect.producto && itemSelect.idFactDetalle\r\n                ? `${itemSelect.idFactDetalle}-${itemSelect.numero}`\r\n                : \"000\";\r\n\r\n            const inputFocusClass = \"editar-focus-\" + idItem;\r\n\r\n            const elementFocus: any =\r\n                document.getElementsByClassName(inputFocusClass);\r\n            elementFocus && elementFocus[0] ? elementFocus[0].focus() : null;\r\n        });\r\n\r\n        // Cuando edita alguna forma de pago, se sugiere el Total Cte en monto\r\n\r\n        if (tipoColumnas && tipoColumnas === \"columnasDetallesFp\") {\r\n            itemSelect.monto = this.utilsService.parseDecimalNumber(\r\n                this.cotizacionDatos.total + this.sumatoriaSubtotales\r\n            );\r\n        }\r\n    };\r\n\r\n    actualizarSumatoriaSubto = () => {\r\n        this.sumatoriaSubtotales =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            this.comprobante.tipo.comprobante.incluyeIva\r\n                ? _.sumBy(this.tablas.datos.modelosFactura, (fact) =>\r\n                      Number(fact.importeTotal) ? Number(fact.importeTotal) : 0\r\n                  )\r\n                : 0;\r\n    };\r\n\r\n    onClickConfirmCondiciones = () => {\r\n        this.condicionesConfirmadas = true;\r\n    };\r\n\r\n    onClickCancelarCondiciones = () => {\r\n        this.condicionesConfirmadas = false;\r\n    };\r\n\r\n    onClickConfirmAjuste = () => {\r\n        const totalActual =\r\n            this.cotizacionDatos.total + this.sumatoriaSubtotales;\r\n        if (\r\n            this.valorRealFactura &&\r\n            totalActual > 0 &&\r\n            this.valorRealFactura > 0\r\n        ) {\r\n            if (\r\n                this.comprobante.moneda.idMoneda == 1 &&\r\n                Math.abs(this.valorRealFactura - totalActual) < 10\r\n            ) {\r\n                this.tablas.datos.productosPend[0].importe +=\r\n                    this.valorRealFactura - totalActual;\r\n                this.tablas.datos.detallesFormaPago[0].monto +=\r\n                    this.valorRealFactura - totalActual;\r\n                this.actualizarDatosProductos(true);\r\n                this.refreshMontoDetallesFormaPago(true);\r\n                this.ajusteConfirmado = true;\r\n                this.utilsService.showModal(\"Éxito\")(\r\n                    \"El ajuste se realizó correctamente\"\r\n                )()();\r\n            } else if (\r\n                this.comprobante.moneda.idMoneda == 2 &&\r\n                Math.abs(\r\n                    this.valorRealFactura / this.cotizacionDolarEditada -\r\n                        totalActual\r\n                ) < 0.2\r\n            ) {\r\n                this.tablas.datos.productosPend[0].importe +=\r\n                    this.valorRealFactura / this.cotizacionDolarEditada -\r\n                    totalActual;\r\n                this.tablas.datos.detallesFormaPago[0].monto +=\r\n                    this.valorRealFactura / this.cotizacionDolarEditada -\r\n                    totalActual;\r\n                this.actualizarDatosProductos(true);\r\n                this.refreshMontoDetallesFormaPago(true);\r\n                this.ajusteConfirmado = true;\r\n                this.utilsService.showModal(\"Éxito\")(\r\n                    \"El ajuste se realizó correctamente\"\r\n                )()();\r\n            } else {\r\n                this.utilsService.showModal(\"Error\")(\r\n                    \"La diferencia de totales es muy grande, contacte al gerente\"\r\n                )()();\r\n            }\r\n        } else {\r\n            this.utilsService.showModal(\"Error\")(\r\n                \"Complete todos los campos e ingrese productos para ajustar\"\r\n            )()();\r\n        }\r\n    };\r\n\r\n    onClickCancelarAjuste = () => {\r\n        this.ajusteConfirmado = false;\r\n    };\r\n\r\n    onClickConfirmEdit = (tipoColumnas) => (itemSelect: any) => {\r\n        // Todos los atributos 'enEdicion' distintos de undefined y también distintos de null o false, los seteo en false\r\n        this.tablas.columnas[tipoColumnas] = this.tablas.columnas[\r\n            tipoColumnas\r\n        ].map((tabla) => {\r\n            let newTabla = tabla;\r\n            if (newTabla.enEdicion !== undefined && newTabla.enEdicion) {\r\n                // Seteo en false asi sale de edicion\r\n                newTabla.enEdicion = false;\r\n            }\r\n            return newTabla;\r\n        });\r\n\r\n        // Hago la sumatoria de los subtotales de la factura\r\n        if (tipoColumnas === \"columnasFactura\") {\r\n            if (this.comprobante.moneda.idMoneda === 2) {\r\n                itemSelect.importeArs =\r\n                    itemSelect.importeTotal * this.cotizacionDolarEditada;\r\n            }\r\n            // Actualizo el Total Comprobante sumando todos los precios nuevamente (no le sumo directamente el precio editado porque no es un precio nuevo, sino que ya está y debería sumarle la diferencia editada nomás)\r\n            this.actualizarSumatoriaSubto();\r\n            this.refreshMontoDetallesFormaPago();\r\n        }\r\n\r\n        if (tipoColumnas === \"columnasProductos\") {\r\n            // Cuando edita alguna cantidad, la cantidad no puede ser superior a la que esta cargada originalmente (salvo que sea = 0)\r\n\r\n            /*if (this.estadoRelacionadoObligatorio == true) {\r\n                if (itemSelect.pendiente > itemSelect.original) {\r\n                    alert(\"Atención !!! No se puede modificar la cantidad del comprobante: El valor ingresado no puede ser mayor al valor Original\")\r\n                    itemSelect.pendiente = itemSelect.original;\r\n                    itemSelect.importe = itemSelect.original * Number(itemSelect.precio)\r\n                    this.estadoEdicionCantidadProducto = true;\r\n                }\r\n            } else {\r\n\r\n            }*/\r\n\r\n            this.estadoEdicionCantidadProducto = false;\r\n            // Actualizo el importe si y solo si esta editando productos, y si el importe viene modificado\r\n            // Si el importe es 0, es la primer edicion por lo que calculo el importe\r\n            if (itemSelect.importe === 0) {\r\n                itemSelect.importe =\r\n                    itemSelect.pendiente * Number(itemSelect.precio);\r\n            } else {\r\n                // Si el importe es igual al importe previo, entonces el importe NO se editó, por lo que seguramte se editó la cantidad o el precio y debo recalcular el importe\r\n                if (itemSelect.importe === itemSelect.auxPreviusImporte) {\r\n                    itemSelect.importe =\r\n                        itemSelect.pendiente * Number(itemSelect.precio);\r\n                }\r\n            }\r\n            // Guardo el importe para usarlo en la proxima edicion\r\n            itemSelect.auxPreviusImporte = itemSelect.importe;\r\n            // Refresco detalles forma pago casos particulares [SOLO si la grilla es la de articulos]\r\n            this.refreshMontoDetallesFormaPago();\r\n        }\r\n\r\n        // Actualizo datos del producto (si NO son las facturas lo que se edita)\r\n        if (\r\n            tipoColumnas !== \"columnasFactura\" &&\r\n            tipoColumnas !== \"columnasDetallesFp\"\r\n        ) {\r\n            this.actualizarDatosProductos();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Busca los productos pendientes de acuerdo al comprobante relacionado\r\n     */\r\n    onClickBuscarPendientes = () =>\r\n        this.comprobanteCompraService\r\n            .buscarPendientes(this.proveedorSeleccionado)(\r\n                this.comprobanteRelacionado\r\n            )(this.comprobante)(this.tipoOpSelect)\r\n            .subscribe(\r\n                (prodsPend) => {\r\n                    // Agrego los productos\r\n                    // this.tablas.datos.productosPend = _.uniqWith(\r\n                    //     this.tablas.datos.productosPend.concat(prodsPend),\r\n                    //     (a:ProductoPendiente,b:ProductoPendiente) =>    a.producto.idProductos === b.producto.idProductos &&\r\n                    //                                                     a.numero === b.numero\r\n                    // );\r\n\r\n                    // Borro los prods agregados anteriormente y los remplazo por estos que vienen acá\r\n                    this.tablas.datos.productosPend = prodsPend;\r\n                    for (\r\n                        let i = 0;\r\n                        i < this.tablas.datos.productosPend.length;\r\n                        i++\r\n                    ) {\r\n                        this.precioOriginal.push({\r\n                            idFactDetalle:\r\n                                this.tablas.datos.productosPend[i]\r\n                                    .idFactDetalle,\r\n                            precio: this.tablas.datos.productosPend[i].precio,\r\n                        });\r\n                    }\r\n                    this.tablas.datos.productosPend.forEach((item, index) => {\r\n                        item.item = index;\r\n                    });\r\n                    console.log(this.tablas.datos.productosPend);\r\n\r\n                    // Actualizo datos de los productos\r\n                    this.actualizarDatosProductos();\r\n                    this.refreshMontoDetallesFormaPago();\r\n                },\r\n                (error) => this.utilsService.decodeErrorResponse(error)\r\n            );\r\n\r\n    /**\r\n     * Agrega el producto seleccionado a la lista de productosPendientes\r\n     */\r\n    onClickProductoLista = (prodSelec: ProductoReducido) => {\r\n        // Busco el producto seleccionado\r\n\r\n        this.comprobanteCompraService\r\n            .buscarProducto(\r\n                prodSelec.idProductos,\r\n                this.comprobante.moneda.idMoneda\r\n            )\r\n            .subscribe((prodEnc) => {\r\n                const auxProdSelect = Object.assign({}, prodEnc);\r\n\r\n                // Seteo el nro del comprobante actual\r\n                auxProdSelect.numero = this.utilsService.numeroObjectToString(\r\n                    this.comprobante.numerador\r\n                );\r\n\r\n                // Checkeo que no exista\r\n                const existeProd = this.tablas.datos.productosPend.find(\r\n                    (prod) => prod.idFactDetalle === auxProdSelect.idFactDetalle\r\n                    // prod => prod.producto.idProductos === auxProdSelect.producto.idProductos &&\r\n                    //         prod.numero === auxProdSelect.numero\r\n                );\r\n                if (!existeProd) {\r\n                    this.precioOriginal.push({\r\n                        idFactDetalle: auxProdSelect.idFactDetalle,\r\n                        precio: auxProdSelect.precio,\r\n                    });\r\n                    this.tablas.datos.productosPend.push(\r\n                        this.cotizacionDolarEditada > 0 &&\r\n                            auxProdSelect.producto.moneda.descripcion ===\r\n                                \"u$s\" &&\r\n                            this.comprobante.moneda.idMoneda === 1\r\n                            ? {\r\n                                  ...auxProdSelect,\r\n                                  precio:\r\n                                      (this.cotizacionDolarEditada *\r\n                                          this.precioOriginal[\r\n                                              this.precioOriginal.length - 1\r\n                                          ].precio) /\r\n                                      this.cotizacionDatos.cotizacion\r\n                                          .cotizacion,\r\n                              }\r\n                            : auxProdSelect\r\n                    );\r\n                    this.actualizarDatosProductos();\r\n                }\r\n\r\n                // Despues de agregar el producto procedo a ponerlo en edición\r\n                this.onClickEdit(\"columnasProductos\")(auxProdSelect);\r\n            });\r\n    };\r\n\r\n    onClickCancelar = () =>\r\n        this.utilsService.showModal(\"Aviso\")(\"¿Cancelar comprobante?\")(() => {\r\n            // Blanqueo los campos\r\n            const auxFecha = this.comprobante.fechaComprobante;\r\n            this.comprobante = new Comprobante();\r\n            this.comprobante.fechaComprobante = auxFecha;\r\n            this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n            this.proveedorSeleccionado = new Padron();\r\n            this.tablas.datos.productosPend = [];\r\n            this.precioOriginal = [];\r\n            this.condicionesConfirmadas = false;\r\n            this.pesificado = false;\r\n            this.dolarizadoAlVto = false;\r\n            this.ajusteConfirmado = false;\r\n            this.valorRealFactura = null;\r\n            this.valorCalculadoFactura = null;\r\n            this.interesMensualCompra = 0.0;\r\n            this.canjeInsumos = false;\r\n            this.tipoCambio = \"divisa\";\r\n            this.tablas.datos.modelosFactura = [];\r\n            // this.cotizacionDatos = { cotizacion: new Cotizacion(), total: 0 };\r\n            this.depositoSelec = new Deposito();\r\n            this.tablas.datos.detallesFormaPago = [];\r\n            this.cotizacionDolarEditada =\r\n                this.cotizacionDatos.cotizacion.cotizacion;\r\n        })({\r\n            tipoModal: \"confirmation\",\r\n        });\r\n\r\n    /**\r\n     * Valida que la fecha ingresada esté en el intervalo permitido por el numerador\r\n     */\r\n    fechaComprobanteInvalida = () =>\r\n        this.comprobante.numerador &&\r\n        this.comprobante.numerador.fechaApertura &&\r\n        this.comprobante.numerador.fechaCierre &&\r\n        !moment(\r\n            this.utilsService.dateLikePickerToDate(\r\n                this.comprobante.fechaComprobante\r\n            )\r\n        ).isBetween(\r\n            moment(\r\n                this.utilsService.dateLikePickerToDate(\r\n                    this.comprobante.numerador.fechaApertura\r\n                )\r\n            ),\r\n            moment(\r\n                this.utilsService.dateLikePickerToDate(\r\n                    this.comprobante.numerador.fechaCierre\r\n                )\r\n            ),\r\n            \"days\",\r\n            \"[]\"\r\n        );\r\n\r\n    /**\r\n     * Valida y graba el comprobante\r\n     */\r\n    onClickConfirmar = () =>\r\n\r\n        this.utilsService.showModal(\"Aviso\")(\"¿Confirmar comprobante?\")(() => {\r\n            if (this.fechaComprobanteInvalida()) {\r\n                // Y le aviso\r\n\r\n                this.utilsService.showModal(\"Error de fecha\")(\r\n                    `Fecha inválida para este punto de venta (Intervalo permitido: ${moment(\r\n                        this.utilsService.dateLikePickerToDate(\r\n                            this.comprobante.numerador.fechaApertura\r\n                        )\r\n                    ).format(\"DD-MM-YYYY\")} al ${moment(\r\n                        this.utilsService.dateLikePickerToDate(\r\n                            this.comprobante.numerador.fechaCierre\r\n                        )\r\n                    ).format(\"DD-MM-YYYY\")})`\r\n                )()();\r\n\r\n                return;\r\n            } else {\r\n\r\n                // Spinner bar\r\n                this.valueGuardandoCompro = 50;\r\n                // Actualizo las facturas antes de confirmar\r\n                this.comprobanteCompraService\r\n                    .buscaModelos(\r\n                        this.tablas.datos.productosPend,\r\n                        this.comprobante.moneda\r\n                            ? this.comprobante.moneda.idMoneda\r\n                            : null,\r\n                        this.proveedorSeleccionado.padronCodigo\r\n                    )\r\n                    .subscribe((modelProds) => {\r\n                        // this.tablas.datos.modelosFactura = modelProds;\r\n                        this.actualizarSumatoriaSubto();\r\n                        this.comprobanteCompraService.confirmarYGrabarComprobante(this.comprobante)\r\n                        (this.comprobanteRelacionado)\r\n                        (this.proveedorSeleccionado)(this.tablas.datos.productosPend)\r\n                        (this.tablas.datos.modelosFactura)(\r\n                                this.cotizacionDolarEditada > 0\r\n                                    ? {\r\n                                          ...this.cotizacionDatos,\r\n                                          cotizacion: {\r\n                                              ...this.cotizacionDatos\r\n                                                  .cotizacion,\r\n                                              cotizacion:\r\n                                                  this.cotizacionDolarEditada,\r\n                                          },\r\n                                      }\r\n                                    : this.cotizacionDatos\r\n                            )(this.depositoSelec)(\r\n                                this.tablas.datos.detallesFormaPago\r\n                            )(this.factura)(this.tipoOpSelect)(this.pesificado)(\r\n                                this.dolarizadoAlVto\r\n                            )(this.interesMensualCompra)(this.canjeInsumos)(\r\n                                this.tipoCambio\r\n                            )\r\n                            .catch((err) => {\r\n                                // Saco spinner\r\n                                this.valueGuardandoCompro = 0;\r\n                                return Observable.throw(null);\r\n                            })\r\n                            .subscribe((respuesta: any) => {\r\n                                // Saco spinner\r\n                                this.valueGuardandoCompro = 0;\r\n\r\n                                // Modal para imprimir\r\n                                const compCreado = new ComprobanteEncabezado();\r\n                                compCreado.idFactCab =\r\n                                    respuesta.datos.idFactCab;\r\n                                compCreado.numero = Number(\r\n                                    `${\r\n                                        this.comprobante.numerador.ptoVenta\r\n                                            .ptoVenta\r\n                                    }${this.comprobante.numerador.ptoVenta.ptoVenta\r\n                                        .toString()\r\n                                        .padStart(8, \"0\")}`\r\n                                );\r\n\r\n                                this.utilsService.showImprimirModal(\r\n                                    respuesta.control.codigo\r\n                                )(respuesta.control.descripcion)(() =>\r\n                                    this.recursoService.downloadComp(compCreado)\r\n                                )(compCreado);\r\n                                this.llamarFunction(compCreado.idFactCab);\r\n                                // this.utilsService.showModal(respuesta.control.codigo)(respuesta.control.descripcion)()();\r\n\r\n                                // Blanqueo los campos\r\n                                const auxFecha =\r\n                                    this.comprobante.fechaComprobante;\r\n                                this.comprobante = new Comprobante();\r\n                                this.comprobante.fechaComprobante = auxFecha;\r\n                                this.comprobanteRelacionado =\r\n                                    new ComprobanteRelacionado();\r\n                                this.proveedorSeleccionado = new Padron();\r\n                                this.tablas.datos.productosPend = [];\r\n                                this.precioOriginal = [];\r\n                                this.condicionesConfirmadas = false;\r\n                                this.pesificado = false;\r\n                                this.dolarizadoAlVto = false;\r\n                                this.interesMensualCompra = 0.0;\r\n                                this.canjeInsumos = false;\r\n                                this.ajusteConfirmado = false;\r\n                                this.valorRealFactura = null;\r\n                                this.valorCalculadoFactura = null;\r\n                                this.tipoCambio = \"divisa\";\r\n                                this.tablas.datos.modelosFactura = [];\r\n                                // this.cotizacionDatos = { cotizacion: new Cotizacion(), total: 0 };\r\n                                this.cotizacionDatos.total = 0;\r\n                                this.sumatoriaSubtotales = 0;\r\n                                // this.depositoSelec = new Deposito()\r\n                                this.depositoSelec = null;\r\n                                this.tablas.datos.detallesFormaPago = [];\r\n                                this.cotizacionDolarEditada =\r\n                                    this.cotizacionDatos.cotizacion.cotizacion;\r\n                                // Refresco formas pago\r\n                                this.dataTablaFormasPago =\r\n                                    this.recursoService.getRecursoList(\r\n                                        resourcesREST.formaPago\r\n                                    )({\r\n                                        codPadron: this.proveedorSeleccionado\r\n                                            ? this.proveedorSeleccionado\r\n                                                  .padronCodigo\r\n                                            : null,\r\n                                        idSisModulo: sisModulos.compra,\r\n                                    });\r\n                                // this.dataTablaFormasPago = null;\r\n\r\n                                // this.tipoOpSelect = new SisTipoOperacion();\r\n                                this.tipoOpSelect = null;\r\n\r\n                                // Focus en input proveedor (TODO SET TIME OUT)\r\n                                document.getElementById(\"inputProveedor\")\r\n                                    ? document\r\n                                          .getElementById(\"inputProveedor\")\r\n                                          .focus()\r\n                                    : null;\r\n                            });\r\n                    });\r\n            }\r\n        })({\r\n            tipoModal: \"confirmation\",\r\n        });\r\n\r\n    ///////////////////////////////// Eventos (Distintos de onclick) /////////////////////////////////\r\n\r\n    /**\r\n     * Actualiza el total en cotizacion y los modelosFactura\r\n     */\r\n    llamarFunction = (idFactCab) => {\r\n        this.comprobanteService.mandaMailPdf(idFactCab);\r\n    };\r\n    actualizarDatosProductos = (evitarSubtotal?) => {\r\n        // Si tipoComprobante no incluye neto, el total es 0\r\n        this.cotizacionDatos.total = this.comprobante.tipo.comprobante\r\n            .incluyeNeto\r\n            ? _.sumBy(this.tablas.datos.productosPend, (prod) =>\r\n                  Number(prod.importe) ? Number(prod.importe) : 0\r\n              )\r\n            : 0;\r\n\r\n        // Busco las facturas de los productos\r\n        if (!evitarSubtotal) {\r\n            if (\r\n                this.tablas.datos.productosPend &&\r\n                this.tablas.datos.productosPend.length > 0\r\n            ) {\r\n                this.comprobanteCompraService\r\n                    .buscaModelos(\r\n                        this.tablas.datos.productosPend,\r\n                        this.comprobante.moneda\r\n                            ? this.comprobante.moneda.idMoneda\r\n                            : null,\r\n                        this.proveedorSeleccionado.padronCodigo\r\n                    )\r\n                    .subscribe((modelProds) => {\r\n                        this.tablas.datos.modelosFactura = modelProds;\r\n                        this.tablas.datos.modelosFactura =\r\n                            this.tablas.datos.modelosFactura.map((element) => {\r\n                                return (element = {\r\n                                    ...element,\r\n                                    importeArs:\r\n                                        this.comprobante.moneda.idMoneda === 2\r\n                                            ? element.importeTotal *\r\n                                              this.cotizacionDolarEditada\r\n                                            : element.importeTotal,\r\n                                });\r\n                            });\r\n                        this.actualizarSumatoriaSubto();\r\n                    });\r\n            } else {\r\n                this.tablas.datos.modelosFactura = [];\r\n                this.sumatoriaSubtotales = 0;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Evento change del input del proovedor\r\n     */\r\n    onChangeInputProveedor = (busqueda) => {\r\n        this.proveedorSeleccionado = new Padron();\r\n\r\n        if (busqueda && busqueda.length >= 2) {\r\n            this.findProveedores(busqueda);\r\n        }\r\n\r\n        // Reseteo el indice\r\n        this.proveedorEnfocadoIndex = -1;\r\n    };\r\n\r\n    buscandoProveedor = false;\r\n\r\n    findProveedores = _.throttle((busqueda) => {\r\n        this.buscandoProveedor = true;\r\n        this.proveedores.filtrados.next([]);\r\n\r\n        this.recursoService\r\n            .getRecursoList(resourcesREST.padron)({\r\n                grupo: gruposParametros.proveedor,\r\n                elementos: busqueda,\r\n            })\r\n            .subscribe((proveedores) => {\r\n                this.proveedores.filtrados.next(proveedores);\r\n                this.buscandoProveedor = false;\r\n            });\r\n    }, 400);\r\n\r\n    /**\r\n     * El blur es cuando se hace un leave del input (caundo se apreta click afuera por ejemplo).\r\n     * Acá lo que hago es poner un array vacio como próx valor de los filtrados, cosa que la lista desaparezca porque no hay nada\r\n     * También retorno el proveedor seleccionado en el input\r\n     */\r\n    onBlurInputProv = (e) => {\r\n        // Actualizo proveedor seleccionado\r\n        try {\r\n            if (\r\n                this.proveedorSeleccionado &&\r\n                this.proveedorSeleccionado.padronCodigo\r\n            ) {\r\n                this.proveedorSeleccionado =\r\n                    this.proveedores.filtrados.value.find(\r\n                        (prov) =>\r\n                            prov.padronCodigo ===\r\n                            Number(this.proveedorSeleccionado.padronCodigo)\r\n                    );\r\n\r\n                // Lo busco en la base de facturacion\r\n                this.comprobanteCompraService\r\n                    .checkIfProvExistInFacturacion(this.proveedorSeleccionado)\r\n                    .then((resp) => {\r\n                        // Si pasa, todo ok\r\n                        // debugger;\r\n                    })\r\n                    .catch((err) => {\r\n                        // Si NO lo encuentra, le pido que lo cree\r\n                        this.utilsService.showModal(\"Aviso\")(\r\n                            \"Proveedor no existente en nuestra base. ¿Desea crearlo?\"\r\n                        )(() => {\r\n                            this.router.navigate(\r\n                                [\"/pages/tablas/proveedores/nuevo\"],\r\n                                {\r\n                                    queryParams: {\r\n                                        // codPadronCliente: clienteExistente.padronCodigo\r\n                                    },\r\n                                }\r\n                            );\r\n                        })({ tipoModal: \"confirmation\" }, () => {\r\n                            // this.dataVendedor = {\r\n                            //     vendedor: new Vendedor(),\r\n                            //     incluir: false\r\n                            // };\r\n                        });\r\n                    });\r\n            }\r\n\r\n            // Vacio filtrados\r\n            this.proveedores.filtrados.next([]);\r\n        } catch (err) {\r\n            // Muestro error\r\n            if (err && err.nombre && err.descripcion) {\r\n                this.utilsService.showModal(err.nombre)(err.descripcion)()();\r\n            }\r\n            // Vacio proveedor seleccionado\r\n            this.proveedorSeleccionado = new Padron();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Setea la fecha de compra calculandola dado un string en formato 'ddmm', parseando a 'dd/mm/aaaa'\r\n     */\r\n    onCalculateFecha = (e) => (keyFecha) => (objetoContenedor) => {\r\n        // Si selecciona en el datePicker (el evento es una fecha de datelikepiker)\r\n        if (e && e.day && e.month) {\r\n            const fechaLikePicker = new DateLikePicker(null, e);\r\n\r\n            if (keyFecha === \"fechaComprobante\") {\r\n                this[objetoContenedor][keyFecha] = fechaLikePicker;\r\n            }\r\n        }\r\n\r\n        if (\r\n            !this[objetoContenedor][keyFecha] ||\r\n            (typeof this[objetoContenedor][keyFecha] !== \"string\" &&\r\n                !this[objetoContenedor][keyFecha].day &&\r\n                !this[objetoContenedor][keyFecha].month)\r\n        )\r\n            return;\r\n\r\n        // La guardo\r\n        this[objetoContenedor][keyFecha] =\r\n            this.utilsService.stringToDateLikePicker(\r\n                this[objetoContenedor][keyFecha]\r\n            );\r\n\r\n        // Hago focus en el prox input\r\n        // (keyFecha==='fechaComprobante') || (keyFecha==='fechaContable') ?\r\n        //     document.getElementById(`fechaVto${this.utilsService.upperFirstLetter(objetoContenedor)}`).focus() : null;\r\n    };\r\n\r\n    /**\r\n     * Evento blur de pto venta y numero en comprobante\r\n     * tipo: puntoVenta o numero\r\n     * keyTipoe: comprobante, comprobanteRelacionado\r\n     */\r\n    onBlurNumeroAutocomp = (e) => (tipo: string) => (keyTipo: string) =>\r\n        (this[keyTipo][tipo] = this.comprobanteCompraService.autocompNroComp(\r\n            tipo\r\n        )(this[keyTipo]));\r\n\r\n    /**\r\n     * Actualizo el deposito seleccionado que me viene de tablaIngreso\r\n     */\r\n    onSelectDeposito = (depSelect: Deposito) => {\r\n        this.depositoSelec = depSelect;\r\n    };\r\n\r\n    /**\r\n     * Evento de cuando se apreta felcha arriba o feclah abajo en input de busca proveedor\r\n     */\r\n    keyPressInputTexto = (e: any) => (upOrDown) => {\r\n        e.preventDefault();\r\n        // Hace todo el laburo de la lista popup y retorna el nuevo indice seleccionado\r\n        this.proveedorEnfocadoIndex =\r\n            this.popupListaService.keyPressInputForPopup(upOrDown)(\r\n                this.proveedores.filtrados.value\r\n            )(this.proveedorEnfocadoIndex);\r\n    };\r\n\r\n    /**\r\n     * Evento on enter en el input de buscar proveedor\r\n     */\r\n    onEnterInputProv = (e: any) => {\r\n        e.preventDefault();\r\n        this.proveedores.filtrados.subscribe((provsLista) => {\r\n            // Busco el producto\r\n            const provSelect =\r\n                provsLista && provsLista.length\r\n                    ? provsLista[this.proveedorEnfocadoIndex]\r\n                    : null;\r\n            // Lo selecciono\r\n            provSelect ? this.popupLista.onClickListProv(provSelect) : null;\r\n            // Reseteo el index\r\n            this.proveedorEnfocadoIndex = -1;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Agrega o elimina una forma pago de las seleccionadas. Tambien muestra detalle de la lista correspondiente\r\n     */\r\n    handleFormaPagoSelec = (fp: FormaPago) => (tipoOperacion: string) => {\r\n        // Agrego o elimino\r\n        if (tipoOperacion === \"add\") {\r\n            // Primero los borro (si quedaorn de anbtes)\r\n            this.formasPagoSeleccionadas = this.formasPagoSeleccionadas.filter(\r\n                (fpSelec) => fpSelec.idFormaPago !== fp.idFormaPago\r\n            );\r\n            // Ahora los agrego\r\n            this.formasPagoSeleccionadas.push(fp);\r\n        } else {\r\n            this.formasPagoSeleccionadas = this.formasPagoSeleccionadas.filter(\r\n                (fpSelec) => fpSelec.idFormaPago !== fp.idFormaPago\r\n            );\r\n        }\r\n\r\n        // Ahora mappeo los detalles de las formas de pago seleccionadas para mostrarlos en la grilla de el medio\r\n        this.tablas.datos.detallesFormaPago = this.formasPagoSeleccionadas\r\n\r\n            .map((fp) =>\r\n                Object.assign([], fp.detalles).map((det) => {\r\n                    const auxDet: DetalleFormaPago = Object.assign({}, det);\r\n                    auxDet.formaPagoDescrip = fp.descripcion;\r\n\r\n                    return auxDet;\r\n                })\r\n            )\r\n            .reduce((a, b) => [...a].concat([...b]), []); // Aca aplasto el array bidimensional a uno de una dimensión\r\n\r\n        // Caso especial: La forma de pago seleccionada es contado, por lo que detalles va a ser length === 1. Entonces le sugieron que el monto a pagar sea el mismo que el resto a pagar\r\n        this.refreshMontoDetallesFormaPago();\r\n    };\r\n\r\n    /**\r\n     * Refresca el monto. Es un caso particular\r\n     */\r\n    refreshMontoDetallesFormaPago = (noCambiarOriginal?) => {\r\n        if (\r\n            this.tablas.datos.detallesFormaPago &&\r\n            this.tablas.datos.detallesFormaPago.length === 1\r\n        ) {\r\n            // Esto es un horror, pero me da paja mejorarlo\r\n            setTimeout(() => {\r\n                const auxDetalleMutado = Object.assign(\r\n                    {},\r\n                    this.tablas.datos.detallesFormaPago[0]\r\n                );\r\n\r\n                auxDetalleMutado.monto =\r\n                    this.cotizacionDatos.total + this.sumatoriaSubtotales;\r\n                const nuevosDetalles = [auxDetalleMutado];\r\n                this.tablas.datos.detallesFormaPago = nuevosDetalles;\r\n                if (!noCambiarOriginal) {\r\n                    this.valorCalculadoFactura = 0;\r\n                    this.tablas.datos.detallesFormaPago.forEach((detalle) => {\r\n                        this.valorCalculadoFactura += detalle.monto;\r\n                    });\r\n                }\r\n                // debugger;\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    /* verificoRelacionadoObligatorio = Si comprobantes relacionadoObligatorio esta en true, no dejo que se puedan agregar articulos porque\r\n      se toman desde los comprobantes relacionados ya cargados (ejemplo remitos)\r\n    */\r\n    verificoRelacionadoObligatorio = (val: Boolean) => {\r\n        if (val == true) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Evento cuando cambio cteTipo en comprobante\r\n     */\r\n    onChangeCteTipo = (cteTipoSelect: TipoComprobante) => {\r\n        this.tiposComprobantesRel = this.recursoService.getRecursoList(\r\n            resourcesREST.cteTipo\r\n        )({\r\n            sisModulo: sisModulos.compra,\r\n            idCteTipo: cteTipoSelect.idCteTipo,\r\n            sisTipoOperacion: this.tipoOpSelect.idSisTipoOperacion,\r\n        });\r\n        this.tituloCardComprobante =\r\n            \"COMPROBANTE: \" + cteTipoSelect.descripcion;\r\n        this.comprobante.numerador = new Numerador();\r\n        if (cteTipoSelect.comprobante.relacionadoObligatorio == true) {\r\n            this.estadoRelacionadoObligatorio = true;\r\n        } else {\r\n            this.estadoRelacionadoObligatorio = false;\r\n        }\r\n\r\n        // Actualizo total cotizacion (si no incluye neto, es 0)\r\n        // this.cotizacionDatos.total =\r\n        //     this.comprobante.tipo.comprobante.incluyeNeto ?\r\n        //         _.sumBy(\r\n        //             this.tablas.datos.productosPend,\r\n        //             (prod) => Number(prod.importe) ? Number(prod.importe) : 0\r\n        //         ) : 0;\r\n\r\n        // // Actualizo sumatoria subtotales\r\n        // this.actualizarSumatoriaSubto();\r\n\r\n        // Blanqueo todo lo que le sigue\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n        this.tablas.datos.productosPend = [];\r\n        this.precioOriginal = [];\r\n        this.tablas.datos.modelosFactura = [];\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.pesificado = false;\r\n        this.condicionesConfirmadas = false;\r\n        this.dolarizadoAlVto = false;\r\n        this.interesMensualCompra = 0.0;\r\n        this.canjeInsumos = false;\r\n        this.tipoCambio = \"divisa\";\r\n        // Limpio formas pago\r\n        // this.dataTablaFormasPago = null;\r\n        // this.formasPagoSeleccionadas = [];\r\n\r\n        // Limpio cotizacion datos\r\n        this.cotizacionDatos.total = 0;\r\n        this.sumatoriaSubtotales = 0;\r\n\r\n        // Actualizo monedas\r\n        this.monedas.next(cteTipoSelect.comprobante.monedas);\r\n    };\r\n\r\n    // HARD Codign Exxxxtreme\r\n    compareFnMonedas = (m1: Moneda, m2: Moneda) =>\r\n        m1 && m2 ? m1.idMoneda === m2.idMoneda : m1 === m2;\r\n    // m1 ? m1.idMoneda === 1 : false\r\n\r\n    /**\r\n     * Busca facturas\r\n     */\r\n    fetchFacturas = () => {\r\n        // Busco las facturas de los productos\r\n        this.comprobanteCompraService\r\n            .buscaModelos(\r\n                this.tablas.datos.productosPend,\r\n                this.comprobante.moneda\r\n                    ? this.comprobante.moneda.idMoneda\r\n                    : null,\r\n                this.proveedorSeleccionado.padronCodigo\r\n            )\r\n            .subscribe((modelProds) => {\r\n                this.tablas.datos.modelosFactura = modelProds;\r\n                this.tablas.datos.modelosFactura =\r\n                    this.tablas.datos.modelosFactura.map((element) => {\r\n                        return (element = {\r\n                            ...element,\r\n                            importeArs:\r\n                                this.comprobante.moneda.idMoneda === 2\r\n                                    ? element.importeTotal *\r\n                                      this.cotizacionDolarEditada\r\n                                    : element.importeTotal,\r\n                        });\r\n                    });\r\n                this.actualizarSumatoriaSubto();\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Cuyando cambia el tipo operacion se actualizan los tipos comprobantes\r\n     */\r\n    onChangeTipoOperacion = (tipoOpSelect: SisTipoOperacion) => {\r\n        this.depositosAMostrar = [];\r\n        this.tiposComprobantes = this.recursoService.getRecursoList(\r\n            resourcesREST.cteTipo\r\n        )({\r\n            sisTipoOperacion: tipoOpSelect.idSisTipoOperacion,\r\n            sisSitIva:\r\n                this.proveedorSeleccionado && this.proveedorSeleccionado.condIva\r\n                    ? this.proveedorSeleccionado.condIva.descCorta\r\n                    : null,\r\n        });\r\n        //this.depositosAMostrar = this.depositosFiltrados.map(tiposOpDepositos => tiposOpDepositos.idSisTipoOperacion == tipoOpSelect.idSisTipoOperacion);\r\n        for (let i = 0; i < this.allDepositos.length; i++) {\r\n            if (\r\n                _.includes(\r\n                    this.filtro[tipoOpSelect.idSisTipoOperacion],\r\n                    this.allDepositos[i].idDeposito\r\n                )\r\n            ) {\r\n                this.depositosAMostrar.push(this.allDepositos[i]);\r\n            }\r\n        }\r\n        if (this.depositosAMostrar.length === 0) {\r\n            this.depositosAMostrar = this.allDepositos;\r\n        }\r\n        /*this.depositos = this.recursoService.getRecursoList(resourcesREST.depositos)({\r\n            todos: tipoOpSelect.depositoDestino\r\n        });*/\r\n\r\n        this.limpioComprobanteYGrilla();\r\n    };\r\n\r\n    limpioComprobanteYGrilla = () => {\r\n        // Limpio grillas y datos comprobante\r\n        this.comprobante = new Comprobante();\r\n        this.comprobanteRelacionado = new ComprobanteRelacionado();\r\n        this.tablas.datos.productosPend = [];\r\n        this.precioOriginal = [];\r\n        this.pesificado = false;\r\n        this.condicionesConfirmadas = false;\r\n        this.dolarizadoAlVto = false;\r\n        this.interesMensualCompra = 0.0;\r\n        this.canjeInsumos = false;\r\n        this.tipoCambio = \"divisa\";\r\n        this.tablas.datos.modelosFactura = [];\r\n        this.cotizacionDatos.total = 0;\r\n        this.sumatoriaSubtotales = 0;\r\n        this.depositoSelec = null;\r\n        this.tablas.datos.detallesFormaPago = [];\r\n        this.cotizacionDolarEditada =\r\n            this.cotizacionDatos.cotizacion.cotizacion;\r\n\r\n        // Refresco formas pago\r\n        this.dataTablaFormasPago = this.recursoService.getRecursoList(\r\n            resourcesREST.formaPago\r\n        )({\r\n            codPadron: this.proveedorSeleccionado\r\n                ? this.proveedorSeleccionado.padronCodigo\r\n                : null,\r\n            idSisModulo: sisModulos.compra,\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Checkea si el resto a pagar es valido\r\n     */\r\n    isRestoPagarValid = () => {\r\n        if (this.comprobante.tipo.requiereFormaPago) {\r\n            /*\r\n             * El importe no es valido si es CERO y No se permite importe cero\r\n             */\r\n            const importeCeroValido =\r\n                this.comprobante &&\r\n                this.comprobante.tipo &&\r\n                this.comprobante.tipo.comprobante &&\r\n                this.cotizacionDatos.total + this.sumatoriaSubtotales === 0 &&\r\n                this.comprobante.tipo.comprobante.permiteImporteCero;\r\n            return (\r\n                importeCeroValido ||\r\n                this.calcRestoPagar() === \"0.00\" ||\r\n                this.calcRestoPagar() === \"0\"\r\n            );\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Calcula el resto pagar\r\n     */\r\n    calcRestoPagar = () => {\r\n        const sumMontos = _.sumBy(\r\n            this.tablas.datos.detallesFormaPago,\r\n            (fPago) => (Number(fPago.monto) ? Number(fPago.monto) : 0)\r\n        );\r\n        // Los paréntesis son ilustrativos, ya sabemos que la suma es asociativa y conmutativa\r\n        let restoPagar = this.utilsService.toLocateString2(\r\n            Number(\r\n                this.cotizacionDatos.total +\r\n                    this.sumatoriaSubtotales -\r\n                    sumMontos\r\n            ).toFixed(2)\r\n        );\r\n        /*console.log(restoPagar);\r\n        restoPagar = parseFloat(restoPagar);\r\n        console.log(restoPagar);*/\r\n        return restoPagar === \"-0.00\" ? \"0.00\" : restoPagar;\r\n    };\r\n\r\n    // onBlurNumeroCteRelacionado = (evento) => {\r\n    //     this.onBlurNumeroAutocomp(evento)('numero')('comprobanteRelacionado')\r\n\r\n    //     // Focus en input para agregar producto\r\n    //     document.getElementById('addInput') ? document.getElementById('addInput').focus() : null\r\n    // }\r\n    onBlurOrEnterFechaComp = ($event) => {\r\n        this.onCalculateFecha($event)(\"fechaComprobante\")(\"comprobante\");\r\n\r\n        // Hago foco en el primer checbkox de la sformas de pago (el timeout es necesario para que espere a que se haga la consulta)\r\n        // en gral esta consulta dura poquito (entre 10 y 40 milisegundos). Por eso con 150 milisegundos de espera es mas que suficiente\r\n        setTimeout(() => {\r\n            // Hago focus al siguiente elemento (la lista de forma pagos, primer elemento)\r\n            const primerCheckBoxFp: any = document.getElementById(\"fp-check-0\");\r\n            if (primerCheckBoxFp) {\r\n                // primerCheckBoxFp.checked = true;\r\n                primerCheckBoxFp.focus();\r\n            }\r\n        }, 150);\r\n    };\r\n    onBlurOrEnterFechaVtoComp = ($event) => {\r\n        this.onCalculateFecha($event)(\"fechaVto\")(\"comprobante\");\r\n\r\n        // Hago foco en el primer checbkox de la sformas de pago (el timeout es necesario para que espere a que se haga la consulta)\r\n        // en gral esta consulta dura poquito (entre 10 y 40 milisegundos). Por eso con 150 milisegundos de espera es mas que suficiente\r\n        setTimeout(() => {\r\n            // Hago focus al siguiente elemento (la lista de forma pagos, primer elemento)\r\n            const primerCheckBoxFp: any = document.getElementById(\"fp-check-0\");\r\n            if (primerCheckBoxFp) {\r\n                // primerCheckBoxFp.checked = true;\r\n                primerCheckBoxFp.focus();\r\n            }\r\n        }, 150);\r\n    };\r\n\r\n\r\n    onBlurOrEnterFechaContableComp = ($event) => {\r\n        this.onCalculateFecha($event)(\"fechaContable\")(\"comprobante\");\r\n\r\n        // Hago foco en el primer checbkox de la sformas de pago (el timeout es necesario para que espere a que se haga la consulta)\r\n        // en gral esta consulta dura poquito (entre 10 y 40 milisegundos). Por eso con 150 milisegundos de espera es mas que suficiente\r\n        setTimeout(() => {\r\n            // Hago focus al siguiente elemento (la lista de forma pagos, primer elemento)\r\n            const primerCheckBoxFp: any = document.getElementById(\"fp-check-0\");\r\n            if (primerCheckBoxFp) {\r\n                // primerCheckBoxFp.checked = true;\r\n                primerCheckBoxFp.focus();\r\n            }\r\n        }, 150);\r\n    };\r\n\r\n\r\n    /**\r\n     * En seleccionado por defectp giardp ptoventa y numerador\r\n     */\r\n    onChangePtoVentaNro = (selectNumerador: Numerador) => {\r\n        // this.comprobante.fechaComprobante = new DateLikePicker(\r\n        //     new Date(selectNumerador.fechaApertura)\r\n        // );\r\n    };\r\n\r\n    // ngIfNumeradorComprobante = () => {\r\n    //     if (\r\n    //         !(\r\n    //             this.comprobante &&\r\n    //             this.comprobante.letraCodigo &&\r\n    //             this.comprobante.letraCodigo.numeradores &&\r\n    //             this.comprobante.letraCodigo.numeradores.length > 0\r\n    //         )\r\n    //     ) {\r\n    //         if (!this.comprobante.numerador || !this.comprobante.numerador.ptoVenta) {\r\n    //             if (!this.comprobante.numerador) {\r\n    //                 this.comprobante.numerador = new Numerador();\r\n    //             }\r\n    //             this.comprobante.numerador.ptoVenta = new PtoVenta();\r\n    //         }\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    // ngIfNumeradorFactura = () => {\r\n    //     if (\r\n    //         !(\r\n    //             this.factura &&\r\n    //             this.factura.letraCodigo &&\r\n    //             this.factura.letraCodigo.numeradores &&\r\n    //             this.factura.letraCodigo.numeradores.length > 0\r\n    //         )\r\n    //     ) {\r\n    //         if (!this.factura.numerador) {\r\n    //             this.factura.numerador = new Numerador();\r\n    //         }\r\n    //         if (!this.factura.numerador.ptoVenta) {\r\n    //             this.factura.numerador.ptoVenta = new PtoVenta();\r\n    //         }\r\n    //         return true;\r\n    //     } else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    onBlurPtoVenta = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobante.numerador &&\r\n        this.comprobante.numerador.ptoVenta\r\n            ? (this.comprobante.numerador.ptoVenta.ptoVenta =\r\n                  this.comprobante.numerador.ptoVenta.ptoVenta.padStart(4, \"0\"))\r\n            : null;\r\n\r\n    onBlurNumerador = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobante.numerador &&\r\n        this.comprobante.numerador.numerador\r\n            ? (this.comprobante.numerador.numerador =\r\n                  this.comprobante.numerador.numerador.padStart(8, \"0\"))\r\n            : null;\r\n\r\n    onBlurPtoVentaCteRel = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobanteRelacionado.puntoVenta\r\n            ? (this.comprobanteRelacionado.puntoVenta =\r\n                  this.comprobanteRelacionado.puntoVenta.padStart(4, \"0\"))\r\n            : null;\r\n\r\n    onBlurNumeradorCteRel = (e) =>\r\n        this.utilsService.onBlurInputNumber(e) &&\r\n        this.comprobanteRelacionado.numero\r\n            ? (this.comprobanteRelacionado.numero =\r\n                  this.comprobanteRelacionado.numero.padStart(8, \"0\"))\r\n            : null;\r\n\r\n    onChangeLetra = (letraSelect: LetraCodigo) =>\r\n        (this.comprobante.numerador =\r\n            letraSelect &&\r\n            letraSelect.numeradores &&\r\n            letraSelect.numeradores.length > 0\r\n                ? letraSelect.numeradores[0]\r\n                : null);\r\n\r\n    /**\r\n     * Deshabilita btn grabar de acuerdo a diferentes parámetors\r\n     */\r\n    isDisabledConfirm = () => {\r\n        // const auxPermiteImporteCero = this.comprobante.tipo && this.comprobante.tipo.comprobante ?\r\n        //     this.comprobante.tipo.comprobante.permiteImporteCero : false;\r\n\r\n        const datosNoValidos =\r\n            !this.comprobanteCompraService.checkIfDatosValidosComprobante(\r\n                this.comprobante\r\n            )(this.proveedorSeleccionado)(this.tablas.datos.productosPend)(\r\n                this.tablas.datos.modelosFactura\r\n            )(this.depositoSelec);\r\n\r\n        // Si permite importe cero, la forma de pago NO se controla (por eso retorno false)\r\n\r\n        const formaPagoNoValido =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.requiereFormaPago &&\r\n            (!this.tablas.datos.detallesFormaPago ||\r\n                this.tablas.datos.detallesFormaPago.length <= 0);\r\n\r\n        const restoPagarNoValido =\r\n            this.tablas.datos.detallesFormaPago &&\r\n            this.tablas.datos.detallesFormaPago.length > 0 &&\r\n            !this.isRestoPagarValid();\r\n\r\n        const noPermiteImporteCero =\r\n            this.cotizacionDatos &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            this.cotizacionDatos.total + this.sumatoriaSubtotales === 0 &&\r\n            !this.comprobante.tipo.comprobante.permiteImporteCero;\r\n\r\n        const condicionesComercializacionNoValidas =\r\n            this.comprobante &&\r\n            this.comprobante.tipo &&\r\n            this.comprobante.tipo.comprobante &&\r\n            this.comprobante.tipo.comprobante.idSisComprobantes == 4\r\n                ? !this.condicionesConfirmadas\r\n                : false;\r\n        return (\r\n            datosNoValidos ||\r\n            restoPagarNoValido ||\r\n            formaPagoNoValido ||\r\n            noPermiteImporteCero ||\r\n            condicionesComercializacionNoValidas\r\n        );\r\n    };\r\n\r\n    onChangeCotDolar = () => {\r\n        if (\r\n            this.tablas.datos.productosPend &&\r\n            this.tablas.datos.productosPend.length > 0 &&\r\n            this.cotizacionDolarEditada > 0 &&\r\n            this.comprobante.moneda.idMoneda != 2\r\n        ) {\r\n            let tablaProductos: ProductoPendiente[] =\r\n                this.tablas.datos.productosPend.map((element, i) => {\r\n                    if (\r\n                        element.moneda === \"u$s\" ||\r\n                        element.producto.moneda.descripcion === \"u$s\"\r\n                    ) {\r\n                        let nuevoPrecio =\r\n                            (this.cotizacionDolarEditada *\r\n                                this.precioOriginal[i].precio) /\r\n                            this.cotizacionDatos.cotizacion.cotizacion;\r\n                        return {\r\n                            ...element,\r\n                            precio: nuevoPrecio,\r\n                            importe: nuevoPrecio * element.pendiente,\r\n                        };\r\n                    } else {\r\n                        return element;\r\n                    }\r\n                });\r\n            this.tablas.datos.productosPend = tablaProductos;\r\n            this.actualizarDatosProductos();\r\n        }\r\n        if (this.comprobante.moneda.idMoneda === 2) {\r\n            for (let i = 0; i < this.tablas.datos.modelosFactura.length; i++) {\r\n                this.tablas.datos.modelosFactura[i].importeArs =\r\n                    this.tablas.datos.modelosFactura[i].importeTotal *\r\n                    this.cotizacionDolarEditada;\r\n            }\r\n        }\r\n    };\r\n\r\n    public onMonedaChange = (event) => {\r\n        if (event.idMoneda === 2) {\r\n            this.tablas.columnas.columnasFactura =\r\n                this.comprobanteCompraService.getColumnsFacturaDolares();\r\n        } else {\r\n            this.tablas.columnas.columnasFactura =\r\n                this.comprobanteCompraService.getColumnsFactura();\r\n        }\r\n    };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.component.ts","module.exports = \"<ba-card class=\\\"comprobante-compra\\\">\\r\\n    <form #compForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <label for=\\\"proveedorSeleccionado\\\">{{preCargaPadron}}</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <input  #inputProveedorDom\\r\\n                            autocomplete=\\\"off\\\"\\r\\n                            id=\\\"inputProveedor\\\"\\r\\n                            (blur)=\\\"onBlurInputProv($event)\\\"\\r\\n                            (ngModelChange)=\\\"onChangeInputProveedor($event)\\\"\\r\\n                            [(ngModel)]=\\\"proveedorSeleccionado.padronCodigo\\\"\\r\\n                            name=\\\"padronCod\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            placeholder=\\\"\\\"\\r\\n                            (keyup.enter)=\\\"onEnterInputProv($event)\\\"\\r\\n                            (keydown.arrowdown)=\\\"keyPressInputTexto($event)('down')\\\"\\r\\n                            (keydown.arrowup)=\\\"keyPressInputTexto($event)('up')\\\"\\r\\n                            required\\r\\n                            >\\r\\n\\r\\n                    <div\\r\\n                        class=\\\"spinner-prov-container\\\"\\r\\n                        *ngIf=\\\"\\r\\n                            utilsService.ifFocused(inputProveedorDom)\\r\\n                            &&\\r\\n                            (\\r\\n                                !proveedorSeleccionado ||\\r\\n                                !proveedorSeleccionado.padronApelli\\r\\n                            )\\r\\n                            &&\\r\\n                            proveedorSeleccionado && proveedorSeleccionado.padronCodigo && proveedorSeleccionado.padronCodigo.length > 0\\r\\n                            &&\\r\\n                            buscandoProveedor\\r\\n                        \\\">\\r\\n                        <i class=\\\"fa fa-spinner fa-spin\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <popup-lista    *ngIf=\\\"utilsService.ifFocused(inputProveedorDom)\\\"\\r\\n                            [items]=\\\"proveedores.filtrados.asObservable().distinctUntilChanged()\\\"\\r\\n                            [keysToShow]=\\\"['padronApelli', 'padronNombre', 'padronCodigo']\\\"\\r\\n                            [onClickItem]=\\\"popupLista.onClickListProv\\\"\\r\\n                            [fatherPosition]=\\\"popupLista.getOffsetOfInputProveedor()\\\">\\r\\n            </popup-lista>\\r\\n\\r\\n            <div class=\\\"col-sm-3\\\">\\r\\n                <label for=\\\"cuit\\\">NOMBRE Y APELLIDO</label>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input autocomplete=\\\"off\\\"  [disabled]=\\\"true\\\" name=\\\"padronApellido\\\" [(ngModel)]=\\\"proveedorSeleccionado.padronApelli\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombreProveedor\\\" placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <label for=\\\"cuit\\\">CUIT</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <input autocomplete=\\\"off\\\"  [disabled]=\\\"true\\\" name=\\\"cuitPadr\\\" [(ngModel)]=\\\"proveedorSeleccionado.cuit\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cuit\\\" placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-1\\\">\\r\\n                <label for=\\\"iva\\\">SIT.</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <input autocomplete=\\\"off\\\"  [disabled]=\\\"true\\\" name=\\\"descCortaIva\\\" [ngModel]=\\\"proveedorSeleccionado.condIva ? proveedorSeleccionado.condIva.descCorta : ''\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"iva\\\" placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <label for=\\\"tipoOperacionSelect\\\">Tipo Operacion:</label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n\\r\\n                    <select\\r\\n                        required\\r\\n                        class=\\\"form-control without-padding\\\"\\r\\n                        name=\\\"tipoOPselec\\\"\\r\\n                        [(ngModel)]=\\\"tipoOpSelect\\\"\\r\\n                        (ngModelChange)=\\\"onChangeTipoOperacion($event)\\\"\\r\\n                        [ngStyle]=\\\"{padding: '0px 8px 0px 8px'}\\\" id=\\\"tipoOperacionSelect\\\">\\r\\n                        <option *ngFor=\\\"let tipoOp of tiposOperacion | async\\\" [ngValue]=\\\"tipoOp\\\">\\r\\n                            {{tipoOp.descripcion}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <label class=\\\"add-item-label\\\" for=\\\"depositoInput\\\">Deposito: </label>\\r\\n                <div class=\\\"form-group inline-group\\\">\\r\\n                      <select required [compareWith]=\\\"utilsService.dropdownCompareWith\\\" name=\\\"depoSelect\\\" [(ngModel)]=\\\"depositoSelec\\\" class=\\\"form-control without-padding\\\">\\r\\n                        <option *ngFor=\\\"let dep of depositosAMostrar\\\" [ngValue]=\\\"dep\\\">\\r\\n                            {{dep.descripcion}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row custom-card-container\\\">\\r\\n            <custom-card class=\\\"col-sm-6 card-flex-column\\\" title=\\\"{{ tituloCardComprobante }}\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4 without-padding\\\">\\r\\n                        <div class=\\\"col-sm-6 inline-flex\\\">\\r\\n                            <div class=\\\"form-group inline-group\\\">\\r\\n                                <label for=\\\"cteTipo\\\">Cte:</label>\\r\\n                                <select\\r\\n                                    id=\\\"cteTipo\\\" name=\\\"compTipoSelect\\\" required\\r\\n                                    class=\\\"form-control without-padding\\\" [ngStyle]=\\\"{ padding: '1px 8px 0px 8px', 'min-width': '55px', 'margin-top': '1px' }\\\"\\r\\n                                    [(ngModel)]=\\\"comprobante.tipo\\\"\\r\\n                                    (ngModelChange)=\\\"onChangeCteTipo($event)\\\"\\r\\n                                    >\\r\\n                                    <option *ngFor=\\\"let tipoComp of tiposComprobantes | async\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                        {{tipoComp.descCorta}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-5 inline-flex\\\">\\r\\n                            <div class=\\\"form-group inline-group\\\">\\r\\n                                <select\\r\\n                                    *ngIf=\\\"comprobante && comprobante.tipo && comprobante.tipo.letrasCodigos\\\"\\r\\n                                    id=\\\"cteTipo\\\" class=\\\"form-control without-padding\\\" name=\\\"letraSelct\\\" required\\r\\n                                    [ngStyle]=\\\"{padding: '1px 2px 0px 8px', 'min-width': '55px'}\\\"\\r\\n                                    [(ngModel)]=\\\"comprobante.letraCodigo\\\"\\r\\n                                    (ngModelChange)=\\\"onChangeLetra($event)\\\"\\r\\n                                    >\\r\\n                                    <option *ngFor=\\\"let lc of comprobante.tipo.letrasCodigos\\\" [ngValue]=\\\"lc\\\">\\r\\n                                        {{ lc.letra.letra }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-5 without-padding\\\">\\r\\n                        <div [ngStyle]=\\\"{'justify-content': 'center'}\\\" class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteNro\\\">Nro:</label>\\r\\n                            <div *ngIf=\\\"\\r\\n                                comprobante &&\\r\\n                                comprobante.letraCodigo &&\\r\\n                                comprobante.letraCodigo.numeradores &&\\r\\n                                comprobante.letraCodigo.numeradores.length > 0\\r\\n                                \\\">\\r\\n                                <select     required\\r\\n                                            id=\\\"selectPtoVentaNum\\\"\\r\\n                                            class=\\\"form-control\\\"\\r\\n                                            [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\"\\r\\n                                            name=\\\"compNumerador\\\"\\r\\n                                            [(ngModel)]=\\\"comprobante.numerador\\\"\\r\\n                                            (ngModelChange)=\\\"onChangePtoVentaNro($event)\\\"\\r\\n                                            >\\r\\n                                    <option *ngFor=\\\"let upNum of comprobante.letraCodigo.numeradores\\\" [ngValue]=\\\"upNum\\\">\\r\\n                                        {{\\r\\n                                            upNum.ptoVenta.ptoVenta.toString().padStart(4, '0')\\r\\n                                        }} - {{\\r\\n                                            upNum.numerador.toString().padStart(8, '0')\\r\\n                                        }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <!-- *ngIf=\\\"ngIfNumeradorComprobante()\\\" -->\\r\\n                            <div\\r\\n                                *ngIf=\\\"comprobanteService.comprobanteContainNumerador(comprobante)\\\"\\r\\n                                [ngStyle]=\\\"{display: 'flex'}\\\"\\r\\n                                >\\r\\n                                <input autocomplete=\\\"off\\\"   required\\r\\n                                        maxlength=\\\"4\\\"\\r\\n                                        (blur)=\\\"\\r\\n                                            onBlurPtoVenta($event)\\r\\n                                        \\\"\\r\\n                                        name=\\\"compPtoVenta\\\"\\r\\n                                        [(ngModel)]=\\\"comprobante.numerador.ptoVenta.ptoVenta\\\"\\r\\n                                        type=\\\"text\\\" class=\\\"form-control pre-numero-input text-right\\\" id=\\\"puntoVenta\\\" placeholder=\\\"\\\">\\r\\n\\r\\n                                <input autocomplete=\\\"off\\\"   required\\r\\n                                        maxlength=\\\"8\\\"\\r\\n                                        (blur)=\\\"\\r\\n                                            onBlurNumerador($event)\\r\\n                                        \\\"\\r\\n                                        name=\\\"compNumero\\\"\\r\\n                                        [(ngModel)]=\\\"comprobante.numerador.numerador\\\"\\r\\n                                        type=\\\"text\\\" class=\\\"form-control text-right\\\" id=\\\"numero\\\" placeholder=\\\"\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                        <div class=\\\"form-group inline-group\\\">\\r\\n                            <label for=\\\"cteMoneda\\\">Moneda:</label>\\r\\n                            <select required [compareWith]=\\\"compareFnMonedas\\\" name=\\\"compMoneda\\\" [(ngModel)]=\\\"comprobante.moneda\\\" (ngModelChange)=\\\"onMonedaChange($event)\\\" class=\\\"form-control without-padding\\\" [ngStyle]=\\\"{padding: '2px 8px 0px 8px'}\\\" id=\\\"cteMoneda\\\">\\r\\n                                <option *ngFor=\\\"let mon of monedas | async\\\" [ngValue]=\\\"mon\\\">\\r\\n                                    {{mon.descripcion}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                            <label for=\\\"fechaComprobante\\\">Fecha Emisión: </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input autocomplete=\\\"off\\\"   required\\r\\n                                        [disabled]=\\\"\\r\\n                                    !comprobante ||\\r\\n                                    !comprobante.letraCodigo ||\\r\\n                                    (\\r\\n                                        comprobante &&\\r\\n                                        comprobante.letraCodigo &&\\r\\n                                        comprobante.letraCodigo.numeradores &&\\r\\n                                        comprobante.letraCodigo.numeradores.length > 0 &&\\r\\n                                        (\\r\\n                                            !comprobante.numerador || !comprobante.numerador.fechaApertura\\r\\n                                        )\\r\\n                                    )\\r\\n                                \\\"\\r\\n                                        (ngModelChange)=\\\"onCalculateFecha($event)('fechaComprobante')('comprobante')\\\"\\r\\n                                        (blur)=\\\"onCalculateFecha($event)('fechaComprobante')('comprobante')\\\"\\r\\n                                        (keyup.enter)=\\\"onCalculateFecha($event)('fechaComprobante')('comprobante')\\\"\\r\\n                                        class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"dd/mm/aaaa\\\"\\r\\n                                        name=\\\"fechaComp\\\"\\r\\n                                        [(ngModel)]=\\\"comprobante.fechaComprobante\\\"\\r\\n                                        ngbDatepicker\\r\\n                                        #dComp=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                            <label for=\\\"fechaVto\\\">Fecha Vencimiento: </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input autocomplete=\\\"off\\\"   required\\r\\n                                [disabled]=\\\"\\r\\n                                    !comprobante ||\\r\\n                                    !comprobante.letraCodigo ||\\r\\n                                    (\\r\\n                                        comprobante &&\\r\\n                                        comprobante.letraCodigo &&\\r\\n                                        comprobante.letraCodigo.numeradores &&\\r\\n                                        comprobante.letraCodigo.numeradores.length > 0 &&\\r\\n                                        (\\r\\n                                            !comprobante.numerador || !comprobante.numerador.fechaApertura\\r\\n                                        )\\r\\n                                    )\\r\\n                                \\\"\\r\\n                                        id=\\\"fechaVtoComprobante\\\"\\r\\n                                        (blur)=\\\"onBlurOrEnterFechaVtoComp($event)\\\"\\r\\n                                        (keyup.enter)=\\\"onBlurOrEnterFechaVtoComp($event)\\\"\\r\\n                                        class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"dd/mm/aaaa\\\"\\r\\n                                        name=\\\"dVto\\\"\\r\\n                                        [(ngModel)]=\\\"comprobante.fechaVto\\\" ngbDatepicker #dVto=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dVto.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                            <label for=\\\"fechaContable\\\">Fecha Contable: </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input autocomplete=\\\"off\\\"   required\\r\\n                                [disabled]=\\\"\\r\\n                                    !comprobante ||\\r\\n                                    !comprobante.letraCodigo ||\\r\\n                                    (\\r\\n                                        comprobante &&\\r\\n                                        comprobante.letraCodigo &&\\r\\n                                        comprobante.letraCodigo.numeradores &&\\r\\n                                        comprobante.letraCodigo.numeradores.length > 0 &&\\r\\n                                        (\\r\\n                                            !comprobante.numerador || !comprobante.numerador.fechaApertura\\r\\n                                        )\\r\\n                                    )\\r\\n                                \\\"\\r\\n                                        id=\\\"fechaContableComprobante\\\"\\r\\n                                        (blur)=\\\"onBlurOrEnterFechaContableComp($event)\\\"\\r\\n                                        (keyup.enter)=\\\"onBlurOrEnterFechaContableComp($event)\\\"\\r\\n                                        class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"dd/mm/aaaa\\\"\\r\\n                                        name=\\\"dCble\\\"\\r\\n                                        [(ngModel)]=\\\"comprobante.fechaContable\\\" ngbDatepicker #dCble=\\\"ngbDatepicker\\\">\\r\\n                                <div class=\\\"input-group-append\\\">\\r\\n                                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dCble.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                        <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                    </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n           </custom-card>\\r\\n           <div class=\\\"col-sm-6 comp-rel-card-container\\\">\\r\\n           <ngb-tabset [destroyOnHide]=false class=\\\"col-sm-12 tabs-opciones\\\">\\r\\n                    <ngb-tab title=\\\"Forma de Pago\\\">\\r\\n                        <ng-template ngbTabContent>\\r\\n                            <div class=\\\"fpago-content\\\">\\r\\n                                <tabla-forma-pago-comp      class=\\\"fpago-tabla\\\"\\r\\n                                                            [moneda]=\\\"comprobante.moneda\\\"\\r\\n                                                            [dataTable]=\\\"dataTablaFormasPago\\\"\\r\\n                                                            (onAddSelecFormaPago)=\\\"handleFormaPagoSelec($event)('add')\\\"\\r\\n                                                            (onRemoveSelecFormaPago)=\\\"handleFormaPagoSelec($event)('remove')\\\">\\r\\n                                </tabla-forma-pago-comp>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n                    <ngb-tab title=\\\"Comprobante Relacionado\\\">\\r\\n                        <ng-template ngbTabContent>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-5\\\">\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"cteRelTipo\\\">Cte:</label>\\r\\n\\r\\n                                        <select id=\\\"cteRelSelect\\\" name=\\\"tipoCompRel\\\"\\r\\n                                         [(ngModel)]=\\\"comprobanteRelacionado.tipo\\\"\\r\\n                                         class=\\\"form-control without-padding\\\"\\r\\n                                         [ngStyle]=\\\"{padding: '2px 8px 0px 8px'}\\\" id=\\\"cteRelTipo\\\">\\r\\n\\r\\n                                            <option *ngFor=\\\"let tipoComp of tiposComprobantesRel | async\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                                {{tipoComp.descripcion}}\\r\\n                                            </option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-7\\\">\\r\\n                                    <div class=\\\"form-group inline-group\\\">\\r\\n                                        <label for=\\\"cteNro\\\">Nro:</label>\\r\\n                                        <!-- (blur)=\\\"onBlurNumeroAutocomp($event)('puntoVenta')('comprobanteRelacionado')\\\"  -->\\r\\n                                        <input autocomplete=\\\"off\\\"  maxlength=\\\"4\\\"\\r\\n                                            name=\\\"ptoVentaCompRel\\\"\\r\\n                                            [attr.disabled]=\\\"comprobanteRelacionado.todosLosPendientes ? '' : null\\\"\\r\\n                                            (blur)=\\\"onBlurPtoVentaCteRel($event)\\\"\\r\\n                                            [(ngModel)]=\\\"comprobanteRelacionado.puntoVenta\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            class=\\\"form-control pre-numero-input text-right\\\"\\r\\n                                            id=\\\"puntoVenta\\\" placeholder=\\\"\\\">\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                            maxlength=\\\"8\\\"\\r\\n                                            name=\\\"nroCompRel\\\"\\r\\n                                            [attr.disabled]=\\\"comprobanteRelacionado.todosLosPendientes ? '' : null\\\"\\r\\n                                            (blur)=\\\"onBlurNumeradorCteRel($event)\\\"\\r\\n                                            [(ngModel)]=\\\"comprobanteRelacionado.numero\\\"\\r\\n                                            type=\\\"text\\\"\\r\\n                                            class=\\\"form-control text-right\\\" id=\\\"numero\\\" placeholder=\\\"\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-9\\\">\\r\\n                                    <div class=\\\"checkbox-todoPendiente\\\">\\r\\n                                        <ba-checkbox\\r\\n                                                        [(ngModel)]=\\\"comprobanteRelacionado.todosLosPendientes\\\"\\r\\n                                                        name=\\\"todosPendient\\\"\\r\\n                                                        [label]=\\\"'Todos los pendientes'\\\"\\r\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                                        </ba-checkbox>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col-sm-3 btn-container\\\">\\r\\n                                    <button [disabled]=\\\"\\r\\n                                        !comprobanteRelacionado.todosLosPendientes &&\\r\\n                                        !(\\r\\n                                            comprobanteRelacionado.puntoVenta &&\\r\\n                                            comprobanteRelacionado.numero\\r\\n                                        ) ||\\r\\n                                        !(\\r\\n                                            proveedorSeleccionado &&\\r\\n                                            proveedorSeleccionado.padronCodigo\\r\\n                                        )\\r\\n                                    \\\" (click)=\\\"onClickBuscarPendientes()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Buscar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ng-template>\\r\\n                    </ngb-tab>\\r\\n                </ngb-tabset>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <ngb-tabset [destroyOnHide]=false class=\\\"col-sm-12 tabs-ingreso\\\">\\r\\n                <ngb-tab title=\\\"Articulos\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-ingreso  [data]=\\\"tablas.datos.productosPend\\\"  id=\\\"tbl-ingreso\\\"\\r\\n                                        [columns]=\\\"tablas.columnas.columnasProductos\\\"\\r\\n                                        [remove]=\\\"onClickRemove\\\"\\r\\n                                        [add]=\\\"comprobante\\\"\\r\\n                                        [edit]=\\\"onClickEdit('columnasProductos')\\\"\\r\\n                                        [confirmEdit]=\\\"onClickConfirmEdit('columnasProductos')\\\"\\r\\n                                        [onClickProductoLista]=\\\"onClickProductoLista\\\"\\r\\n                                        [enableAddItem]=\\\"verificoRelacionadoObligatorio(estadoRelacionadoObligatorio)\\\"\\r\\n                                        [comprobante]=\\\"comprobante\\\"\\r\\n                                        [customsBlur]=\\\"customsBlurProduct\\\"\\r\\n                                        >\\r\\n                        </tabla-ingreso>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab\\r\\n                    title=\\\"Trazabilidad\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        comprobante &&\\r\\n                        comprobante.tipo &&\\r\\n                        comprobante.tipo.comprobante &&\\r\\n                        comprobante.tipo.comprobante.idSisComprobantes !== 1 \\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <tabla-ingreso  [data]=\\\"comprobanteCompraService.getOnlyTrazables(tablas.datos.productosPend)\\\"\\r\\n                                        [columns]=\\\"tablas.columnas.columnasTrazabilidad\\\"\\r\\n                                        [edit]=\\\"onClickEdit('columnasTrazabilidad')\\\"\\r\\n                                        [confirmEdit]=\\\"onClickConfirmEdit('columnasTrazabilidad')\\\"\\r\\n                                        [onClickProductoLista]=\\\"onClickProductoLista\\\">\\r\\n                        </tabla-ingreso>\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab>\\r\\n                    <ng-template ngbTabTitle>\\r\\n                        <!-- <div (click)=\\\"fetchFacturas()\\\">Subtotales</div> -->\\r\\n                        <div [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\">Subtotales</div>\\r\\n                    </ng-template>\\r\\n                    <ng-template ngbTabContent>\\r\\n\\r\\n                        <div *ngIf=\\\"comprobante.tipo && comprobante.tipo.comprobante.idSisComprobantes === 1\\\" class=\\\"row factura-filters\\\">\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                <div class=\\\"form-group inline-group\\\">\\r\\n                                    <label for=\\\"cteTipo\\\">Cte:</label>\\r\\n                                    <select name=\\\"tipoFactu\\\" [(ngModel)]=\\\"factura.tipo\\\" class=\\\"form-control without-padding\\\"\\r\\n                                     [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\" id=\\\"cteTipo\\\">\\r\\n                                        <option *ngFor=\\\"let tipoComp of tiposComprobantesFactura | async\\\" [ngValue]=\\\"tipoComp\\\">\\r\\n                                            {{tipoComp.descCorta}}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-1\\\">\\r\\n                                <div class=\\\"form-group inline-group\\\">\\r\\n                                    <select *ngIf=\\\"factura && factura.tipo && factura.tipo.letrasCodigos\\\" name=\\\"letraFactu\\\"\\r\\n                                        [(ngModel)]=\\\"factura.letraCodigo\\\" class=\\\"form-control\\\" id=\\\"cteTipoFactura\\\">\\r\\n                                        <option *ngFor=\\\"let lc of factura.tipo.letrasCodigos\\\" [ngValue]=\\\"lc\\\">\\r\\n                                            {{ lc.letra.letra }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                                <div *ngIf=\\\"\\r\\n                                    factura &&\\r\\n                                    factura.letraCodigo &&\\r\\n                                    factura.letraCodigo.numeradores &&\\r\\n                                    factura.letraCodigo.numeradores.length > 0\\r\\n                                    \\\">\\r\\n                                    <select     id=\\\"selectPtoVentaNum\\\"\\r\\n                                                class=\\\"form-control\\\"\\r\\n                                                [ngStyle]=\\\"{padding: '1px 8px 0px 8px'}\\\"\\r\\n                                                [(ngModel)]=\\\"factura.numerador\\\"\\r\\n                                                name=\\\"nroFactu\\\">\\r\\n                                        <option *ngFor=\\\"let upNum of factura.letraCodigo.numeradores\\\" [ngValue]=\\\"upNum\\\">\\r\\n                                            {{\\r\\n                                                upNum.ptoVenta.ptoVenta.toString().padStart(4, '0')\\r\\n                                            }} - {{\\r\\n                                                upNum.numerador.toString().padStart(8, '0')\\r\\n                                            }}\\r\\n                                        </option>\\r\\n                                    </select>\\r\\n                                </div>\\r\\n\\r\\n                                <!-- !(\\r\\n                                    factura &&\\r\\n                                    factura.tipo &&\\r\\n                                    factura.tipo.numerador &&\\r\\n                                    factura.tipo.numerador.length > 0\\r\\n                                    ) -->\\r\\n                                    <!-- *ngIf=\\\"ngIfNumeradorFactura()\\\"  -->\\r\\n                                    <div\\r\\n                                        *ngIf=\\\"comprobanteService.comprobanteContainNumerador(factura)\\\"\\r\\n                                        class=\\\"form-group inline-group\\\">\\r\\n                                    <label for=\\\"cteNro\\\">Nro:</label>\\r\\n\\r\\n                                    <input autocomplete=\\\"off\\\"   required\\r\\n                                        maxlength=\\\"4\\\"\\r\\n                                        (blur)=\\\"\\r\\n                                            factura.numerador && factura.numerador.ptoVenta ?\\r\\n                                                factura.numerador.ptoVenta.ptoVenta = factura.numerador.ptoVenta.ptoVenta.toString().padStart(4, '0') : null\\r\\n                                        \\\"\\r\\n                                        name=\\\"ptoVentaFact\\\"\\r\\n                                        [(ngModel)]=\\\"factura.numerador.ptoVenta.ptoVenta\\\"\\r\\n                                        type=\\\"text\\\" class=\\\"form-control pre-numero-input text-right\\\" id=\\\"puntoVentaFact\\\" placeholder=\\\"\\\">\\r\\n                                    <input autocomplete=\\\"off\\\"   required\\r\\n                                        maxlength=\\\"8\\\"\\r\\n                                        (blur)=\\\"\\r\\n                                            factura.numerador.numerador = factura.numerador.numerador.toString().padStart(8, '0')\\r\\n                                        \\\"\\r\\n                                        name=\\\"numeroFact\\\"\\r\\n                                        [(ngModel)]=\\\"factura.numerador.numerador\\\"\\r\\n                                        type=\\\"text\\\" class=\\\"form-control text-right\\\" id=\\\"numeroFact\\\" placeholder=\\\"\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                                <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                                    <label for=\\\"fechaComprobante\\\">Fecha Contable</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n\\r\\n                                        <input autocomplete=\\\"off\\\"\\r\\n                                                (blur)=\\\"onCalculateFecha($event)('fechaContable')('factura')\\\"\\r\\n                                                (keyup.enter)=\\\"onCalculateFecha($event)('fechaContable')('factura')\\\"\\r\\n                                                class=\\\"form-control\\\" placeholder=\\\"dd/mm/aaaa\\\" name=\\\"dp\\\" [(ngModel)]=\\\"factura.fechaContable\\\" ngbDatepicker #dComp=\\\"ngbDatepicker\\\">\\r\\n                                        <!-- <input autocomplete=\\\"off\\\"  class=\\\"form-control\\\" placeholder=\\\"dd/mm/aaaa\\\" name=\\\"dp\\\" [(ngModel)]=\\\"factura.fechaContable\\\" ngbDatepicker #dComp=\\\"ngbDatepicker\\\"> -->\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dComp.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                                <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-3\\\">\\r\\n                                <div class=\\\"form-group inline-group last-child-custom-card\\\">\\r\\n                                    <label for=\\\"fechaVto\\\">Fecha Vto</label>\\r\\n                                    <div class=\\\"input-group\\\">\\r\\n                                        <input autocomplete=\\\"off\\\"   (blur)=\\\"onCalculateFecha($event)('fechaVto')('factura')\\\"\\r\\n                                                (keyup.enter)=\\\"onCalculateFecha($event)('fechaVto')('factura')\\\"\\r\\n                                                id=\\\"fechaVtoFactura\\\" class=\\\"form-control\\\" placeholder=\\\"dd/mm/aaaa\\\" name=\\\"dp\\\" [(ngModel)]=\\\"factura.fechaVto\\\" ngbDatepicker #dVto=\\\"ngbDatepicker\\\">\\r\\n                                        <div class=\\\"input-group-append\\\">\\r\\n                                            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dVto.toggle()\\\" type=\\\"button\\\" style=\\\"height: 100%;\\\">\\r\\n                                                <img src=\\\"assets/img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\" />\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"subtotales-container\\\">\\r\\n                            <div class=\\\"subtotales-titulo\\\">\\r\\n                                <p>Subtotales</p>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"subtotales-content\\\">\\r\\n                                <tabla-ingreso  [data]=\\\"tablas.datos.modelosFactura\\\"\\r\\n                                                [columns]=\\\"tablas.columnas.columnasFactura\\\"\\r\\n                                                [edit]=\\\"onClickEdit('columnasFactura')\\\"\\r\\n                                                [confirmEdit]=\\\"onClickConfirmEdit('columnasFactura')\\\"\\r\\n                                                [tablaSubtotales]=\\\"true\\\"\\r\\n                                                [comprobante]=\\\"comprobante\\\"\\r\\n                                                >\\r\\n                                </tabla-ingreso>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab title=\\\"Forma Pago\\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <tabla-ingreso  [data]=\\\"tablas.datos.detallesFormaPago\\\"\\r\\n                                        [columns]=\\\"tablas.columnas.columnasDetallesFp\\\"\\r\\n                                        [edit]=\\\"onClickEdit('columnasDetallesFp')\\\"\\r\\n                                        [confirmEdit]=\\\"onClickConfirmEdit('columnasDetallesFp')\\\">\\r\\n                        </tabla-ingreso>\\r\\n\\r\\n                        <div class=\\\"resto-pagar\\\">\\r\\n                            <label class=\\\"resto-pagar-content\\\">Resto Pagar: {{ calcRestoPagar() }}</label>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab\\r\\n                    title=\\\"Cond. Comercialización\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        comprobante &&\\r\\n                        comprobante.tipo &&\\r\\n                        comprobante.tipo.comprobante &&\\r\\n                        comprobante.tipo.comprobante.idSisComprobantes !== 4\\r\\n                    \\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <div class=\\\"each-input check\\\">\\r\\n                                <input [disabled]=\\\"condicionesConfirmadas\\\" class=\\\"align-check\\\" name=\\\"pesificado\\\" [(ngModel)]=\\\"pesificado\\\" type=\\\"checkbox\\\">Pesificado\\r\\n                                <input [disabled]=\\\"condicionesConfirmadas\\\" class=\\\"align-check\\\" name=\\\"dolarizadoAlVto\\\" [(ngModel)]=\\\"dolarizadoAlVto\\\" type=\\\"checkbox\\\">Dolarizado al vencimiento\\r\\n                                <input [disabled]=\\\"condicionesConfirmadas\\\" class=\\\"align-check\\\" name=\\\"canjeInsumos\\\" [(ngModel)]=\\\"canjeInsumos\\\" type=\\\"checkbox\\\">Canje insumos\\r\\n                            </div>\\r\\n                            <div class=\\\"each-input\\\"><label for=\\\"interesMensualCompra\\\">Interés mensual de compra:</label>\\r\\n                            <input [disabled]=\\\"condicionesConfirmadas\\\" autocomplete=\\\"off\\\"   required\\r\\n                                            maxlength=\\\"6\\\"\\r\\n                                            name=\\\"interesMensualCompra\\\"\\r\\n                                            [(ngModel)]=\\\"interesMensualCompra\\\"\\r\\n                                            type=\\\"number\\\" class=\\\"form-control cond-cotiza pre-numero-input text-right\\\" id=\\\"interesMensualCompra\\\" placeholder=\\\"\\\">%</div>\\r\\n                            <div class=\\\"each-input\\\"><label for=\\\"tipoCambio\\\">Tipo de cambio:</label>\\r\\n                                <select\\r\\n                                    [disabled]=\\\"condicionesConfirmadas\\\"\\r\\n                                    required\\r\\n                                    class=\\\"form-control without-padding cond-cotiza\\\"\\r\\n                                    name=\\\"tipoCambio\\\"\\r\\n                                    [(ngModel)]=\\\"tipoCambio\\\"\\r\\n                                    id=\\\"tipoCambio\\\">\\r\\n                                    <option [value]=\\\"'divisa'\\\">\\r\\n                                        Divisa\\r\\n                                    </option>\\r\\n                                    <option [value]=\\\"'billete'\\\">\\r\\n                                        Billete\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-12 btn-container-2\\\">\\r\\n                                <button\\r\\n                                        name=\\\"confirmaCondiciones\\\"\\r\\n                                        [disabled]=\\\"condicionesConfirmadas\\\"\\r\\n                                        (click)=\\\"onClickConfirmCondiciones()\\\"\\r\\n                                        class=\\\"btn btn-primary btn-ingreso-from btn-space\\\"\\r\\n                                        >\\r\\n                                    Confirmar\\r\\n                                </button>\\r\\n\\r\\n                                <button [disabled]=\\\"!condicionesConfirmadas\\\" (click)=\\\"onClickCancelarCondiciones()\\\" class=\\\"btn btn-primary btn-space btn-ingreso-from\\\">\\r\\n                                    Cancelar\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n                <ngb-tab\\r\\n                    title=\\\"Ajuste total\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        comprobante &&\\r\\n                        comprobante.tipo &&\\r\\n                        comprobante.tipo.comprobante &&\\r\\n                        comprobante.tipo.comprobante.idSisComprobantes !== 2\\r\\n                    \\\">\\r\\n                    <ng-template ngbTabContent>\\r\\n                        <div class=\\\"container\\\">\\r\\n                            <div class=\\\"each-input\\\"><label for=\\\"valorRealFactura\\\">Total de la factura (AR$):</label>\\r\\n                            <input [disabled]=\\\"ajusteConfirmado\\\" autocomplete=\\\"off\\\"   required\\r\\n                                            maxlength=\\\"6\\\"\\r\\n                                            name=\\\"valorRealFactura\\\"\\r\\n                                            [(ngModel)]=\\\"valorRealFactura\\\"\\r\\n                                            type=\\\"number\\\" class=\\\"form-control cond-cotiza pre-numero-input text-right\\\" id=\\\"valorRealFactura\\\" placeholder=\\\"\\\">\\r\\n                                            <div class=\\\"tooltip\\\">i\\r\\n                                                <span class=\\\"tooltiptext\\\">Ingrese el valor real total de la factura en AR$, este debe poseer una diferencia menor a 10 AR$ con el total calculado por el sistema, caso contrario contacte al gerente.</span>\\r\\n                                              </div></div>\\r\\n                            <div class=\\\"col-sm-12 btn-container-2\\\">\\r\\n                                <button\\r\\n                                        name=\\\"ajusteConfirmado\\\"\\r\\n                                        [disabled]=\\\"ajusteConfirmado\\\"\\r\\n                                        (click)=\\\"onClickConfirmAjuste()\\\"\\r\\n                                        class=\\\"btn btn-primary btn-ingreso-from btn-space\\\"\\r\\n                                        >\\r\\n                                    Confirmar\\r\\n                                </button>\\r\\n\\r\\n                                <button [disabled]=\\\"!ajusteConfirmado\\\" (click)=\\\"onClickCancelarAjuste()\\\" class=\\\"btn btn-primary btn-space btn-ingreso-from\\\">\\r\\n                                    Cancelar\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ngb-tab>\\r\\n            </ngb-tabset>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row custom-card-container\\\">\\r\\n            <custom-card class=\\\"col-sm-5 card-observaciones card-flex-column\\\" title=\\\"Observaciones\\\">\\r\\n                <textarea name=\\\"obserss\\\" [(ngModel)]=\\\"comprobante.observaciones\\\" class=\\\"form-control text-area-observaciones\\\" id=\\\"observaciones\\\"></textarea>\\r\\n            </custom-card>\\r\\n\\r\\n            <div class=\\\"col-sm-5 card-total card-flex-column\\\">\\r\\n\\r\\n                <custom-card title=\\\"Totales\\\">\\r\\n                    <div class=\\\"card-total-content\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <div class=\\\"total-item\\\">\\r\\n                                    <label class=\\\"titulo-cotizacion\\\">Cotizacion Dolar: </label>\\r\\n                                    <!--<label>{{utilsService.parseDecimal(cotizacionDatos.cotizacion.cotizacion)}}</label>-->\\r\\n                                    <input autocomplete=\\\"off\\\"   required\\r\\n                                        maxlength=\\\"6\\\"\\r\\n                                        name=\\\"cotDolarEditada\\\"\\r\\n                                        [(ngModel)]=\\\"cotizacionDolarEditada\\\"\\r\\n                                        (ngModelChange)=\\\"onChangeCotDolar()\\\"\\r\\n                                        type=\\\"text\\\" class=\\\"form-control pre-numero-input text-right\\\" id=\\\"cotDolarEditada\\\" placeholder=\\\"\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-sm-6\\\">\\r\\n                                <div class=\\\"total-item\\\" id=\\\"fechaComprobante\\\">\\r\\n                                    <label class=\\\"titulo-cotizacion\\\">Fecha: </label>\\r\\n                                    <label>{{cotizacionDatos.cotizacion.fechaCotizacion | date:'dd/MM/yyyy'}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Neto: </label>\\r\\n                                <label>{{utilsService.parseDecimal(cotizacionDatos.total)}}</label>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Cte: </label>\\r\\n                                <label>{{utilsService.parseDecimal(cotizacionDatos.total + sumatoriaSubtotales)}}</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"comprobante.moneda && comprobante.moneda.idMoneda == 2\\\" class=\\\"row\\\">\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Neto(AR$): </label>\\r\\n                                <label>{{utilsService.parseDecimal(cotizacionDatos.total * cotizacionDolarEditada)}}</label>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"total-comprobante col-sm-6 total-item\\\">\\r\\n                                <label class=\\\"titulo-cotizacion\\\">Total Cte(AR$): </label>\\r\\n                                <label>{{utilsService.parseDecimal((cotizacionDatos.total + sumatoriaSubtotales) * cotizacionDolarEditada)}}</label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </custom-card>\\r\\n                           <!-- [disabled]=\\\"isDisabledConfirm()\\\"-->\\r\\n            </div>\\r\\n\\r\\n            <custom-card class=\\\"col-sm-2 card-flex-column\\\" title=\\\"_\\\">\\r\\n                <div class=\\\"col-sm-12 btn-container\\\">\\r\\n                    <button   [disabled]=isDisabledConfirm()\\r\\n                            (click)=\\\"onClickConfirmar()\\\"\\r\\n                            class=\\\"btn btn-primary btn-ingreso-from\\\">\\r\\n                        Confirmar\\r\\n                    </button>\\r\\n\\r\\n                    <button (click)=\\\"onClickCancelar()\\\" class=\\\"btn btn-primary btn-ingreso-from\\\">\\r\\n                        Cancelar\\r\\n                    </button>\\r\\n                </div>\\r\\n            </custom-card>\\r\\n        </div>\\r\\n    </form>\\r\\n</ba-card>\\r\\n\\r\\n<div *ngIf=\\\"valueGuardandoCompro !== 0\\\" class=\\\"spinner-container\\\">\\r\\n    <p class=\\\"title\\\">\\r\\n        Guardando Comprobante\\r\\n    </p>\\r\\n    <p><ngb-progressbar [value]=\\\"valueGuardandoCompro\\\" type=\\\"info\\\"></ngb-progressbar></p>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.html\n// module id = ./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.html\n// module chunks = compras.module","module.exports = \".comprobante-compra {\\n  font-size: 10px; }\\n  .comprobante-compra .checkbox-todoPendiente {\\n    padding-left: 5%; }\\n  .comprobante-compra .tabs-ingreso {\\n    padding: 1.5%; }\\n  .comprobante-compra .tabs-ingreso .subtotales-container {\\n      padding: 0 5% 1%;\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex; }\\n  .comprobante-compra .tabs-ingreso .subtotales-container .subtotales-titulo {\\n        font-size: 1rem;\\n        margin: 3px 24px 0px 0; }\\n  .comprobante-compra .tabs-ingreso .subtotales-container .subtotales-content {\\n        border-radius: 7px;\\n        background: #d4d4de;\\n        width: 90%; }\\n  .comprobante-compra .tabs-ingreso .subtotales-container .subtotales-content td {\\n          border-top: 0px !important; }\\n  .comprobante-compra .tabs-ingreso .resto-pagar {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: end;\\n          -ms-flex-pack: end;\\n              justify-content: flex-end; }\\n  .comprobante-compra .tabs-ingreso .resto-pagar .resto-pagar-content {\\n        padding: 5px 3px 3px; }\\n  .comprobante-compra .lista-filtrada-proveedores {\\n    position: absolute;\\n    z-index: 9999999;\\n    /* opacity: 0; */\\n    top: 81px;\\n    left: 77px; }\\n  .comprobante-compra .tipo-compra-dropdown {\\n    padding: 0 2%;\\n    margin-bottom: 1px; }\\n  .comprobante-compra .custom-card .custom-card-content .inline-group .without-padding {\\n    padding: 2px 8px 0px 8px !important; }\\n  .comprobante-compra .custom-card .custom-card-content .observaciones {\\n    margin-bottom: 2px; }\\n  .comprobante-compra .custom-card-container .card-observaciones .observaciones {\\n    padding: 1%; }\\n  .comprobante-compra .custom-card-container .card-total .card-total-content {\\n    padding: 1.7%; }\\n  .comprobante-compra .custom-card-container .card-total .card-total-content .total-item {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: justify;\\n          -ms-flex-pack: justify;\\n              justify-content: space-between; }\\n  .comprobante-compra .custom-card-container .deposito {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-pack: end;\\n        -ms-flex-pack: end;\\n            justify-content: flex-end;\\n    margin-top: 8px; }\\n  .comprobante-compra .custom-card-container .deposito div {\\n      margin-bottom: 5px;\\n      width: 50%; }\\n  .comprobante-compra .custom-card-container .deposito .padding-content {\\n      margin-bottom: 0 !important; }\\n  .comprobante-compra .custom-card-container .card-comprobantes :host /deep/ .custom-card {\\n    height: auto !important; }\\n  .comprobante-compra .btn-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column; }\\n  .comprobante-compra .btn-container .btn-ingreso-from {\\n      float: none;\\n      margin: 7% 0; }\\n  .comprobante-compra .total-comprobante {\\n    padding-top: 2%; }\\n  .comprobante-compra .titulo-cotizacion {\\n    font-weight: bold; }\\n  .comprobante-compra .card-flex-column {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column; }\\n  .comprobante-compra .pre-numero-input {\\n    width: 30%;\\n    margin-right: 3px; }\\n  .comprobante-compra .comp-relacionado-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column; }\\n  .comprobante-compra .tabs-opciones {\\n    display: block; }\\n  .comprobante-compra .tabs-opciones .fpago-content {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: justify;\\n          -ms-flex-pack: justify;\\n              justify-content: space-between; }\\n  .comprobante-compra .tabs-opciones .fpago-content .fpago-tabla {\\n        width: 100%; }\\n  .comprobante-compra .tabs-opciones .fpago-content .txt-area-container {\\n        width: 48%; }\\n  .comprobante-compra .tabs-opciones .fpago-content .txt-area-container .text-area-forma-pago {\\n          height: 78px;\\n          color: #000;\\n          font-size: 0.8rem; }\\n  .comprobante-compra .tabs-opciones .fpago-content .txt-area-container .txt-header {\\n          display: -webkit-box;\\n          display: -ms-flexbox;\\n          display: flex; }\\n  .comprobante-compra .tabs-opciones .fpago-content .txt-area-container .txt-header > select {\\n            width: 18%;\\n            height: 19px;\\n            margin: 0px 8px 6px; }\\n  .comprobante-compra .tabs-opciones .fpago-content .txt-area-container .txt-header > label {\\n            margin-top: 2px; }\\n  .comprobante-compra .spinner-prov-container {\\n    padding-top: 5.3px;\\n    right: 21px;\\n    position: absolute; }\\n  .without-padding {\\n  padding: 0 !important;\\n  padding-left: 2px !important; }\\n  .inline-flex {\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex; }\\n  .spinner-container {\\n  position: absolute;\\n  top: 40%;\\n  left: 23%;\\n  display: block;\\n  min-width: 47%;\\n  z-index: 9999;\\n  background: #d4d4dede;\\n  padding: 3%;\\n  border-radius: 12px; }\\n  .spinner-container .title {\\n    text-align: center;\\n    font-size: 1rem;\\n    padding-bottom: 3px;\\n    font-family: -apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, sans-serif; }\\n  .cond-cotiza {\\n  display: inline;\\n  width: 7rem !important; }\\n  .container {\\n  padding-left: 1.5rem; }\\n  .each-input {\\n  margin-bottom: 5px; }\\n  .check {\\n  display: block;\\n  padding-left: 15px;\\n  text-indent: -15px; }\\n  .align-check {\\n  width: 13px;\\n  height: 13px;\\n  padding: 0;\\n  margin: 0;\\n  vertical-align: bottom;\\n  position: relative;\\n  top: -1px;\\n  *overflow: hidden; }\\n  :host /deep/ .comprobante-compra .tabs-ingreso .tab-content {\\n  padding: 2px 0px !important; }\\n  .btn-container-2 {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -ms-flex-direction: row;\\n  flex-direction: row; }\\n  .btn-space {\\n  margin-left: 10px; }\\n  /* Tooltip container */\\n  .tooltip {\\n  position: relative;\\n  display: inline-block;\\n  border-bottom: 1px dotted black;\\n  /* If you want dots under the hoverable text */ }\\n  /* Tooltip text */\\n  .tooltip .tooltiptext {\\n  visibility: hidden;\\n  width: 120px;\\n  background-color: #555;\\n  color: #fff;\\n  text-align: center;\\n  padding: 5px 0;\\n  border-radius: 6px;\\n  /* Position the tooltip text */\\n  position: absolute;\\n  z-index: 1;\\n  bottom: 125%;\\n  left: 50%;\\n  margin-left: -60px;\\n  /* Fade in tooltip */\\n  opacity: 0;\\n  -webkit-transition: opacity 0.3s;\\n  transition: opacity 0.3s; }\\n  /* Tooltip arrow */\\n  .tooltip .tooltiptext::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 100%;\\n  left: 50%;\\n  margin-left: -5px;\\n  border-width: 5px;\\n  border-style: solid;\\n  border-color: #555 transparent transparent transparent; }\\n  /* Show the tooltip text when you mouse over the tooltip container */\\n  .tooltip:hover .tooltiptext {\\n  visibility: visible;\\n  opacity: 1; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.scss\n// module id = ./src/app/pages/main/compras/comprobanteCompra/comprobanteCompra.scss\n// module chunks = compras.module","export * from './comprobanteCompra.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/comprobanteCompra/index.ts","export * from './compras.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/main/compras/index.ts"],"sourceRoot":"webpack:///"}